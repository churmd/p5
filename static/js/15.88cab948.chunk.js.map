{"version":3,"sources":["sketches/maurerRose/MaurerRose.jsx"],"names":["MaurerRose","props","sketch","p","cnvWidth","cnvHeight","size","nSlider","dSlider","n","d","play","setup","windowWidth","windowHeight","createCanvas","style","min","createControls","draw","background","push","translate","drawMaurerRose","drawRose","pop","value","angleMode","RADIANS","noFill","strokeWeight","stroke","beginShape","i","TWO_PI","r","sin","vertexFromPolar","endShape","DEGREES","k","theta","x","cos","y","vertex","controls","createDiv","sliderDiv","parent","nDiv","createSlider","dDiv","buttonDiv","pauseButton","createButton","mousePressed","text","html","resetButton","windowResized","resizeCanvas","myRef","React","createRef","this","myP5","p5","current","ref","Component"],"mappings":"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","file":"static/js/15.88cab948.chunk.js","sourcesContent":["import React from \"react\";\nimport p5 from \"p5\";\n\nclass MaurerRose extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let cnvWidth, cnvHeight;\n        let n = 1;\n        let d = 0;\n        let maxN = 20;\n        let maxD = 360;\n        let play = true;\n        let size;\n        let nSlider, dSlider;\n\n        p.setup = () => {\n            cnvWidth = p.windowWidth;\n            cnvHeight = p.windowHeight * 0.9;\n            var cnv = p.createCanvas(cnvWidth, cnvHeight);\n            cnv.style(\"display\", \"block\");\n            size = p.min(cnvWidth / 2, cnvHeight / 2) - 2;\n\n            this.createControls();\n        };\n\n        p.draw = () => {\n            p.background(51);\n\n            p.push();\n            p.translate(cnvWidth / 2, cnvHeight / 2);\n            this.drawMaurerRose();\n            this.drawRose();\n            p.pop();\n\n            if (play) {\n                if (n > maxN) {\n                    n = 1;\n                    d = 0;\n                } else if (d < maxD) {\n                    d += 0.5;\n                } else {\n                    d = 0;\n                    n++;\n                }\n                nSlider.value(n);\n                dSlider.value(d);\n            } else {\n                n = nSlider.value();\n                d = dSlider.value();\n            }\n        };\n\n        this.drawRose = () => {\n            p.push();\n            p.angleMode(p.RADIANS);\n            p.noFill();\n            p.strokeWeight(2);\n            p.stroke(255, 0, 0);\n            p.beginShape();\n            for (let i = 0; i < p.TWO_PI; i += p.TWO_PI / 360) {\n                let r = size * p.sin(n * i);\n                this.vertexFromPolar(r, i);\n            }\n            p.endShape();\n            p.pop();\n        };\n\n        this.drawMaurerRose = () => {\n            p.push();\n            p.angleMode(p.DEGREES);\n            p.noFill();\n            p.strokeWeight(2);\n            p.stroke(0, 0, 255);\n            p.beginShape();\n            for (let i = 0; i < 361; i++) {\n                let k = i * d;\n                let r = size * p.sin(n * k);\n                this.vertexFromPolar(r, k);\n            }\n            p.endShape();\n            p.pop();\n        };\n\n        this.vertexFromPolar = (r, theta) => {\n            let x = r * p.cos(theta);\n            let y = r * p.sin(theta);\n            return p.vertex(x, y);\n        };\n\n        this.createControls = () => {\n            let controls = p.createDiv();\n\n            let sliderDiv = p.createDiv();\n            sliderDiv.style(\"width\", \"50%\");\n            sliderDiv.style(\"display\", \"inline-block\");\n            sliderDiv.style(\"text-align\", \"center\");\n            sliderDiv.parent(controls);\n\n            let nDiv = p.createDiv(\"N value\");\n            nDiv.parent(sliderDiv);\n\n            nSlider = p.createSlider(1, maxN, n, 1);\n            nSlider.parent(nDiv);\n\n            let dDiv = p.createDiv(\"D value\");\n            dDiv.parent(sliderDiv);\n\n            dSlider = p.createSlider(0, maxD, d, 1);\n            dSlider.parent(dDiv);\n\n            let buttonDiv = p.createDiv();\n            buttonDiv.style(\"width\", \"50%\");\n            buttonDiv.style(\"display\", \"inline-block\");\n            buttonDiv.style(\"text-align\", \"center\");\n            buttonDiv.parent(controls);\n\n            let pauseButton = p.createButton(\"Pause\");\n            pauseButton.parent(buttonDiv);\n            pauseButton.mousePressed(() => {\n                play = !play;\n                let text = play ? \"Pause\" : \"Play\";\n                pauseButton.html(text);\n            });\n\n            let resetButton = p.createButton(\"Reset\");\n            resetButton.parent(buttonDiv);\n            resetButton.mousePressed(() => {\n                n = 1;\n                d = 0;\n            });\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(p.windowWidth, p.windowHeight);\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    render() {\n        return <div ref={this.myRef}></div>;\n    }\n}\nexport default MaurerRose;\n"],"sourceRoot":""}