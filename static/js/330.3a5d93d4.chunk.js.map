{"version":3,"file":"static/js/330.3a5d93d4.chunk.js","mappings":"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","sources":["sketches/flockingSimulation/Bird.js","sketches/flockingSimulation/FlockingSimulation.jsx"],"sourcesContent":["import p5 from \"p5\";\n\nexport default class Bird {\n    constructor(p, x, y, id) {\n        this.p = p;\n        this.uuid = id;\n        this.pos = this.p.createVector(x, y);\n        this.r = 5;\n        this.heading = this.p.createVector(\n            this.p.random(-1, 1),\n            this.p.random(-1, 1)\n        );\n    }\n\n    show(neighbourhood, showNeighbourhood) {\n        this.p.push();\n\n        this.p.translate(this.pos.x, this.pos.y);\n        this.p.rotate(this.heading.heading() + this.p.PI / 2);\n\n        if (showNeighbourhood) {\n            this.p.push();\n            this.p.fill(255, 50);\n            this.p.noStroke();\n            this.p.ellipse(0, 0, neighbourhood * 2, neighbourhood * 2);\n            this.p.pop();\n        }\n\n        this.p.fill(255);\n        this.p.triangle(-10, 10, 0, -10, 10, 10);\n\n        this.p.pop();\n    }\n\n    update(birds, sepMult, alignMult, cohMult, neighbourhood, maxX, maxY) {\n        const otherBirds = birds.filter((bird) => {\n            const distance = this.p.dist(\n                this.pos.x,\n                this.pos.y,\n                bird.pos.x,\n                bird.pos.y\n            );\n            return bird.uuid !== this.uuid && distance < neighbourhood;\n        });\n\n        const sepHeading = this.separate(otherBirds).mult(sepMult);\n        const alignHeading = this.align(otherBirds).mult(alignMult);\n        const cohHeading = this.cohesion(otherBirds).mult(cohMult);\n\n        const desiredHeading = this.p.createVector(0, 0);\n        desiredHeading.add(sepHeading);\n        desiredHeading.add(alignHeading);\n        desiredHeading.add(cohHeading);\n        desiredHeading.normalize();\n\n        this.changeHeading(desiredHeading);\n\n        this.pos.add(this.heading);\n        this.keepInBounds(0, 0, maxX, maxY);\n    }\n\n    // Move away from other birds in the flock to avoid crowding\n    separate(birds) {\n        let acc = this.p.createVector(0, 0);\n\n        birds.forEach((bird) => {\n            let headingToBird = p5.Vector.sub(bird.pos, this.pos);\n            acc.add(headingToBird);\n        });\n\n        acc.normalize();\n        return acc.mult(-1);\n    }\n\n    // Steer towards the local heading of the flock\n    align(birds) {\n        let acc = this.p.createVector(0, 0);\n\n        birds.forEach((bird) => {\n            acc.add(bird.heading);\n        });\n\n        return acc.normalize();\n    }\n\n    // Move towards the center of the local flock\n    cohesion(birds) {\n        let acc = this.p.createVector(0, 0);\n\n        if (birds.length === 0) {\n            return acc;\n        }\n\n        birds.forEach((bird) => {\n            acc.add(bird.pos);\n        });\n\n        const avgPos = p5.Vector.div(acc, birds.length);\n        const headingToAvgPos = p5.Vector.sub(avgPos, this.pos);\n        return headingToAvgPos.normalize();\n    }\n\n    keepInBounds(minX, minY, maxX, maxY) {\n        const closestInbounds = this.pos.copy();\n\n        if (this.pos.x < minX) {\n            closestInbounds.x = minX;\n        }\n\n        if (this.pos.y < minY) {\n            closestInbounds.y = minY;\n        }\n\n        if (this.pos.x > maxX) {\n            closestInbounds.x = maxX;\n        }\n\n        if (this.pos.y > maxY) {\n            closestInbounds.y = maxY;\n        }\n\n        if (!closestInbounds.equals(this.pos)) {\n            const headingToInbounds = p5.Vector.sub(closestInbounds, this.pos);\n            this.changeHeading(headingToInbounds);\n        }\n    }\n\n    changeHeading(desiredHeading) {\n        const desiredHeadingRatio = 0.1;\n        const currentHeadingRatio = 1 - desiredHeadingRatio;\n        const desiredPart = p5.Vector.mult(desiredHeading, desiredHeadingRatio);\n        const currentPart = p5.Vector.mult(this.heading, currentHeadingRatio);\n        const newHeading = currentPart.add(desiredPart);\n        newHeading.normalize();\n        this.heading = newHeading;\n    }\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Bird from \"./Bird\";\nimport \"./FlockingSimulation.scss\";\n\nclass FlockingSimulation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let birds = [];\n        let sepMult = 50;\n        let alignMult = 50;\n        let cohMult = 40;\n        let neighbourhood = 100;\n        let sepMultSlider, alignMultSlider, cohMultSlider, neighbourhoodSlider;\n        let neighbourhoodCheckbox;\n\n        p.setup = () => {\n            var cnv = p.createCanvas(p.windowWidth, p.windowHeight * 0.9);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n\n            for (let i = 0; i < 100; i++) {\n                const rndX = p.random(0, p.windowWidth);\n                const rndY = p.random(0, p.windowHeight * 0.9);\n                birds.push(new Bird(p, rndX, rndY, i));\n            }\n\n            createControls();\n        };\n\n        p.draw = () => {\n            p.background(51);\n\n            sepMult = sepMultSlider.value();\n            alignMult = alignMultSlider.value();\n            cohMult = cohMultSlider.value();\n            neighbourhood = neighbourhoodSlider.value();\n\n            birds.forEach((bird) => {\n                bird.update(\n                    birds,\n                    sepMult,\n                    alignMult,\n                    cohMult,\n                    neighbourhood,\n                    p.windowWidth,\n                    p.windowHeight * 0.9\n                );\n                bird.show(neighbourhood, neighbourhoodCheckbox.checked());\n            });\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(p.windowWidth, p.windowHeight * 0.9);\n        };\n\n        function createControls() {\n            sepMultSlider = p.createSlider(0, 100, sepMult);\n            sepMultSlider.parent(\"sepDiv\");\n\n            alignMultSlider = p.createSlider(0, 100, alignMult);\n            alignMultSlider.parent(\"alignDiv\");\n\n            cohMultSlider = p.createSlider(0, 100, cohMult);\n            cohMultSlider.parent(\"cohDiv\");\n\n            neighbourhoodSlider = p.createSlider(0, 200, neighbourhood);\n            neighbourhoodSlider.parent(\"neighbourhoodDiv\");\n            neighbourhoodSlider.style(\"display\", \"inline-block\");\n\n            neighbourhoodCheckbox = p.createCheckbox(\"Show\", false);\n            neighbourhoodCheckbox.parent(\"neighbourhoodDiv\");\n            neighbourhoodCheckbox.style(\"display\", \"inline-block\");\n        }\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"sepDiv\").children[1].remove();\n        document.getElementById(\"alignDiv\").children[1].remove();\n        document.getElementById(\"cohDiv\").children[1].remove();\n        document.getElementById(\"neighbourhoodDiv\").children[1].remove();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <div id='canvas'></div>\n                <div id='controls'>\n                    <div id='sepDiv' className='slider'>\n                        <p>Separation</p>\n                    </div>\n                    <div id='alignDiv' className='slider'>\n                        <p>Alignment</p>\n                    </div>\n                    <div id='cohDiv' className='slider'>\n                        <p>Cohesion</p>\n                    </div>\n                    <div id='neighbourhoodDiv' className='slider'>\n                        <p>Neighbourhood</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default FlockingSimulation;\n"],"names":["Bird","constructor","p","x","y","id","this","uuid","pos","createVector","r","heading","random","show","neighbourhood","showNeighbourhood","push","translate","rotate","PI","fill","noStroke","ellipse","pop","triangle","update","birds","sepMult","alignMult","cohMult","maxX","maxY","otherBirds","filter","bird","distance","dist","sepHeading","separate","mult","alignHeading","align","cohHeading","cohesion","desiredHeading","add","normalize","changeHeading","keepInBounds","acc","forEach","headingToBird","p5","sub","length","avgPos","div","minX","minY","closestInbounds","copy","equals","headingToInbounds","desiredPart","newHeading","FlockingSimulation","React","props","super","sketch","sepMultSlider","alignMultSlider","cohMultSlider","neighbourhoodSlider","neighbourhoodCheckbox","setup","cnv","createCanvas","windowWidth","windowHeight","parent","style","i","rndX","rndY","createSlider","createCheckbox","draw","background","value","checked","windowResized","resizeCanvas","myRef","componentDidMount","myP5","current","componentWillUnmount","document","getElementById","replaceChildren","children","remove","render","_jsxs","ref","_jsx","className"],"sourceRoot":""}