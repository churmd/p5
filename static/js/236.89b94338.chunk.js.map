{"version":3,"file":"static/js/236.89b94338.chunk.js","mappings":"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","sources":["sketches/matrixRain/Symbol.jsx","sketches/matrixRain/Stream.jsx","sketches/matrixRain/MatrixRain.jsx"],"sourcesContent":["export default class Symbol {\n\tconstructor(p, x, y, velocity, isWhite) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.changeProb = this.p.random(0.5, 1);\n\t\tthis.velocity = velocity;\n\t\tthis.isWhite = isWhite;\n\t\tthis.setRandomSymbol();\n\t}\n\n\tsetRandomSymbol = () => {\n\t\tvar decimal = this.p.random(12448, 12543); //Katakana unicode range\n\t\tthis.value = String.fromCharCode(decimal);\n\t};\n\n\trender = () => {\n\t\tif (this.isWhite) {\n\t\t\tthis.p.fill(180, 255, 180);\n\t\t} else {\n\t\t\tthis.p.fill(0, 255, 70);\n\t\t}\n\t\tthis.p.text(this.value, this.x, this.y);\n\t};\n\n\tupdate = () => {\n\t\tif (this.p.random() > this.changeProb) {\n\t\t\tthis.setRandomSymbol();\n\t\t}\n\t\tif (this.y > this.p.height) {\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.y += this.velocity;\n\t\t}\n\t};\n}\n","import Symbol from \"./Symbol\";\n\nexport default class Stream {\n\tconstructor(p, x, symbolSize) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.symbolSize = symbolSize;\n\t\tthis.symbols = [];\n\t\tthis.setup();\n\t}\n\n\tsetup = () => {\n\t\tlet y = this.randomInt(-100, -1000);\n\t\tlet velocity = this.randomInt(1, 10);\n\t\tlet isWhite = this.p.random([true, false]);\n\n\t\tfor (let i = 0; i < this.calcStreamLen(); i++) {\n\t\t\tlet sym = new Symbol(this.p, this.x, y, velocity, isWhite);\n\t\t\tthis.symbols.push(sym);\n\t\t\ty -= this.symbolSize;\n\t\t\tisWhite = false;\n\t\t}\n\t};\n\n\trandomInt = (min, max) => {\n\t\treturn this.p.int(this.p.random(min, max));\n\t};\n\n\tcalcStreamLen = () => {\n\t\tlet maxLen = this.p.int(this.p.windowHeight / this.symbolSize);\n\t\tlet minLen = maxLen < 5 ? 1 : 5;\n\t\treturn this.randomInt(minLen, maxLen);\n\t};\n\n\tupdate = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].update();\n\t\t}\n\t};\n\n\trender = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].render();\n\t\t}\n\t};\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Stream from \"./Stream\";\n\nclass MatrixRain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let numStreams = 50;\n        let symbolSize;\n        let streams = [];\n\n        p.setup = () => {\n            var cnv = p.createCanvas(p.windowWidth, p.windowHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n            p.background(0);\n\n            this.createNewStreams();\n        };\n\n        this.createNewStreams = () => {\n            streams = [];\n\n            symbolSize = p.width / numStreams;\n            p.textSize(symbolSize);\n\n            let x = 0;\n            for (var i = 0; i <= numStreams; i++) {\n                var stream = new Stream(p, x, symbolSize);\n                streams.push(stream);\n                x += symbolSize;\n            }\n        };\n\n        p.draw = () => {\n            p.background(0, 100);\n            streams.forEach(function (s) {\n                s.render();\n                s.update();\n            });\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(p.windowWidth, p.windowHeight);\n            this.createNewStreams();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <div id='canvas'></div>\n            </div>\n        );\n    }\n}\nexport default MatrixRain;\n"],"names":["Symbol","p","x","y","velocity","isWhite","setRandomSymbol","decimal","random","value","String","fromCharCode","render","fill","text","update","changeProb","height","this","Stream","symbolSize","setup","randomInt","i","calcStreamLen","sym","symbols","push","min","max","int","maxLen","windowHeight","minLen","length","MatrixRain","props","sketch","streams","cnv","createCanvas","windowWidth","parent","style","background","createNewStreams","width","textSize","stream","draw","forEach","s","windowResized","resizeCanvas","myRef","React","myP5","p5","current","document","getElementById","replaceChildren","ref","id"],"sourceRoot":""}