{"version":3,"file":"static/js/500.0d80a1dd.chunk.js","mappings":"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","sources":["sketches/matrixRain/Symbol.jsx","sketches/matrixRain/Stream.jsx","sketches/matrixRain/MatrixRain.jsx"],"sourcesContent":["export default class Symbol {\n\tconstructor(p, x, y, velocity, isWhite) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.changeProb = this.p.random(0.5, 1);\n\t\tthis.velocity = velocity;\n\t\tthis.isWhite = isWhite;\n\t\tthis.setRandomSymbol();\n\t}\n\n\tsetRandomSymbol = () => {\n\t\tvar decimal = this.p.random(12448, 12543); //Katakana unicode range\n\t\tthis.value = String.fromCharCode(decimal);\n\t};\n\n\trender = () => {\n\t\tif (this.isWhite) {\n\t\t\tthis.p.fill(180, 255, 180);\n\t\t} else {\n\t\t\tthis.p.fill(0, 255, 70);\n\t\t}\n\t\tthis.p.text(this.value, this.x, this.y);\n\t};\n\n\tupdate = () => {\n\t\tif (this.p.random() > this.changeProb) {\n\t\t\tthis.setRandomSymbol();\n\t\t}\n\t\tif (this.y > this.p.height) {\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.y += this.velocity;\n\t\t}\n\t};\n}\n","import Symbol from \"./Symbol\";\n\nexport default class Stream {\n\tconstructor(p, x, symbolSize) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.symbolSize = symbolSize;\n\t\tthis.symbols = [];\n\t\tthis.setup();\n\t}\n\n\tsetup = () => {\n\t\tlet y = this.randomInt(-100, -1000);\n\t\tlet velocity = this.randomInt(1, 10);\n\t\tlet isWhite = this.p.random([true, false]);\n\n\t\tfor (let i = 0; i < this.calcStreamLen(); i++) {\n\t\t\tlet sym = new Symbol(this.p, this.x, y, velocity, isWhite);\n\t\t\tthis.symbols.push(sym);\n\t\t\ty -= this.symbolSize;\n\t\t\tisWhite = false;\n\t\t}\n\t};\n\n\trandomInt = (min, max) => {\n\t\treturn this.p.int(this.p.random(min, max));\n\t};\n\n\tcalcStreamLen = () => {\n\t\tlet maxLen = this.p.int(this.p.windowHeight / this.symbolSize);\n\t\tlet minLen = maxLen < 5 ? 1 : 5;\n\t\treturn this.randomInt(minLen, maxLen);\n\t};\n\n\tupdate = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].update();\n\t\t}\n\t};\n\n\trender = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].render();\n\t\t}\n\t};\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Stream from \"./Stream\";\n\nclass MatrixRain extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let numStreams = 50;\n        let symbolSize;\n        let streams = [];\n\n        p.setup = () => {\n            var cnv = p.createCanvas(p.windowWidth, p.windowHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n            p.background(0);\n\n            this.createNewStreams();\n        };\n\n        this.createNewStreams = () => {\n            streams = [];\n\n            symbolSize = p.width / numStreams;\n            p.textSize(symbolSize);\n\n            let x = 0;\n            for (var i = 0; i <= numStreams; i++) {\n                var stream = new Stream(p, x, symbolSize);\n                streams.push(stream);\n                x += symbolSize;\n            }\n        };\n\n        p.draw = () => {\n            p.background(0, 100);\n            streams.forEach(function (s) {\n                s.render();\n                s.update();\n            });\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(p.windowWidth, p.windowHeight);\n            this.createNewStreams();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <div id='canvas'></div>\n            </div>\n        );\n    }\n}\nexport default MatrixRain;\n"],"names":["Symbol","constructor","p","x","y","velocity","isWhite","setRandomSymbol","decimal","this","random","value","String","fromCharCode","render","fill","text","update","changeProb","height","Stream","symbolSize","setup","randomInt","i","calcStreamLen","sym","symbols","push","min","max","int","maxLen","windowHeight","minLen","length","MatrixRain","React","props","super","sketch","streams","cnv","createCanvas","windowWidth","parent","style","background","createNewStreams","width","textSize","stream","draw","forEach","s","windowResized","resizeCanvas","myRef","componentDidMount","myP5","p5","current","componentWillUnmount","document","getElementById","replaceChildren","_jsx","ref","children","id"],"sourceRoot":""}