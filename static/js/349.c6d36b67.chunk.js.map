{"version":3,"file":"static/js/349.c6d36b67.chunk.js","mappings":"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","sources":["sketches/flockingSimulation/Bird.jsx","sketches/flockingSimulation/FlockingSimulation.jsx"],"sourcesContent":["import p5 from \"p5\";\n\nexport default class Bird {\n\tconstructor(p, x, y, id) {\n\t\tthis.p = p;\n\t\tthis.uuid = id;\n\t\tthis.pos = this.p.createVector(x, y);\n\t\tthis.r = 5;\n\t\tthis.heading = this.p.createVector(\n\t\t\tthis.p.random(-1, 1),\n\t\t\tthis.p.random(-1, 1)\n\t\t);\n\t}\n\n\tshow(neighbourhood, showNeighbourhood) {\n\t\tthis.p.push();\n\n\t\tthis.p.translate(this.pos.x, this.pos.y);\n\t\tthis.p.rotate(this.heading.heading() + this.p.PI / 2);\n\n\t\tif (showNeighbourhood) {\n\t\t\tthis.p.push();\n\t\t\tthis.p.fill(255, 50);\n\t\t\tthis.p.noStroke();\n\t\t\tthis.p.ellipse(0, 0, neighbourhood * 2, neighbourhood * 2);\n\t\t\tthis.p.pop();\n\t\t}\n\n\t\tthis.p.fill(255);\n\t\tthis.p.triangle(-10, 10, 0, -10, 10, 10);\n\n\t\tthis.p.pop();\n\t}\n\n\tupdate(birds, sepMult, alignMult, cohMult, neighbourhood, maxX, maxY) {\n\t\tconst otherBirds = birds.filter((bird) => {\n\t\t\tconst distance = this.p.dist(\n\t\t\t\tthis.pos.x,\n\t\t\t\tthis.pos.y,\n\t\t\t\tbird.pos.x,\n\t\t\t\tbird.pos.y\n\t\t\t);\n\t\t\treturn bird.uuid !== this.uuid && distance < neighbourhood;\n\t\t});\n\n\t\tconst sepHeading = this.separate(otherBirds).mult(sepMult);\n\t\tconst alignHeading = this.align(otherBirds).mult(alignMult);\n\t\tconst cohHeading = this.cohesion(otherBirds).mult(cohMult);\n\n\t\tconst desiredHeading = this.p.createVector(0, 0);\n\t\tdesiredHeading.add(sepHeading);\n\t\tdesiredHeading.add(alignHeading);\n\t\tdesiredHeading.add(cohHeading);\n\t\tdesiredHeading.normalize();\n\n\t\tthis.changeHeading(desiredHeading);\n\n\t\tthis.pos.add(this.heading);\n\t\tthis.keepInBounds(0, 0, maxX, maxY);\n\t}\n\n\t// Move away from other birds in the flock to avoid crowding\n\tseparate(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tbirds.forEach((bird) => {\n\t\t\tlet headingToBird = p5.Vector.sub(bird.pos, this.pos);\n\t\t\tacc.add(headingToBird);\n\t\t});\n\n\t\tacc.normalize();\n\t\treturn acc.mult(-1);\n\t}\n\n\t// Steer towards the local heading of the flock\n\talign(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tbirds.forEach((bird) => {\n\t\t\tacc.add(bird.heading);\n\t\t});\n\n\t\treturn acc.normalize();\n\t}\n\n\t// Move towards the center of the local flock\n\tcohesion(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tif (birds.length === 0) {\n\t\t\treturn acc;\n\t\t}\n\n\t\tbirds.forEach((bird) => {\n\t\t\tacc.add(bird.pos);\n\t\t});\n\n\t\tconst avgPos = p5.Vector.div(acc, birds.length);\n\t\tconst headingToAvgPos = p5.Vector.sub(avgPos, this.pos);\n\t\treturn headingToAvgPos.normalize();\n\t}\n\n\tkeepInBounds(minX, minY, maxX, maxY) {\n\t\tconst closestInbounds = this.pos.copy();\n\n\t\tif (this.pos.x < minX) {\n\t\t\tclosestInbounds.x = minX;\n\t\t}\n\n\t\tif (this.pos.y < minY) {\n\t\t\tclosestInbounds.y = minY;\n\t\t}\n\n\t\tif (this.pos.x > maxX) {\n\t\t\tclosestInbounds.x = maxX;\n\t\t}\n\n\t\tif (this.pos.y > maxY) {\n\t\t\tclosestInbounds.y = maxY;\n\t\t}\n\n\t\tif (!closestInbounds.equals(this.pos)) {\n\t\t\tconst headingToInbounds = p5.Vector.sub(closestInbounds, this.pos);\n\t\t\tthis.changeHeading(headingToInbounds);\n\t\t}\n\t}\n\n\tchangeHeading(desiredHeading) {\n\t\tconst desiredHeadingRatio = 0.1;\n\t\tconst currentHeadingRatio = 1 - desiredHeadingRatio;\n\t\tconst desiredPart = p5.Vector.mult(desiredHeading, desiredHeadingRatio);\n\t\tconst currentPart = p5.Vector.mult(this.heading, currentHeadingRatio);\n\t\tconst newHeading = currentPart.add(desiredPart);\n\t\tnewHeading.normalize();\n\t\tthis.heading = newHeading;\n\t}\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Bird from \"./Bird\";\nimport \"./FlockingSimulation.scss\";\n\nclass FlockingSimulation extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet birds = [];\n\t\tlet sepMult = 50;\n\t\tlet alignMult = 50;\n\t\tlet cohMult = 40;\n\t\tlet neighbourhood = 100;\n\t\tlet sepMultSlider, alignMultSlider, cohMultSlider, neighbourhoodSlider;\n\t\tlet neighbourhoodCheckbox;\n\n\t\tp.setup = () => {\n\t\t\tvar cnv = p.createCanvas(p.windowWidth, p.windowHeight * 0.9);\n\t\t\tcnv.parent(\"canvas\");\n\t\t\tcnv.style(\"display\", \"block\");\n\n\t\t\tfor (let i = 0; i < 100; i++) {\n\t\t\t\tconst rndX = p.random(0, p.windowWidth);\n\t\t\t\tconst rndY = p.random(0, p.windowHeight * 0.9);\n\t\t\t\tbirds.push(new Bird(p, rndX, rndY, i));\n\t\t\t}\n\n\t\t\tcreateControls();\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.background(51);\n\n\t\t\tsepMult = sepMultSlider.value();\n\t\t\talignMult = alignMultSlider.value();\n\t\t\tcohMult = cohMultSlider.value();\n\t\t\tneighbourhood = neighbourhoodSlider.value();\n\n\t\t\tbirds.forEach((bird) => {\n\t\t\t\tbird.update(\n\t\t\t\t\tbirds,\n\t\t\t\t\tsepMult,\n\t\t\t\t\talignMult,\n\t\t\t\t\tcohMult,\n\t\t\t\t\tneighbourhood,\n\t\t\t\t\tp.windowWidth,\n\t\t\t\t\tp.windowHeight * 0.9\n\t\t\t\t);\n\t\t\t\tbird.show(neighbourhood, neighbourhoodCheckbox.checked());\n\t\t\t});\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight * 0.9);\n\t\t};\n\n\t\tfunction createControls() {\n\t\t\tsepMultSlider = p.createSlider(0, 100, sepMult);\n\t\t\tsepMultSlider.parent(\"sepDiv\");\n\n\t\t\talignMultSlider = p.createSlider(0, 100, alignMult);\n\t\t\talignMultSlider.parent(\"alignDiv\");\n\n\t\t\tcohMultSlider = p.createSlider(0, 100, cohMult);\n\t\t\tcohMultSlider.parent(\"cohDiv\");\n\n\t\t\tneighbourhoodSlider = p.createSlider(0, 200, neighbourhood);\n\t\t\tneighbourhoodSlider.parent(\"neighbourhoodDiv\");\n\t\t\tneighbourhoodSlider.style(\"display\", \"inline-block\");\n\n\t\t\tneighbourhoodCheckbox = p.createCheckbox(\"Show\", false);\n\t\t\tneighbourhoodCheckbox.parent(\"neighbourhoodDiv\");\n\t\t\tneighbourhoodCheckbox.style(\"display\", \"inline-block\");\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.myRef}>\n\t\t\t\t<div id='canvas'></div>\n\t\t\t\t<div id='controls'>\n\t\t\t\t\t<div id='sepDiv' className='slider'>\n\t\t\t\t\t\t<p>Separation</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='alignDiv' className='slider'>\n\t\t\t\t\t\t<p>Alignment</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='cohDiv' className='slider'>\n\t\t\t\t\t\t<p>Cohesion</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='neighbourhoodDiv' className='slider'>\n\t\t\t\t\t\t<p>Neighbourhood</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default FlockingSimulation;\n"],"names":["Bird","p","x","y","id","this","uuid","pos","createVector","r","heading","random","neighbourhood","showNeighbourhood","push","translate","rotate","PI","fill","noStroke","ellipse","pop","triangle","birds","sepMult","alignMult","cohMult","maxX","maxY","otherBirds","filter","bird","distance","dist","sepHeading","separate","mult","alignHeading","align","cohHeading","cohesion","desiredHeading","add","normalize","changeHeading","keepInBounds","acc","forEach","headingToBird","p5","length","avgPos","minX","minY","closestInbounds","copy","equals","headingToInbounds","desiredPart","newHeading","FlockingSimulation","props","sketch","sepMultSlider","alignMultSlider","cohMultSlider","neighbourhoodSlider","neighbourhoodCheckbox","setup","cnv","createCanvas","windowWidth","windowHeight","parent","style","i","rndX","rndY","createSlider","createCheckbox","draw","background","value","update","show","checked","windowResized","resizeCanvas","myRef","React","myP5","current","ref","className"],"sourceRoot":""}