{"version":3,"file":"static/js/649.771c59bb.chunk.js","mappings":"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","sources":["sketches/lissajousCurveTable/Cog.jsx","sketches/lissajousCurveTable/LissajousCurveTable.jsx"],"sourcesContent":["export default class Cog {\n\tconstructor(p, x, y, d, index, vertical) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.d = d;\n\t\tthis.index = index;\n\t\tthis.vertical = vertical;\n\t\tthis.angle = -(this.p.PI / 2);\n\t\tthis.updateLine();\n\t}\n\n\tshow() {\n\t\tthis.p.push();\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255);\n\t\tthis.p.noFill();\n\t\tthis.p.ellipse(this.x, this.y, this.d, this.d);\n\t\tthis.p.strokeWeight(8);\n\t\tthis.p.point(this.lineStartX, this.lineStartY);\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255, 50);\n\t\tthis.p.line(\n\t\t\tthis.lineStartX,\n\t\t\tthis.lineStartY,\n\t\t\tthis.lineEndX,\n\t\t\tthis.lineEndY\n\t\t);\n\t\tthis.p.pop();\n\t}\n\n\tupdateLine() {\n\t\tlet r = this.d / 2;\n\t\tlet lineX = r * this.p.cos(this.angle);\n\t\tlet lineY = r * this.p.sin(this.angle);\n\t\tthis.lineStartX = this.x + lineX;\n\t\tthis.lineStartY = this.y + lineY;\n\t\tif (this.vertical) {\n\t\t\tthis.lineEndX = this.lineStartX;\n\t\t\tthis.lineEndY = this.p.height;\n\t\t} else {\n\t\t\tthis.lineEndX = this.p.width;\n\t\t\tthis.lineEndY = this.lineStartY;\n\t\t}\n\t}\n\n\tupdateAngle() {\n\t\tthis.angle += 0.01 * this.index;\n\t\tthis.updateLine();\n\t}\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Cog from \"./Cog\";\nimport { intersect } from \"mathjs\";\nimport \"./LissajousCurveTable.scss\";\n\nclass LissajousCurveTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let numCogs, gridSize;\n        let diameter;\n        let cogsTop, cogsSide;\n        let patterns;\n\n        p.setup = () => {\n            const minDim = Math.min(p.windowWidth, p.windowHeight);\n            const cnv = p.createCanvas(minDim, minDim);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n            cnv.style(\"margin\", \"auto\");\n\n            p.frameRate(30);\n\n            numCogs = 8;\n            gridSize = numCogs + 1;\n            diameter = minDim / gridSize;\n            cogsTop = [];\n            cogsSide = [];\n            patterns = [[]];\n\n            for (let i = 1; i < gridSize; i++) {\n                let xOff = diameter * (i + 0.5);\n                let c = new Cog(\n                    p,\n                    xOff,\n                    diameter * 0.5,\n                    diameter * 0.95,\n                    i,\n                    true\n                );\n                cogsTop.push(c);\n            }\n\n            for (let i = 1; i < gridSize; i++) {\n                let yOff = diameter * (i + 0.5);\n                let c = new Cog(\n                    p,\n                    diameter * 0.5,\n                    yOff,\n                    diameter * 0.95,\n                    i,\n                    false\n                );\n                cogsSide.push(c);\n            }\n\n            for (let i = 1; i < gridSize; i++) {\n                patterns[i] = [];\n                for (let j = 1; j < gridSize; j++) {\n                    patterns[i][j] = new Set();\n                }\n            }\n        };\n\n        p.draw = () => {\n            p.clear();\n            p.background(51);\n\n            cogsTop.forEach((topCog) => {\n                cogsSide.forEach((sideCog) => {\n                    let l1S = [topCog.lineStartX, topCog.lineStartY];\n                    let l1E = [topCog.lineEndX, topCog.lineEndY];\n                    let l2S = [sideCog.lineStartX, sideCog.lineStartY];\n                    let l2E = [sideCog.lineEndX, sideCog.lineEndY];\n                    let x = intersect(l1S, l1E, l2S, l2E);\n                    patterns[topCog.index][sideCog.index].add(x);\n                });\n            });\n\n            cogsTop.forEach((c) => {\n                c.show();\n                c.updateAngle();\n            });\n\n            cogsSide.forEach((c) => {\n                c.show();\n                c.updateAngle();\n            });\n\n            for (let i = 1; i < gridSize; i++) {\n                for (let j = 1; j < gridSize; j++) {\n                    p.push();\n                    p.stroke(255);\n                    p.strokeWeight(1);\n                    p.noFill();\n                    p.beginShape();\n                    patterns[i][j].forEach((x) => {\n                        p.vertex(x[0], x[1]);\n                    });\n                    p.endShape();\n                    p.pop();\n                }\n            }\n        };\n\n        p.windowResized = () => {\n            p.setup();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"controls\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div className='lissajous-curve-table' ref={this.myRef}>\n                <div id='canvas'></div>\n                <div id='controls'></div>\n            </div>\n        );\n    }\n}\nexport default LissajousCurveTable;\n"],"names":["Cog","constructor","p","x","y","d","index","vertical","this","angle","PI","updateLine","show","push","strokeWeight","stroke","noFill","ellipse","point","lineStartX","lineStartY","line","lineEndX","lineEndY","pop","r","lineX","cos","lineY","sin","height","width","updateAngle","LissajousCurveTable","React","props","super","sketch","numCogs","gridSize","diameter","cogsTop","cogsSide","patterns","setup","minDim","Math","min","windowWidth","windowHeight","cnv","createCanvas","parent","style","frameRate","i","c","j","Set","draw","clear","background","forEach","topCog","sideCog","l1S","l1E","l2S","l2E","intersect","add","beginShape","vertex","endShape","windowResized","myRef","componentDidMount","myP5","p5","current","componentWillUnmount","document","getElementById","replaceChildren","render","_jsxs","className","ref","children","_jsx","id"],"sourceRoot":""}