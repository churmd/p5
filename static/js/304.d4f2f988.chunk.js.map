{"version":3,"file":"static/js/304.d4f2f988.chunk.js","mappings":"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","sources":["sketches/cuneiformNumConverter/CuniformStrings.js","sketches/cuneiformNumConverter/CuneiformNum.js","sketches/cuneiformNumConverter/Sketchs.js","sketches/cuneiformNumConverter/Cuneiform.jsx"],"sourcesContent":["export const CuneiformUnicodes = {\n    Zero: \"\\u{1244A}\",\n    One: \"\\u{12415}\",\n    Two: \"\\u{12416}\",\n    Three: \"\\u{12417}\",\n    Four: \"\\u{12418}\",\n    Five: \"\\u{12419}\",\n    Six: \"\\u{1241A}\",\n    Seven: \"\\u{1241B}\",\n    Eight: \"\\u{1241C}\",\n    Nine: \"\\u{1241D}\",\n    Ten: \"\\u{1241E}\",\n    Twenty: \"\\u{1241F}\",\n    Thirty: \"\\u{12420}\",\n    Forty: \"\\u{12421}\",\n    Fifty: \"\\u{12422}\",\n};\n","import { CuneiformUnicodes } from \"./CuniformStrings\";\n\nexport default class CuneiformNum {\n    /**\n     * @param {Integer} val The value to dusplay\n     */\n    constructor(val) {\n        this.number = val;\n        this.base60Format = this.__toBase60Array(this.number).reverse();\n    }\n\n    add(n) {\n        this.number += n;\n        this.base60Format = this.__toBase60Array(this.number).reverse();\n    }\n\n    /**\n     * Returns a list of numbers that represent the given value in base 60,\n     * with the first index being the lowest unit (aka 60^0).\n     *\n     * Think of it like binary but in base 60 not 2 and read left to right.\n     *\n     * Example for val 601:\n     * 60^0 | 60^1\n     *  1   |  10\n     *\n     * @param {Integer} val The value to convert to base 60\n     */\n    __toBase60Array(val) {\n        if (val < 60) {\n            return [val];\n        } else {\n            const quotient = Math.floor(val / 60);\n            const remainder = val % 60;\n\n            return [remainder].concat(this.__toBase60Array(quotient));\n        }\n    }\n\n    toString() {\n        return this.base60Format.toString();\n    }\n\n    toUnicodeString() {\n        const unicodeGroups = this.base60Format.map((val) => {\n            return this.__getUnicodeForSection(val);\n        });\n        return unicodeGroups.join(\" \");\n    }\n\n    __getUnicodeForSection(val) {\n        if (val < 10) {\n            return this.__getUnicodeForDigit(val);\n        } else if (val < 20) {\n            return CuneiformUnicodes.Ten + this.__getUnicodeForDigit(val - 10);\n        } else if (val < 30) {\n            return (\n                CuneiformUnicodes.Twenty + this.__getUnicodeForDigit(val - 20)\n            );\n        } else if (val < 40) {\n            return (\n                CuneiformUnicodes.Thirty + this.__getUnicodeForDigit(val - 30)\n            );\n        } else if (val < 50) {\n            return (\n                CuneiformUnicodes.Forty + this.__getUnicodeForDigit(val - 40)\n            );\n        } else if (val < 60) {\n            return (\n                CuneiformUnicodes.Fifty + this.__getUnicodeForDigit(val - 50)\n            );\n        } else {\n            return \"\";\n        }\n    }\n\n    __getUnicodeForDigit(val) {\n        switch (val) {\n            case 0:\n                return CuneiformUnicodes.Zero;\n            case 1:\n                return CuneiformUnicodes.One;\n            case 2:\n                return CuneiformUnicodes.Two;\n            case 3:\n                return CuneiformUnicodes.Three;\n            case 4:\n                return CuneiformUnicodes.Four;\n            case 5:\n                return CuneiformUnicodes.Five;\n            case 6:\n                return CuneiformUnicodes.Six;\n            case 7:\n                return CuneiformUnicodes.Seven;\n            case 8:\n                return CuneiformUnicodes.Eight;\n            case 9:\n                return CuneiformUnicodes.Nine;\n            default:\n                return \"\";\n        }\n    }\n}\n","import CuneiformNum from \"./CuneiformNum\";\nimport CuneiformFont from \"./CuneiformOB.ttf\";\n\nconst getCanvasHeight = () => {\n    return window.innerHeight;\n};\n\nconst getCanvasWidth = () => {\n    return window.innerWidth;\n};\n\nconst getTextSize = (textLen, horizontalSpace, verticalSpace) => {\n    const minDim = Math.min(horizontalSpace, verticalSpace);\n    return minDim / textLen;\n};\n\nexport const CounterSketch = (p) => {\n    let cuneiformFont;\n    let cuneiformCounter;\n\n    p.preload = () => {\n        cuneiformFont = p.loadFont(CuneiformFont);\n    };\n\n    p.setup = () => {\n        const cnv = p.createCanvas(getCanvasWidth(), getCanvasHeight());\n        cnv.parent(\"canvas\");\n        cnv.style(\"display\", \"block\");\n\n        p.frameRate(1);\n\n        cuneiformCounter = new CuneiformNum(0);\n    };\n\n    p.draw = () => {\n        p.background(51);\n\n        const cuniformText = cuneiformCounter.toUnicodeString();\n        const textSize = getTextSize(\n            cuniformText.length,\n            getCanvasWidth() * 0.75,\n            getCanvasHeight() * 0.75\n        );\n\n        p.textSize(textSize);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.fill(255);\n        p.textFont(cuneiformFont);\n\n        p.text(cuniformText, getCanvasWidth() / 2, getCanvasHeight() / 2);\n\n        cuneiformCounter.add(1);\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(getCanvasWidth(), getCanvasHeight());\n    };\n};\n\nexport const ClockSketch = (p) => {\n    let cuneiformFont;\n\n    p.preload = () => {\n        cuneiformFont = p.loadFont(CuneiformFont);\n    };\n\n    p.setup = () => {\n        const cnv = p.createCanvas(getCanvasWidth(), getCanvasHeight());\n        cnv.parent(\"canvas\");\n        cnv.style(\"display\", \"block\");\n\n        p.frameRate(1);\n    };\n\n    p.draw = () => {\n        p.background(51);\n\n        const now = new Date();\n        const hours = new CuneiformNum(now.getHours()).toUnicodeString();\n        const minutes = new CuneiformNum(now.getMinutes()).toUnicodeString();\n        const seconds = new CuneiformNum(now.getSeconds()).toUnicodeString();\n\n        const colonPadding = (getCanvasWidth() * 0.1) / 4;\n\n        const sectionWidth = (getCanvasWidth() * 0.9) / 3;\n\n        const textSize = Math.min(\n            getTextSize(hours.length, sectionWidth, getCanvasHeight()),\n            getTextSize(minutes.length, sectionWidth, getCanvasHeight()),\n            getTextSize(seconds.length, sectionWidth, getCanvasHeight())\n        );\n\n        p.fill(255);\n        p.textSize(textSize);\n        p.textAlign(p.CENTER, p.CENTER);\n\n        p.textFont(\"sans-serif\");\n        p.text(\":\", sectionWidth + colonPadding, getCanvasHeight() / 2);\n        p.text(\":\", sectionWidth * 2 + colonPadding * 3, getCanvasHeight() / 2);\n\n        p.textFont(cuneiformFont);\n        p.text(hours, sectionWidth * 0.5, getCanvasHeight() / 2);\n        p.text(\n            minutes,\n            sectionWidth * 1.5 + colonPadding * 2,\n            getCanvasHeight() / 2\n        );\n        p.text(\n            seconds,\n            sectionWidth * 2.5 + colonPadding * 4,\n            getCanvasHeight() / 2\n        );\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(getCanvasWidth(), getCanvasHeight());\n    };\n};\n","import React from \"react\";\nimport p5 from \"p5\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\nimport { CounterSketch, ClockSketch } from \"./Sketchs\";\nimport \"./Cuneiform.scss\";\n\nclass Cuneiform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    setCounterSketch = () => {\n        if (this.myP5 !== undefined) {\n            this.myP5.remove();\n        }\n        this.myP5 = new p5(CounterSketch, this.myRef.current);\n    };\n\n    setClockSketch = () => {\n        if (this.myP5 !== undefined) {\n            this.myP5.remove();\n        }\n        this.myP5 = new p5(ClockSketch, this.myRef.current);\n    };\n\n    componentDidMount() {\n        this.setClockSketch();\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <div id='p5_loading' className='loadingclass'>\n                    Loading custom font ...\n                </div>\n                <FullscreenElem id='canvas' />\n                <div id='controls'>\n                    <button onClick={this.setClockSketch}>Clock</button>\n                    <button onClick={this.setCounterSketch}>Counter</button>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Cuneiform;\n"],"names":["CuneiformUnicodes","CuneiformNum","constructor","val","this","number","base60Format","__toBase60Array","reverse","add","n","quotient","Math","floor","concat","toString","toUnicodeString","map","__getUnicodeForSection","join","__getUnicodeForDigit","getCanvasHeight","window","innerHeight","getCanvasWidth","innerWidth","getTextSize","textLen","horizontalSpace","verticalSpace","min","CounterSketch","p","cuneiformFont","cuneiformCounter","preload","loadFont","CuneiformFont","setup","cnv","createCanvas","parent","style","frameRate","draw","background","cuniformText","textSize","length","textAlign","CENTER","fill","textFont","text","windowResized","resizeCanvas","ClockSketch","now","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","colonPadding","sectionWidth","Cuneiform","React","props","super","setCounterSketch","undefined","myP5","remove","p5","myRef","current","setClockSketch","componentDidMount","componentWillUnmount","document","getElementById","replaceChildren","render","_jsxs","ref","children","_jsx","id","className","FullscreenElem","onClick"],"sourceRoot":""}