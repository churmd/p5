{"version":3,"file":"static/js/168.674056bb.chunk.js","mappings":"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","sources":["sketches/flowfield/FlowField.js","sketches/flowfield/Particle.js","sketches/flowfield/ParticlesOnFlowField.js","sketches/flowfield/FlowFieldSketch.jsx"],"sourcesContent":["import { sum } from \"mathjs\";\nimport p5 from \"p5\";\nimport { instanceOf, number } from \"prop-types\";\n\nclass FlowField {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} width\n     * @param {Number} height\n     */\n    constructor(p5Instance, width, height) {\n        this.p = p5Instance;\n        this.width = width;\n        this.height = height;\n        this.time = 0;\n\n        this.grid = [];\n        for (let x = 0; x < width; x++) {\n            this.grid[x] = [];\n        }\n\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                this.grid[x][y] = this.p.noise(x, y, this.t);\n            }\n        }\n    }\n\n    show(canvasWidth, canvasHeight) {\n        this.p.push();\n\n        const cellWidth = canvasWidth / this.width;\n        const cellHeight = canvasHeight / this.height;\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const xPixel = x * cellWidth;\n                const yPixel = y * cellHeight;\n\n                // const colour = this.grid[x][y] * 255;\n                // this.p.fill(colour);\n                // this.p.rect(xPixel, yPixel, cellWidth, cellHeight);\n\n                this.p.push();\n\n                const halfCellHeight = cellHeight / 2;\n\n                this.p.translate(\n                    xPixel + cellWidth / 2,\n                    yPixel + halfCellHeight\n                );\n\n                this.p.rotate(this.grid[x][y] * this.p.TWO_PI);\n\n                this.p.colorMode(this.p.HSL, 360);\n                const hue = this.p.degrees(this.grid[x][y] * this.p.TWO_PI);\n                const colour = this.p.color(hue, 250, 200);\n\n                this.p.stroke(colour);\n                this.p.fill(colour);\n\n                this.p.line(0, 0, halfCellHeight, 0);\n\n                this.p.triangle(\n                    halfCellHeight,\n                    0,\n                    halfCellHeight - cellHeight / 10,\n                    -cellHeight / 20,\n                    halfCellHeight - cellHeight / 10,\n                    cellHeight / 20\n                );\n\n                this.p.pop();\n            }\n        }\n\n        this.p.pop();\n    }\n\n    update() {\n        this.time += 0.001;\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                this.grid[x][y] = this.p.noise(x, y, this.time);\n            }\n        }\n    }\n\n    /**\n     * @param {p5.Vector} position\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     * @returns {p5.Vector} the velocity of the flow between 0 and 2 PI\n     */\n    flowVelocityFromPixelPosition(position, canvasWidth, canvasHeight) {\n        const gridXPercent = this.p.map(\n            position.x,\n            0,\n            canvasWidth,\n            0,\n            this.width,\n            true\n        );\n        const gridX = this.p.floor(gridXPercent);\n\n        const gridYPercent = this.p.map(\n            position.y,\n            0,\n            canvasHeight,\n            0,\n            this.height,\n            true\n        );\n        const gridY = this.p.floor(gridYPercent);\n\n        const surroundingGridAngles = this.getSurroundingAngles(gridX, gridY);\n        const averageAngle =\n            sum(surroundingGridAngles) / surroundingGridAngles.length;\n\n        const angle = averageAngle * this.p.TWO_PI;\n        return p5.Vector.fromAngle(angle, 1);\n    }\n\n    /**\n     * Returns a list the angles in the grid around a point, including the point itself.\n     * If a surrounding index is out of bounds, it is skipped and not returned in the list.\n     * @param {Number} x grid x index\n     * @param {Number} y grid y index\n     * @returns {Array<Number>} List of all the angles in the grid around a point\n     */\n    getSurroundingAngles(x, y) {\n        const gridPoints = [\n            [x - 1, y - 1],\n            [x - 1, y],\n            [x - 1, y + 1],\n            [x, y - 1],\n            [x, y],\n            [x, y + 1],\n            [x + 1, y - 1],\n            [x + 1, 0],\n            [x + 1, y + 1],\n        ];\n\n        const angles = [];\n        gridPoints.forEach((gridPoint) => {\n            if (\n                gridPoint[0] >= 0 &&\n                gridPoint[1] >= 0 &&\n                gridPoint[0] < this.width &&\n                gridPoint[1] < this.height\n            ) {\n                const angle = this.grid[gridPoint[0]][gridPoint[1]];\n                angles.push(angle);\n            }\n        });\n\n        return angles;\n    }\n}\n\nFlowField.prototypes = {\n    p5Instance: instanceOf(p5),\n    coveredPerc: number,\n    resolution: number,\n    delta: number,\n};\n\nexport default FlowField;\n","import p5 from \"p5\";\nimport { instanceOf, number } from \"prop-types\";\n\nclass Particle {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} x\n     * @param {Number} y\n     */\n    constructor(p5Instance, x, y) {\n        this.p = p5Instance;\n        this.position = this.p.createVector(x, y);\n        this.velocity = this.p.createVector(0, 0);\n    }\n\n    show() {\n        this.p.push();\n\n        this.p.circle(this.position.x, this.position.y, 20);\n\n        this.p.pop();\n    }\n\n    /**\n     * @param {p5.Vector} velocity\n     */\n    addVelocityAndMove(velocity) {\n        this.velocity = this.velocity.add(velocity);\n        this.velocity.normalize();\n        this.position = this.position.add(this.velocity);\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    isOutOfBounds(canvasWidth, canvasHeight) {\n        if (this.position.x < 0 || this.position.y < 0) {\n            return true;\n        }\n\n        if (this.position.x > canvasWidth || this.position.y > canvasHeight) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nParticle.prototypes = {\n    p5Instance: instanceOf(p5),\n    x: number,\n    y: number,\n};\n\nexport default Particle;\n","import p5 from \"p5\";\nimport { instanceOf } from \"prop-types\";\nimport FlowField from \"./FlowField\";\nimport Particle from \"./Particle\";\n\nclass ParticlesOnFlowField {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    constructor(p5Instance, canvasWidth, canvasHeight) {\n        this.p = p5Instance;\n\n        this.flowField = new FlowField(this.p, 30, 30);\n\n        this.numParticles = 200;\n        this.particles = [];\n\n        for (var i = 0; i < this.numParticles; i++) {\n            this.createRandomParticle(canvasWidth, canvasHeight);\n        }\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    createRandomParticle(canvasWidth, canvasHeight) {\n        const x = this.p.random(canvasWidth);\n        const y = this.p.random(canvasHeight);\n        const particle = new Particle(this.p, x, y);\n        this.particles.push(particle);\n    }\n\n    createParticleAtMouse() {\n        const particle = new Particle(this.p, this.p.mouseX, this.p.mouseY);\n        this.particles.push(particle);\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    show(canvasWidth, canvasHeight) {\n        this.p.push();\n\n        this.flowField.show(canvasWidth, canvasHeight);\n\n        this.particles.forEach((particle) => {\n            particle.show();\n        });\n\n        this.p.pop();\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    update(canvasWidth, canvasHeight) {\n        this.flowField.update();\n\n        this.particles.forEach((particle) => {\n            const flowFieldVelocity =\n                this.flowField.flowVelocityFromPixelPosition(\n                    particle.position,\n                    canvasWidth,\n                    canvasHeight\n                );\n\n            particle.addVelocityAndMove(flowFieldVelocity);\n        });\n\n        this.particles = this.particles.filter((particle) => {\n            return !particle.isOutOfBounds(canvasWidth, canvasHeight);\n        });\n\n        if (this.particles.length !== this.numParticles) {\n            this.createParticleAtMouse(canvasWidth, canvasHeight);\n        }\n\n        // If there is still space, create another random particle to keep the animation interesting\n        if (this.particles.length !== this.numParticles) {\n            this.createRandomParticle(canvasWidth, canvasHeight);\n        }\n    }\n}\n\nParticlesOnFlowField.prototypes = {\n    p5Instance: instanceOf(p5),\n};\n\nexport default ParticlesOnFlowField;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\nimport ParticlesOnFlowField from \"./ParticlesOnFlowField\";\n\nclass FlowFieldSketch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let flowField;\n\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n\n            flowField = new ParticlesOnFlowField(\n                p,\n                window.innerWidth,\n                window.innerHeight\n            );\n        };\n\n        p.draw = () => {\n            p.background(51);\n            flowField.show(window.innerWidth, window.innerHeight);\n            flowField.update(window.innerWidth, window.innerHeight);\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <FullscreenElem id='canvas' />\n            </div>\n        );\n    }\n}\n\nexport default FlowFieldSketch;\n"],"names":["FlowField","p5Instance","width","height","this","p","time","grid","x","y","noise","t","canvasWidth","canvasHeight","push","cellWidth","cellHeight","xPixel","yPixel","halfCellHeight","translate","rotate","TWO_PI","colorMode","HSL","hue","degrees","colour","color","stroke","fill","line","triangle","pop","position","gridXPercent","map","gridX","floor","gridYPercent","gridY","surroundingGridAngles","getSurroundingAngles","angle","sum","length","p5","angles","forEach","gridPoint","prototypes","instanceOf","coveredPerc","number","resolution","delta","Particle","createVector","velocity","circle","add","normalize","ParticlesOnFlowField","flowField","numParticles","particles","i","createRandomParticle","random","particle","mouseX","mouseY","show","update","flowFieldVelocity","flowVelocityFromPixelPosition","addVelocityAndMove","filter","isOutOfBounds","createParticleAtMouse","FlowFieldSketch","props","sketch","setup","cnv","createCanvas","window","innerWidth","innerHeight","parent","style","draw","background","windowResized","resizeCanvas","myRef","React","myP5","current","document","getElementById","replaceChildren","ref","FullscreenElem","id"],"sourceRoot":""}