{"version":3,"file":"static/js/533.7615c523.chunk.js","mappings":"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","sources":["sketches/inkMarbling/InkDrop.js","sketches/inkMarbling/InkMarbling.jsx"],"sourcesContent":["import p5 from \"p5\";\nimport { instanceOf, number } from \"prop-types\";\n\nclass InkDrop {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} centerX\n     * @param {Number} centerY\n     * @param {Number} radius\n     * @param {p5.Color} colour \n     */\n    constructor(p5Instance, centerX, centerY, radius, colour) {\n        this.p = p5Instance;\n        this.center = this.p.createVector(centerX, centerY);\n        this.radius = radius;\n        this.colour = colour;\n\n        this.vertices = [];\n        let numVertices = 100;\n        for (let index = 0; index < numVertices; index++) {\n            let angle = this.p.map(index, 0, numVertices, 0, this.p.TWO_PI);\n            let vertex = this.p.createVector(this.p.cos(angle), this.p.sin(angle));\n            vertex.mult(this.radius);\n            vertex.add(this.center);\n            this.vertices.push(vertex);\n        }\n    }\n\n    show() {\n        this.p.push();\n        this.p.noStroke();\n        this.p.fill(this.colour);\n       \n        this.p.beginShape();\n        this.vertices.forEach((vertex) => {\n            this.p.vertex(vertex.x, vertex.y)\n        })\n        this.p.endShape(this.p.CLOSE)\n\n        this.p.pop();\n    }\n\n    /**\n     * Morphs this InkDrop's shape according to the new InkDrop added.\n     * Maths for this calculation can be found at https://people.csail.mit.edu/jaffer/Marbling/Dropping-Paint\n     * @param {InkDrop} newInkDrop The new ink drop added.\n     */\n    displaceByInDrop(newInkDrop) {\n        const c = newInkDrop.center;\n        const r = newInkDrop.radius;\n        this.vertices.forEach((v) => {\n            // c + ( (p - c) . sqrt(1 + (r^2 / (||p - c||^2) )) )\n\n            const pMinusC = p5.Vector.sub(v, c);\n            const pMinusCMagnitude = pMinusC.mag();\n            const root = this.p.sqrt(1 + this.p.sq(r) / this.p.sq(pMinusCMagnitude));\n            const result = p5.Vector.add(c, p5.Vector.mult(pMinusC, root));\n            v.set(result);\n        })\n    }\n\n    /**\n     * Returns true if any part of the InkDrop is on screen.\n     * @param {Number} screenWidth \n     * @param {Number} screenHeight \n     * @returns {Boolean}\n     */\n    isOnScreen(screenWidth, screenHeight) {\n        const vertexOnScreen = (vertex) => {\n            const xOnScreen = vertex.x >= 0 && vertex.x <= screenWidth\n            const yOnScreen = vertex.y >= 0 && vertex.y <= screenHeight\n            return xOnScreen && yOnScreen\n        }\n\n        for (let index = 0; index < this.vertices.length; index++) {\n            const vertex = this.vertices[index];\n            if (vertexOnScreen(vertex)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n}\n\nInkDrop.prototypes = {\n    p5Instance: instanceOf(p5),\n    centerX: number,\n    centerY: number,\n    radius: number,\n};\n\nexport default InkDrop;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\nimport InkDrop from \"./InkDrop\";\nimport \"./InkMarbling.scss\"\n\n/**\n * Original CodingTrain video https://www.youtube.com/watch?v=p7IGZTjC008\n */\nclass InkMarblingSketch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n\n        let drops = [];\n        let colourMode = true;\n        let spawnModeRandom = true;\n\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n            p.frameRate(10);\n\n            createControls();\n        };\n\n        const createControls = () => {\n            const colourSection = p.createDiv();\n            colourSection.parent(\"controls\");\n\n            const greyScaleButton = p.createButton(\"Greyscale\");\n            greyScaleButton.parent(colourSection);\n            greyScaleButton.mousePressed(() => {\n                drops = [];\n                colourMode = false;\n            });\n\n            const colourButton = p.createButton(\"Colour\");\n            colourButton.parent(colourSection);\n            colourButton.mousePressed(() => {\n                drops = [];\n                colourMode = true;\n            })\n\n            const spawnSection = p.createDiv();\n            spawnSection.parent(\"controls\");\n\n            const spawnAtMouseButton = p.createButton(\"At mouse\");\n            spawnAtMouseButton.parent(spawnSection);\n            spawnAtMouseButton.mousePressed(() => {\n                drops = [];\n                spawnModeRandom = false;\n            });\n\n            const spawnAtRandomButton = p.createButton(\"Random\");\n            spawnAtRandomButton.parent(spawnSection);\n            spawnAtRandomButton.mousePressed(() => {\n                drops = [];\n                spawnModeRandom = true;\n            })\n        };\n\n        p.draw = () => {\n            p.background(51);\n            updateInkDrops();\n            drops.forEach((drop) => {\n                drop.show();\n            })\n        };\n\n        const updateInkDrops = () => {\n            let newDrop = createInkDrop();\n            drops.forEach((drop) => {\n                drop.displaceByInDrop(newDrop);\n            })\n\n            drops.push(newDrop);\n\n            drops = drops.filter((drop) => {\n                return drop.isOnScreen(window.innerWidth, window.innerHeight);\n            })\n        }\n\n        const createInkDrop = () => {\n            let colour;\n            if (colourMode) {\n                colour = p.color(p.random(0, 256), p.random(0, 256), p.random(0, 256));\n            } else {\n                colour = p.color(p.random(0, 256));\n            }\n\n            let x, y;\n            if (spawnModeRandom) {\n                x = p.random(0, window.innerWidth);\n                y = p.random(0, window.innerHeight);\n            } else {\n                x = p.mouseX;\n                y = p.mouseY;\n            }\n\n            return new InkDrop(p, x, y, 100, colour);\n        }\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n            drops = [];\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"controls\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <FullscreenElem id='canvas' />\n                <div id='controls' />\n            </div>\n        );\n    }\n}\n\nexport default InkMarblingSketch;\n"],"names":["InkDrop","constructor","p5Instance","centerX","centerY","radius","colour","this","p","center","createVector","vertices","index","angle","map","TWO_PI","vertex","cos","sin","mult","add","push","show","noStroke","fill","beginShape","forEach","x","y","endShape","CLOSE","pop","displaceByInDrop","newInkDrop","c","r","v","pMinusC","p5","sub","pMinusCMagnitude","mag","root","sqrt","sq","result","set","isOnScreen","screenWidth","screenHeight","vertexOnScreen","xOnScreen","yOnScreen","length","prototypes","instanceOf","number","InkMarblingSketch","React","props","super","sketch","drops","colourMode","spawnModeRandom","setup","cnv","createCanvas","window","innerWidth","innerHeight","parent","style","frameRate","createControls","colourSection","createDiv","greyScaleButton","createButton","mousePressed","colourButton","spawnSection","spawnAtMouseButton","spawnAtRandomButton","draw","background","updateInkDrops","drop","newDrop","createInkDrop","filter","color","random","mouseX","mouseY","windowResized","resizeCanvas","myRef","componentDidMount","myP5","current","componentWillUnmount","document","getElementById","replaceChildren","render","_jsxs","ref","children","_jsx","FullscreenElem","id"],"sourceRoot":""}