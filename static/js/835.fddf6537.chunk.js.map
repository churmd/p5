{"version":3,"file":"static/js/835.fddf6537.chunk.js","mappings":"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","sources":["sketches/lissajousCurveTable/Cog.jsx","sketches/lissajousCurveTable/LissajousCurveTable.jsx"],"sourcesContent":["export default class Cog {\n\tconstructor(p, x, y, d, index, vertical) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.d = d;\n\t\tthis.index = index;\n\t\tthis.vertical = vertical;\n\t\tthis.angle = -(this.p.PI / 2);\n\t\tthis.updateLine();\n\t}\n\n\tshow() {\n\t\tthis.p.push();\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255);\n\t\tthis.p.noFill();\n\t\tthis.p.ellipse(this.x, this.y, this.d, this.d);\n\t\tthis.p.strokeWeight(8);\n\t\tthis.p.point(this.lineStartX, this.lineStartY);\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255, 50);\n\t\tthis.p.line(\n\t\t\tthis.lineStartX,\n\t\t\tthis.lineStartY,\n\t\t\tthis.lineEndX,\n\t\t\tthis.lineEndY\n\t\t);\n\t\tthis.p.pop();\n\t}\n\n\tupdateLine() {\n\t\tlet r = this.d / 2;\n\t\tlet lineX = r * this.p.cos(this.angle);\n\t\tlet lineY = r * this.p.sin(this.angle);\n\t\tthis.lineStartX = this.x + lineX;\n\t\tthis.lineStartY = this.y + lineY;\n\t\tif (this.vertical) {\n\t\t\tthis.lineEndX = this.lineStartX;\n\t\t\tthis.lineEndY = this.p.height;\n\t\t} else {\n\t\t\tthis.lineEndX = this.p.width;\n\t\t\tthis.lineEndY = this.lineStartY;\n\t\t}\n\t}\n\n\tupdateAngle() {\n\t\tthis.angle += 0.01 * this.index;\n\t\tthis.updateLine();\n\t}\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Cog from \"./Cog\";\nimport { intersect } from \"mathjs\";\nimport \"./LissajousCurveTable.scss\";\n\nclass LissajousCurveTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let numCogs, gridSize;\n        let diameter;\n        let cogsTop, cogsSide;\n        let patterns;\n\n        p.setup = () => {\n            const minDim = Math.min(p.windowWidth, p.windowHeight);\n            const cnv = p.createCanvas(minDim, minDim);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n            cnv.style(\"margin\", \"auto\");\n\n            p.frameRate(30);\n\n            numCogs = 8;\n            gridSize = numCogs + 1;\n            diameter = minDim / gridSize;\n            cogsTop = [];\n            cogsSide = [];\n            patterns = [[]];\n\n            for (let i = 1; i < gridSize; i++) {\n                let xOff = diameter * (i + 0.5);\n                let c = new Cog(\n                    p,\n                    xOff,\n                    diameter * 0.5,\n                    diameter * 0.95,\n                    i,\n                    true\n                );\n                cogsTop.push(c);\n            }\n\n            for (let i = 1; i < gridSize; i++) {\n                let yOff = diameter * (i + 0.5);\n                let c = new Cog(\n                    p,\n                    diameter * 0.5,\n                    yOff,\n                    diameter * 0.95,\n                    i,\n                    false\n                );\n                cogsSide.push(c);\n            }\n\n            for (let i = 1; i < gridSize; i++) {\n                patterns[i] = [];\n                for (let j = 1; j < gridSize; j++) {\n                    patterns[i][j] = new Set();\n                }\n            }\n        };\n\n        p.draw = () => {\n            p.clear();\n            p.background(51);\n\n            cogsTop.forEach((topCog) => {\n                cogsSide.forEach((sideCog) => {\n                    let l1S = [topCog.lineStartX, topCog.lineStartY];\n                    let l1E = [topCog.lineEndX, topCog.lineEndY];\n                    let l2S = [sideCog.lineStartX, sideCog.lineStartY];\n                    let l2E = [sideCog.lineEndX, sideCog.lineEndY];\n                    let x = intersect(l1S, l1E, l2S, l2E);\n                    patterns[topCog.index][sideCog.index].add(x);\n                });\n            });\n\n            cogsTop.forEach((c) => {\n                c.show();\n                c.updateAngle();\n            });\n\n            cogsSide.forEach((c) => {\n                c.show();\n                c.updateAngle();\n            });\n\n            for (let i = 1; i < gridSize; i++) {\n                for (let j = 1; j < gridSize; j++) {\n                    p.push();\n                    p.stroke(255);\n                    p.strokeWeight(1);\n                    p.noFill();\n                    p.beginShape();\n                    patterns[i][j].forEach((x) => {\n                        p.vertex(x[0], x[1]);\n                    });\n                    p.endShape();\n                    p.pop();\n                }\n            }\n        };\n\n        p.windowResized = () => {\n            p.setup();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"controls\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div className='lissajous-curve-table' ref={this.myRef}>\n                <div id='canvas'></div>\n                <div id='controls'></div>\n            </div>\n        );\n    }\n}\nexport default LissajousCurveTable;\n"],"names":["Cog","p","x","y","d","index","vertical","this","angle","PI","updateLine","push","strokeWeight","stroke","noFill","ellipse","point","lineStartX","lineStartY","line","lineEndX","lineEndY","pop","r","lineX","cos","lineY","sin","height","width","LissajousCurveTable","props","sketch","gridSize","diameter","cogsTop","cogsSide","patterns","setup","minDim","Math","min","windowWidth","windowHeight","cnv","createCanvas","parent","style","frameRate","numCogs","i","c","j","Set","draw","clear","background","forEach","topCog","sideCog","l1S","l1E","l2S","l2E","intersect","add","show","updateAngle","beginShape","vertex","endShape","windowResized","myRef","React","myP5","p5","current","document","getElementById","replaceChildren","className","ref","id"],"sourceRoot":""}