{"version":3,"file":"static/js/156.66ea005e.chunk.js","mappings":"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","sources":["sketches/flowfield/FlowField.js","sketches/flowfield/Particle.js","sketches/flowfield/ParticlesOnFlowField.js","sketches/flowfield/FlowFieldSketch.jsx"],"sourcesContent":["import { sum } from \"mathjs\";\nimport p5 from \"p5\";\nimport { instanceOf, number } from \"prop-types\";\n\nclass FlowField {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} width\n     * @param {Number} height\n     */\n    constructor(p5Instance, width, height) {\n        this.p = p5Instance;\n        this.width = width;\n        this.height = height;\n        this.time = 0;\n\n        this.grid = [];\n        for (let x = 0; x < width; x++) {\n            this.grid[x] = [];\n        }\n\n        for (let x = 0; x < width; x++) {\n            for (let y = 0; y < height; y++) {\n                this.grid[x][y] = this.p.noise(x, y, this.t);\n            }\n        }\n    }\n\n    show(canvasWidth, canvasHeight) {\n        this.p.push();\n\n        const cellWidth = canvasWidth / this.width;\n        const cellHeight = canvasHeight / this.height;\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const xPixel = x * cellWidth;\n                const yPixel = y * cellHeight;\n\n                // const colour = this.grid[x][y] * 255;\n                // this.p.fill(colour);\n                // this.p.rect(xPixel, yPixel, cellWidth, cellHeight);\n\n                this.p.push();\n\n                const halfCellHeight = cellHeight / 2;\n\n                this.p.translate(\n                    xPixel + cellWidth / 2,\n                    yPixel + halfCellHeight\n                );\n\n                this.p.rotate(this.grid[x][y] * this.p.TWO_PI);\n\n                this.p.colorMode(this.p.HSL, 360);\n                const hue = this.p.degrees(this.grid[x][y] * this.p.TWO_PI);\n                const colour = this.p.color(hue, 250, 200);\n\n                this.p.stroke(colour);\n                this.p.fill(colour);\n\n                this.p.line(0, 0, halfCellHeight, 0);\n\n                this.p.triangle(\n                    halfCellHeight,\n                    0,\n                    halfCellHeight - cellHeight / 10,\n                    -cellHeight / 20,\n                    halfCellHeight - cellHeight / 10,\n                    cellHeight / 20\n                );\n\n                this.p.pop();\n            }\n        }\n\n        this.p.pop();\n    }\n\n    update() {\n        this.time += 0.001;\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                this.grid[x][y] = this.p.noise(x, y, this.time);\n            }\n        }\n    }\n\n    /**\n     * @param {p5.Vector} position\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     * @returns {p5.Vector} the velocity of the flow between 0 and 2 PI\n     */\n    flowVelocityFromPixelPosition(position, canvasWidth, canvasHeight) {\n        const gridXPercent = this.p.map(\n            position.x,\n            0,\n            canvasWidth,\n            0,\n            this.width,\n            true\n        );\n        const gridX = this.p.floor(gridXPercent);\n\n        const gridYPercent = this.p.map(\n            position.y,\n            0,\n            canvasHeight,\n            0,\n            this.height,\n            true\n        );\n        const gridY = this.p.floor(gridYPercent);\n\n        const surroundingGridAngles = this.getSurroundingAngles(gridX, gridY);\n        const averageAngle =\n            sum(surroundingGridAngles) / surroundingGridAngles.length;\n\n        const angle = averageAngle * this.p.TWO_PI;\n        return p5.Vector.fromAngle(angle, 1);\n    }\n\n    /**\n     * Returns a list the angles in the grid around a point, including the point itself.\n     * If a surrounding index is out of bounds, it is skipped and not returned in the list.\n     * @param {Number} x grid x index\n     * @param {Number} y grid y index\n     * @returns {Array<Number>} List of all the angles in the grid around a point\n     */\n    getSurroundingAngles(x, y) {\n        const gridPoints = [\n            [x - 1, y - 1],\n            [x - 1, y],\n            [x - 1, y + 1],\n            [x, y - 1],\n            [x, y],\n            [x, y + 1],\n            [x + 1, y - 1],\n            [x + 1, 0],\n            [x + 1, y + 1],\n        ];\n\n        const angles = [];\n        gridPoints.forEach((gridPoint) => {\n            if (\n                gridPoint[0] >= 0 &&\n                gridPoint[1] >= 0 &&\n                gridPoint[0] < this.width &&\n                gridPoint[1] < this.height\n            ) {\n                const angle = this.grid[gridPoint[0]][gridPoint[1]];\n                angles.push(angle);\n            }\n        });\n\n        return angles;\n    }\n}\n\nFlowField.prototypes = {\n    p5Instance: instanceOf(p5),\n    coveredPerc: number,\n    resolution: number,\n    delta: number,\n};\n\nexport default FlowField;\n","import p5 from \"p5\";\nimport { instanceOf, number } from \"prop-types\";\n\nclass Particle {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} x\n     * @param {Number} y\n     */\n    constructor(p5Instance, x, y) {\n        this.p = p5Instance;\n        this.position = this.p.createVector(x, y);\n        this.velocity = this.p.createVector(0, 0);\n    }\n\n    show() {\n        this.p.push();\n\n        this.p.circle(this.position.x, this.position.y, 20);\n\n        this.p.pop();\n    }\n\n    /**\n     * @param {p5.Vector} velocity\n     */\n    addVelocityAndMove(velocity) {\n        this.velocity = this.velocity.add(velocity);\n        this.velocity.normalize();\n        this.position = this.position.add(this.velocity);\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    isOutOfBounds(canvasWidth, canvasHeight) {\n        if (this.position.x < 0 || this.position.y < 0) {\n            return true;\n        }\n\n        if (this.position.x > canvasWidth || this.position.y > canvasHeight) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nParticle.prototypes = {\n    p5Instance: instanceOf(p5),\n    x: number,\n    y: number,\n};\n\nexport default Particle;\n","import p5 from \"p5\";\nimport { instanceOf } from \"prop-types\";\nimport FlowField from \"./FlowField\";\nimport Particle from \"./Particle\";\n\nclass ParticlesOnFlowField {\n    /**\n     * @param {p5} p5Instance\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    constructor(p5Instance, canvasWidth, canvasHeight) {\n        this.p = p5Instance;\n\n        this.flowField = new FlowField(this.p, 30, 30);\n\n        this.numParticles = 200;\n        this.particles = [];\n\n        for (var i = 0; i < this.numParticles; i++) {\n            this.createRandomParticle(canvasWidth, canvasHeight);\n        }\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    createRandomParticle(canvasWidth, canvasHeight) {\n        const x = this.p.random(canvasWidth);\n        const y = this.p.random(canvasHeight);\n        const particle = new Particle(this.p, x, y);\n        this.particles.push(particle);\n    }\n\n    createParticleAtMouse() {\n        const particle = new Particle(this.p, this.p.mouseX, this.p.mouseY);\n        this.particles.push(particle);\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    show(canvasWidth, canvasHeight) {\n        this.p.push();\n\n        this.flowField.show(canvasWidth, canvasHeight);\n\n        this.particles.forEach((particle) => {\n            particle.show();\n        });\n\n        this.p.pop();\n    }\n\n    /**\n     * @param {Number} canvasWidth\n     * @param {Number} canvasHeight\n     */\n    update(canvasWidth, canvasHeight) {\n        this.flowField.update();\n\n        this.particles.forEach((particle) => {\n            const flowFieldVelocity =\n                this.flowField.flowVelocityFromPixelPosition(\n                    particle.position,\n                    canvasWidth,\n                    canvasHeight\n                );\n\n            particle.addVelocityAndMove(flowFieldVelocity);\n        });\n\n        this.particles = this.particles.filter((particle) => {\n            return !particle.isOutOfBounds(canvasWidth, canvasHeight);\n        });\n\n        if (this.particles.length !== this.numParticles) {\n            this.createParticleAtMouse(canvasWidth, canvasHeight);\n        }\n\n        // If there is still space, create another random particle to keep the animation interesting\n        if (this.particles.length !== this.numParticles) {\n            this.createRandomParticle(canvasWidth, canvasHeight);\n        }\n    }\n}\n\nParticlesOnFlowField.prototypes = {\n    p5Instance: instanceOf(p5),\n};\n\nexport default ParticlesOnFlowField;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\nimport ParticlesOnFlowField from \"./ParticlesOnFlowField\";\n\nclass FlowFieldSketch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let flowField;\n\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n\n            flowField = new ParticlesOnFlowField(\n                p,\n                window.innerWidth,\n                window.innerHeight\n            );\n        };\n\n        p.draw = () => {\n            p.background(51);\n            flowField.show(window.innerWidth, window.innerHeight);\n            flowField.update(window.innerWidth, window.innerHeight);\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <FullscreenElem id='canvas' />\n            </div>\n        );\n    }\n}\n\nexport default FlowFieldSketch;\n"],"names":["FlowField","constructor","p5Instance","width","height","this","p","time","grid","x","y","noise","t","show","canvasWidth","canvasHeight","push","cellWidth","cellHeight","xPixel","yPixel","halfCellHeight","translate","rotate","TWO_PI","colorMode","HSL","hue","degrees","colour","color","stroke","fill","line","triangle","pop","update","flowVelocityFromPixelPosition","position","gridXPercent","map","gridX","floor","gridYPercent","gridY","surroundingGridAngles","getSurroundingAngles","angle","sum","length","p5","fromAngle","angles","forEach","gridPoint","prototypes","instanceOf","coveredPerc","number","resolution","delta","Particle","createVector","velocity","circle","addVelocityAndMove","add","normalize","isOutOfBounds","ParticlesOnFlowField","flowField","numParticles","particles","i","createRandomParticle","random","particle","createParticleAtMouse","mouseX","mouseY","flowFieldVelocity","filter","FlowFieldSketch","React","props","super","sketch","setup","cnv","createCanvas","window","innerWidth","innerHeight","parent","style","draw","background","windowResized","resizeCanvas","myRef","componentDidMount","myP5","current","componentWillUnmount","document","getElementById","replaceChildren","render","_jsx","ref","children","FullscreenElem","id"],"sourceRoot":""}