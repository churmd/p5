{"version":3,"file":"static/js/539.cead01f9.chunk.js","mappings":"mMAGMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACF,WAAYC,GAAQ,IAAD,yBACf,cAAMA,IAOVC,OAAS,SAACC,GACNA,EAAEC,MAAQ,WACMD,EAAEE,aAAaC,OAAOC,WAAYD,OAAOE,aACjDC,MAAM,UAAW,SACrB,EAAKC,eACR,EAED,EAAKA,cAAgB,WACjB,EAAKC,OAAS,GACd,EAAKC,UAAY,EACjB,IACMC,EAAwB,GADVV,EAAEW,IAAIR,OAAOC,WAAYD,OAAOE,aACf,EAErCL,EAAEY,UAAUZ,EAAEa,SAEd,IADA,IAAMC,EAAYd,EAAEe,OAAS,EAAKN,UACzBO,EAAI,EAAGA,EAAI,EAAKP,UAAWO,IAAK,CACrC,IAAIC,EAAQD,EAAIF,EAEhBG,GAASjB,EAAEkB,GAAK,EAChB,IAAMC,EAAQC,IAAAA,OAAAA,UAAoBH,GAClCE,EAAME,KAAKX,GACXS,EAAMG,IAAInB,OAAOC,WAAa,EAAGD,OAAOE,YAAc,GACtD,EAAKG,OAAOe,KAAKJ,EACpB,CAED,EAAKK,WAAaxB,EAAEyB,aAChBzB,EAAE0B,OAAOvB,OAAOC,YAChBJ,EAAE0B,OAAOvB,OAAOE,cAGpB,EAAKsB,aACR,EAED,EAAKA,YAAc,WACf3B,EAAE4B,WAAW,IAEb,EAAKpB,OAAOqB,SAAQ,SAACV,GACjBnB,EAAE8B,OAAO,KACT9B,EAAE+B,KAAK,KACP/B,EAAEgC,OAAOb,EAAMc,EAAGd,EAAMe,EAAG,GAC9B,IAEDlC,EAAEmC,WACFnC,EAAE+B,KAAK,IAAK,EAAG,IAAK,KACpB/B,EAAEgC,OAAO,EAAKR,WAAWS,EAAG,EAAKT,WAAWU,EAAG,EAClD,EAEDlC,EAAEoC,KAAO,WACL,IAAMC,EAAcrC,EAAE0B,OAAO,EAAKlB,QAC5B8B,EAAYlB,IAAAA,OAAAA,KAAe,EAAKI,WAAYa,EAAa,IAC/DrC,EAAEmC,WACFnC,EAAE+B,KAAK,IAAK,EAAG,IAAK,KACpB/B,EAAEgC,OAAOM,EAAUL,EAAGK,EAAUJ,EAAG,GAEnC,EAAKV,WAAac,CACrB,EAEDtC,EAAEuC,cAAgB,WACdvC,EAAEwC,aAAarC,OAAOC,WAAYD,OAAOE,aACzC,EAAKE,eACR,CACJ,EAnEG,EAAKkC,MAAQC,EAAAA,YACb,EAAKlC,OAAS,GACd,EAAKC,UAAY,EACjB,EAAKe,WAAa,IAAIJ,IAAAA,QAAU,EAAG,GALpB,CAMlB,CA4EA,OA5EA,yCAiED,WACIuB,KAAKC,KAAO,IAAIxB,IAAJ,CAAOuB,KAAK5C,OAAQ4C,KAAKF,MAAMI,QAC9C,qCAED,WACIC,SAASC,eAAe,UAAUC,kBAClCF,SAASC,eAAe,YAAYC,iBACvC,uBAED,WACI,OAAO,gBAAKC,IAAKN,KAAKF,OACzB,OAnFC5C,CAAkB6C,EAAAA,WAqFxB,W","sources":["sketches/chaosGame/ChaosGame.jsx"],"sourcesContent":["import React from \"react\";\nimport p5 from \"p5\";\n\nclass ChaosGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.points = [];\n        this.numPoints = 3;\n        this.prevMarker = new p5.Vector(0, 0);\n    }\n\n    sketch = (p) => {\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.style(\"display\", \"block\");\n            this.createNewGame();\n        };\n\n        this.createNewGame = () => {\n            this.points = [];\n            this.numPoints = 3;\n            const smallestDim = p.min(window.innerWidth, window.innerHeight);\n            const radius = (smallestDim * 0.9) / 2;\n\n            p.angleMode(p.RADIANS);\n            const angleStep = p.TWO_PI / this.numPoints;\n            for (let i = 0; i < this.numPoints; i++) {\n                let angle = i * angleStep;\n                // minus half pi so the first point is centered at the top\n                angle -= p.PI / 2;\n                const point = p5.Vector.fromAngle(angle);\n                point.mult(radius);\n                point.add(window.innerWidth / 2, window.innerHeight / 2);\n                this.points.push(point);\n            }\n\n            this.prevMarker = p.createVector(\n                p.random(window.innerWidth),\n                p.random(window.innerHeight)\n            );\n\n            this.drawNewGame();\n        };\n\n        this.drawNewGame = () => {\n            p.background(51);\n\n            this.points.forEach((point) => {\n                p.stroke(255);\n                p.fill(255);\n                p.circle(point.x, point.y, 10);\n            });\n\n            p.noStroke();\n            p.fill(255, 0, 255, 100);\n            p.circle(this.prevMarker.x, this.prevMarker.y, 5);\n        };\n\n        p.draw = () => {\n            const randomPoint = p.random(this.points);\n            const newMarker = p5.Vector.lerp(this.prevMarker, randomPoint, 0.5);\n            p.noStroke();\n            p.fill(255, 0, 255, 100);\n            p.circle(newMarker.x, newMarker.y, 5);\n\n            this.prevMarker = newMarker;\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n            this.createNewGame();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"controls\").replaceChildren();\n    }\n\n    render() {\n        return <div ref={this.myRef}></div>;\n    }\n}\nexport default ChaosGame;\n"],"names":["ChaosGame","props","sketch","p","setup","createCanvas","window","innerWidth","innerHeight","style","createNewGame","points","numPoints","radius","min","angleMode","RADIANS","angleStep","TWO_PI","i","angle","PI","point","p5","mult","add","push","prevMarker","createVector","random","drawNewGame","background","forEach","stroke","fill","circle","x","y","noStroke","draw","randomPoint","newMarker","windowResized","resizeCanvas","myRef","React","this","myP5","current","document","getElementById","replaceChildren","ref"],"sourceRoot":""}