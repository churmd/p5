{"version":3,"file":"static/js/938.8c6f8758.chunk.js","mappings":"6KAGA,MAAMA,UAAkBC,EAAAA,UACpBC,WAAAA,CAAYC,GACRC,MAAMD,GAAO,KAOjBE,OAAUC,IACNA,EAAEC,MAAQ,KACMD,EAAEE,aAAaC,OAAOC,WAAYD,OAAOE,aACjDC,MAAM,UAAW,SACrBC,KAAKC,eAAe,EAGxBD,KAAKC,cAAgB,KACjBD,KAAKE,OAAS,GACdF,KAAKG,UAAY,EACjB,MACMC,EAAwB,GADVX,EAAEY,IAAIT,OAAOC,WAAYD,OAAOE,aACf,EAErCL,EAAEa,UAAUb,EAAEc,SACd,MAAMC,EAAYf,EAAEgB,OAAST,KAAKG,UAClC,IAAK,IAAIO,EAAI,EAAGA,EAAIV,KAAKG,UAAWO,IAAK,CACrC,IAAIC,EAAQD,EAAIF,EAEhBG,GAASlB,EAAEmB,GAAK,EAChB,MAAMC,EAAQC,IAAAA,OAAUC,UAAUJ,GAClCE,EAAMG,KAAKZ,GACXS,EAAMI,IAAIrB,OAAOC,WAAa,EAAGD,OAAOE,YAAc,GACtDE,KAAKE,OAAOgB,KAAKL,EACrB,CAEAb,KAAKmB,WAAa1B,EAAE2B,aAChB3B,EAAE4B,OAAOzB,OAAOC,YAChBJ,EAAE4B,OAAOzB,OAAOE,cAGpBE,KAAKsB,aAAa,EAGtBtB,KAAKsB,YAAc,KACf7B,EAAE8B,WAAW,IAEbvB,KAAKE,OAAOsB,SAASX,IACjBpB,EAAEgC,OAAO,KACThC,EAAEiC,KAAK,KACPjC,EAAEkC,OAAOd,EAAMe,EAAGf,EAAMgB,EAAG,GAAG,IAGlCpC,EAAEqC,WACFrC,EAAEiC,KAAK,IAAK,EAAG,IAAK,KACpBjC,EAAEkC,OAAO3B,KAAKmB,WAAWS,EAAG5B,KAAKmB,WAAWU,EAAG,EAAE,EAGrDpC,EAAEsC,KAAO,KACL,MAAMC,EAAcvC,EAAE4B,OAAOrB,KAAKE,QAC5B+B,EAAYnB,IAAAA,OAAUoB,KAAKlC,KAAKmB,WAAYa,EAAa,IAC/DvC,EAAEqC,WACFrC,EAAEiC,KAAK,IAAK,EAAG,IAAK,KACpBjC,EAAEkC,OAAOM,EAAUL,EAAGK,EAAUJ,EAAG,GAEnC7B,KAAKmB,WAAac,CAAS,EAG/BxC,EAAE0C,cAAgB,KACd1C,EAAE2C,aAAaxC,OAAOC,WAAYD,OAAOE,aACzCE,KAAKC,eAAe,CACvB,EAlEDD,KAAKqC,MAAQjD,EAAAA,YACbY,KAAKE,OAAS,GACdF,KAAKG,UAAY,EACjBH,KAAKmB,WAAa,IAAIL,IAAAA,QAAU,EAAG,EACvC,CAiEAwB,iBAAAA,GACItC,KAAKuC,KAAO,IAAIzB,IAAJ,CAAOd,KAAKR,OAAQQ,KAAKqC,MAAMG,QAC/C,CAEAC,oBAAAA,GACIC,SAASC,eAAe,UAAUC,kBAClCF,SAASC,eAAe,YAAYC,iBACxC,CAEAC,MAAAA,GACI,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,IAAK/C,KAAKqC,OAC1B,EAEJ,S","sources":["sketches/chaosGame/ChaosGame.jsx"],"sourcesContent":["import React from \"react\";\nimport p5 from \"p5\";\n\nclass ChaosGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n        this.points = [];\n        this.numPoints = 3;\n        this.prevMarker = new p5.Vector(0, 0);\n    }\n\n    sketch = (p) => {\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.style(\"display\", \"block\");\n            this.createNewGame();\n        };\n\n        this.createNewGame = () => {\n            this.points = [];\n            this.numPoints = 3;\n            const smallestDim = p.min(window.innerWidth, window.innerHeight);\n            const radius = (smallestDim * 0.9) / 2;\n\n            p.angleMode(p.RADIANS);\n            const angleStep = p.TWO_PI / this.numPoints;\n            for (let i = 0; i < this.numPoints; i++) {\n                let angle = i * angleStep;\n                // minus half pi so the first point is centered at the top\n                angle -= p.PI / 2;\n                const point = p5.Vector.fromAngle(angle);\n                point.mult(radius);\n                point.add(window.innerWidth / 2, window.innerHeight / 2);\n                this.points.push(point);\n            }\n\n            this.prevMarker = p.createVector(\n                p.random(window.innerWidth),\n                p.random(window.innerHeight)\n            );\n\n            this.drawNewGame();\n        };\n\n        this.drawNewGame = () => {\n            p.background(51);\n\n            this.points.forEach((point) => {\n                p.stroke(255);\n                p.fill(255);\n                p.circle(point.x, point.y, 10);\n            });\n\n            p.noStroke();\n            p.fill(255, 0, 255, 100);\n            p.circle(this.prevMarker.x, this.prevMarker.y, 5);\n        };\n\n        p.draw = () => {\n            const randomPoint = p.random(this.points);\n            const newMarker = p5.Vector.lerp(this.prevMarker, randomPoint, 0.5);\n            p.noStroke();\n            p.fill(255, 0, 255, 100);\n            p.circle(newMarker.x, newMarker.y, 5);\n\n            this.prevMarker = newMarker;\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n            this.createNewGame();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    componentWillUnmount() {\n        document.getElementById(\"canvas\").replaceChildren();\n        document.getElementById(\"controls\").replaceChildren();\n    }\n\n    render() {\n        return <div ref={this.myRef}></div>;\n    }\n}\nexport default ChaosGame;\n"],"names":["ChaosGame","React","constructor","props","super","sketch","p","setup","createCanvas","window","innerWidth","innerHeight","style","this","createNewGame","points","numPoints","radius","min","angleMode","RADIANS","angleStep","TWO_PI","i","angle","PI","point","p5","fromAngle","mult","add","push","prevMarker","createVector","random","drawNewGame","background","forEach","stroke","fill","circle","x","y","noStroke","draw","randomPoint","newMarker","lerp","windowResized","resizeCanvas","myRef","componentDidMount","myP5","current","componentWillUnmount","document","getElementById","replaceChildren","render","_jsx","ref"],"sourceRoot":""}