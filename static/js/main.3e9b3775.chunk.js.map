{"version":3,"sources":["NotFound.jsx","sketches/moduloTimesTableCircle/ModuloTimesTable.jsx","sketches/snowfalkeGenerator/SnowflakeGenerator.jsx","sketches/flockingSimulation/Bird.jsx","sketches/flockingSimulation/FlockingSimulation.jsx","sketches/lissajousCurveTable/Cog.jsx","sketches/lissajousCurveTable/LissajousCurveTable.jsx","sketches/matrixRain/Symbol.jsx","sketches/matrixRain/Stream.jsx","sketches/matrixRain/MatrixRain.jsx","sketches/maurerRose/MaurerRose.jsx","sketches/mazeGenerator/Tile.js","sketches/mazeGenerator/Maze.js","components/fullscreenElem/FullscreenElem.jsx","sketches/mazeGenerator/MazeGenerator.jsx","sketches/chaosGame/ChaosGame.jsx","constants/RoutePaths.js","components/sketchImages/SketchImage.jsx","images/beautifulTrig/beautifulTrigDisabled-1920w.jpeg","images/beautifulTrig/beautifulTrigDisabled-1080w.jpeg","images/beautifulTrig/beautifulTrigDisabled-720w.jpeg","images/beautifulTrig/beautifulTrigDisabled-480w.jpeg","components/sketchImages/BeautifulTrigImg.jsx","components/sketchTile/SketchTile.jsx","images/flockingSimulation/flockingSimulation-1920w.jpeg","images/flockingSimulation/flockingSimulation-1080w.jpeg","images/flockingSimulation/flockingSimulation-720w.jpeg","components/sketchImages/FlockingSimulationImg.jsx","images/snowflakeGenerator/snowflakeGenerator-1920w.jpeg","images/snowflakeGenerator/snowflakeGenerator-1080w.jpeg","images/snowflakeGenerator/snowflakeGenerator-720w.jpeg","images/snowflakeGenerator/snowflakeGenerator-480w.jpeg","components/sketchImages/SnowflakeGenerator.jsx","images/moduloTimesTable/moduloTimesTable-1920w.jpeg","images/moduloTimesTable/moduloTimesTable-1080w.jpeg","images/moduloTimesTable/moduloTimesTable-720w.jpeg","images/moduloTimesTable/moduloTimesTable-480w.jpeg","components/sketchImages/ModuloTimesTable.jsx","images/matrixRain/matrixRain-1920w.jpeg","images/matrixRain/matrixRain-1080w.jpeg","images/matrixRain/matrixRain-720w.jpeg","images/matrixRain/matrixRain-480w.jpeg","components/sketchImages/MatrixRain.jsx","images/lissajousCurveTable/lissajousCurveTable-1920w.jpeg","images/lissajousCurveTable/lissajousCurveTable-1080w.jpeg","images/lissajousCurveTable/lissajousCurveTable-720w.jpeg","images/lissajousCurveTable/lissajousCurveTable-480w.jpeg","components/sketchImages/LissajousCurveTableImg.jsx","images/maurerRose/maurerRose-1920w.jpeg","images/maurerRose/maurerRose-1080w.jpeg","images/maurerRose/maurerRose-720w.jpeg","components/sketchImages/MaurerRose.jsx","images/chaosGame/chaosGame-1920w.jpeg","images/chaosGame/chaosGame-1080w.jpeg","images/chaosGame/chaosGame-720w.jpeg","components/sketchImages/ChaosGameImg.jsx","images/hexes/randomHexes-1920w.jpeg","images/hexes/randomHexes-1080w.jpeg","images/hexes/randomHexes-720w.jpeg","images/hexes/randomHexes-480w.jpeg","components/sketchImages/HexesImg.jsx","images/mazeGenerator/mazeGenerator-1920w.jpeg","images/mazeGenerator/mazeGenerator-1080w.jpeg","images/mazeGenerator/mazeGenerator-720w.jpeg","images/mazeGenerator/mazeGenerator-480w.jpeg","components/sketchImages/MazeGeneratorImg.jsx","components/sketchList/SketchList.jsx","components/description/Description.jsx","components/home/Home.jsx","sketches/beautifulTrig/BeautifulTrig.jsx","sketches/hexes/Hex.js","sketches/hexes/HexGrid.js","sketches/hexes/CenterOutHexGrid.js","sketches/hexes/RandomHexGrid.js","sketches/hexes/Hexes.jsx","App.js","index.js"],"names":["Notfound","ModuloTimesTable","props","sketch","p","base","factor","getIndexVector","index","radius","angle","map","TWO_PI","v","p5","Vector","fromAngle","PI","mult","setup","createCanvas","windowWidth","windowHeight","style","draw","background","Number","MAX_VALUE","min","outerRadius","innerRadius","translate","textSize","stroke","noFill","circle","fill","i","timesResult","p1","p2","p3","x","y","line","text","pointSize","windowResized","resizeCanvas","myRef","React","createRef","this","myP5","current","ref","Component","SnowflakeGenerator","snowflakeBranch","newestPoint","sameSnowflakeCounter","clearSnowflake","showPoint","point","ellipse","pointRadius","isIntersecting","length","existingPoint","dist","randomWalkPoint","angleThreshold","random","heading","constrain","magnitude","mag","point2","setMag","frameRate","countBeforeClearing","getFrameRate","minWindowSize","Math","createVector","counter","push","addNextPoint","rotate","rotationAmount","scale","pop","Bird","id","uuid","pos","r","neighbourhood","showNeighbourhood","noStroke","triangle","birds","sepMult","alignMult","cohMult","maxX","maxY","otherBirds","filter","bird","distance","sepHeading","separate","alignHeading","align","cohHeading","cohesion","desiredHeading","add","normalize","changeHeading","keepInBounds","acc","forEach","headingToBird","sub","avgPos","div","minX","minY","closestInbounds","copy","equals","headingToInbounds","desiredPart","newHeading","FlockingSimulation","sepMultSlider","alignMultSlider","cohMultSlider","neighbourhoodSlider","neighbourhoodCheckbox","cnv","parent","rndX","rndY","createSlider","createCheckbox","value","update","show","checked","className","Cog","d","vertical","updateLine","strokeWeight","lineStartX","lineStartY","lineEndX","lineEndY","lineX","cos","lineY","sin","height","width","LissajousCurveTable","gridSize","diameter","cogsTop","cogsSide","patterns","minDim","numCogs","c","j","Set","clear","topCog","sideCog","l1S","l1E","l2S","l2E","intersect","updateAngle","beginShape","vertex","endShape","Symbol","velocity","isWhite","setRandomSymbol","decimal","String","fromCharCode","render","changeProb","Stream","symbolSize","randomInt","calcStreamLen","sym","symbols","max","int","maxLen","minLen","MatrixRain","streams","createNewStreams","stream","s","MaurerRose","cnvWidth","cnvHeight","size","nSlider","dSlider","n","play","createControls","drawMaurerRose","drawRose","angleMode","RADIANS","vertexFromPolar","DEGREES","k","theta","controls","createDiv","sliderDiv","nDiv","dDiv","buttonDiv","pauseButton","createButton","mousePressed","html","resetButton","console","log","Connection","tileA","tileB","isWall","Tile","connectionAbove","connectionRight","connectionLeft","connectionBelow","tile","connection","getTileConnections","adjacentTile","find","topLeftXPix","topLeftYPix","tileLength","rect","wallThickness","topRightXPix","topRightYPix","bottomLeftXPix","bottomLeftYPix","bottomRightXPix","bottomRightYPix","Maze","tiles","visistedTiles","walls","__addAdjacentTiles","randomX","floor","randomY","start","concat","getWallConnections","__isValidCoord","setLeftConnection","setAboveConnection","setRightConnection","setBelowConnection","array","elem","xMatch","yMatch","randomWall","tileAVisited","has","tileBVisited","removeWallBetween","splice","wallRemoved","__createMazeUntilWallRemoved","canvasWidth","canvasHeight","maxTileWidth","maxTileHeight","xOffset","yOffset","__showTiles","__showWalls","showTile","showWalls","FullscreenElem","toggleCavasFullScreen","canvasElem","document","getElementById","fullscreenElement","exitFullScreen","openFullScreen","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","onClick","MazeGeneratoe","maze","framesSinceMazeCompleted","window","innerWidth","innerHeight","completed","ChaosGame","createNewGame","points","numPoints","angleStep","prevMarker","drawNewGame","randomPoint","newMarker","lerp","chaosGame","beautifulTrig","flockingSimulation","hexes","lissajousCurveTable","matrixRain","maurerRose","mazeGenerator","moduloTimesTable","snowflakeGenerator","SketchImage","loading","src","image","srcSet","srcset","sizes","alt","defaultProps","srcSetString","BeautifulTrigFile1920","BeautifulTrigFile1080","BeautifulTrigFile720","BeautifulTrigFile480","BeautifulTrigImg","SketchTile","history","useHistory","routerPath","title","isMobileFriendly","desc","FlockingSimulation1920","FlockingSimulation1080","FlockingSimulation720","FlockingSimulationImg","SnowflakeGenerator1920","SnowflakeGenerator1080","SnowflakeGenerator720","SnowflakeGenerator480","SnowflakeGeneratorImg","ModuloTimesTable1920","ModuloTimesTable1080","ModuloTimesTable720","ModuloTimesTable480","ModuloTimesTableImg","MatrixRain1920","MatrixRain1080","MatrixRain720","MatrixRain480","MatrixRainImg","LissajousCurveTable1920","LissajousCurveTable1080","LissajousCurveTable720","LissajousCurveTable480","LissajousCurveTableImg","MaurerRose1920","MaurerRose1080","MaurerRose720","MaurerRoseImg","ChaosGame1920","ChaosGame1080","ChaosGame720","ChaosGameImg","HexesFile1920","HexesFile1080","HexesFile720","HexesFile480","HexesImg","MazeGeneratorFile1920","MazeGeneratorFile1080","MazeGeneratorFile720","MazeGeneratorFile480","MazeGeneratorImg","SketchList","routePaths","Description","href","Home","BeautifulTrig","numLines","showTrigEnabled","getCanvasWidth","getCanvasHeight","showTrigButton","redraw","circleDiameter","circleRadius","showLines","showOuterCircleLine","showTrigLines","showPoints","showOuterCirclePoint","updateState","roatationStep","colorMode","HSL","sinColour","color","cosColour","sinArcDiameter","arc","cosArcDiameter","HALF_PI","xPosOnCircle","yPosOnCircle","cosPosition","sinePosition","pointOffset","pointAngle","hue","colour","xPos","yPos","Hex","maxSideLength","sideLength","growing","growthRate","fillColour","outlineColour","pointA","radians","pointB","pointC","pointD","pointE","pointF","CLOSE","HexGrid","hexSideLength","horizontalHexSpacing","verticleHexSpacing","maxHexXPos","maxHexYPos","__createHexes","visited","explore","coord","some","element","xDiff","abs","yDiff","surroundingHexes","__getSurroundingHexes","h","hex","CenterOutHexGrid","lastHueIncrementTime","Date","now","setCenterOutPattern","maxDistFromCenter","hexDistFromCenter","startingSideLength","setSideLength","grow","saturation","lightness","setColour","currentTime","RandomHexGrid","setRandomPattern","maxColourVal","sat","light","startingSize","shrink","Hexes","hexGrid","currentPattern","patternRadioGroup","randomPattern","centerOutPattern","getSideLength","createHexGrid","createRadio","option","selected","routing","exact","path","component","MazeGenerator","App","StrictMode","rootElement","hasChildNodes","hydrate"],"mappings":"uUAEeA,EADE,kBAAM,iD,4CC2ERC,E,kDAxEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IAAIC,EAAO,IACPC,EAAS,EA6Cb,SAASC,EAAeC,EAAOH,EAAMI,GACpC,IAAMC,EAAQN,EAAEO,IAAIH,EAAO,EAAGH,EAAM,EAAGD,EAAEQ,QACrCC,EAAIC,IAAGC,OAAOC,UAAUN,EAAQN,EAAEa,IAEtC,OADAJ,EAAEK,KAAKT,GACAI,EA/CRT,EAAEe,MAAQ,WACCf,EAAEgB,aAAahB,EAAEiB,YAAajB,EAAEkB,cACtCC,MAAM,UAAW,UAGtBnB,EAAEoB,KAAO,WACRpB,EAAEqB,WAAW,IAETnB,IAAWoB,OAAOC,UACrBrB,GAAkB,IAElBA,EAAS,EAGV,IAAMG,EAASL,EAAEwB,IAAIxB,EAAEiB,YAAc,EAAGjB,EAAEkB,aAAe,GACnDO,EAAuB,IAATpB,EACdqB,EAAuB,GAATrB,EAIpBL,EAAE2B,UAAU3B,EAAEiB,YAAc,EAAGjB,EAAEkB,aAAe,GAChDlB,EAAE4B,SAJgB,IAMlB5B,EAAE6B,OAAO,KACT7B,EAAE8B,SACF9B,EAAE+B,OAAO,EAAG,EAAiB,EAAdL,GAEf1B,EAAEgC,KAAK,KACP,IAAK,IAAIC,EAAI,EAAGA,EAAIhC,EAAMgC,IAAK,CAC9B,IAAMC,EAAeD,EAAI/B,EAAUD,EAE7BkC,EAAKhC,EAAe8B,EAAGhC,EAAMyB,GAC7BU,EAAKjC,EAAe+B,EAAajC,EAAMyB,GACvCW,EAAKlC,EAAe8B,EAAGhC,EAAMwB,GAEnCzB,EAAE+B,OAAOI,EAAGG,EAAGH,EAAGI,EAlBD,IAmBjBvC,EAAEwC,KAAKL,EAAGG,EAAGH,EAAGI,EAAGH,EAAGE,EAAGF,EAAGG,GAC5BvC,EAAEyC,KAAKR,EAAGI,EAAGC,EAnBQI,EAmBWL,EAAGE,EAnBdG,KAgCvB1C,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAa5C,EAAEiB,YAAajB,EAAEkB,gBA1DjC,EAAK2B,MAAQC,IAAMC,YAFD,E,gEAiElBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OAAO,yBAAKC,IAAKH,KAAKH,Y,GAtEOC,IAAMM,WC0ItBC,E,kDAzId,WAAYvD,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IAGIsD,EACAC,EACAC,EA8CJ,SAASC,IACRzD,EAAEqB,WAAW,IACbiC,EAAkB,GAClBC,EAAc,KACdC,EAAuB,EAGxB,SAASE,EAAUC,GAClB3D,EAAE4D,QAAQD,EAAMrB,EAAGqB,EAAMpB,EAAGsB,EAAiBA,GA+B9C,SAASC,EAAeH,GACvB,IAAK,IAAI1B,EAAI,EAAGA,EAAIqB,EAAgBS,OAAQ9B,IAAK,CAChD,IAAM+B,EAAgBV,EAAgBrB,GAOtC,GANwBjC,EAAEiE,KACzBD,EAAc1B,EACd0B,EAAczB,EACdoB,EAAMrB,EACNqB,EAAMpB,IAEgBsB,EACtB,OAAO,EAGT,OAAO,EAIR,SAASK,EAAgBP,EAAOQ,GAC/BR,EAAMrB,GAAK,EACXqB,EAAMpB,GAAKvC,EAAEoE,QAAQ,EAAG,GAExB,IAAI9D,EAAQqD,EAAMU,UAClB/D,EAAQN,EAAEsE,UAAUhE,EAAO,EAAG6D,GAE9B,IAAMI,EAAYZ,EAAMa,MAClBC,EAAS/D,IAAGC,OAAOC,UAAUN,GACnCmE,EAAOC,OAAOH,GAEdZ,EAAMrB,EAAImC,EAAOnC,EACjBqB,EAAMpB,EAAIkC,EAAOlC,EAhHlBvC,EAAEe,MAAQ,WACCf,EAAEgB,aAAahB,EAAEiB,YAAajB,EAAEkB,cACtCC,MAAM,UAAW,SACrBnB,EAAE2E,UAAU,IACZlB,KAGDzD,EAAEoB,KAAO,WACR,IAAMwD,EAbgC,EAcrC5E,EAAE6E,eAMH,GALIrB,EAAuBoB,GAC1BnB,IA8CF,WACC,IAAMqB,EAAgBC,KAAKvD,IAC1BxB,EAAEiB,YAAc,EAChBjB,EAAEkB,aAAe,GAEZyC,EAAQ3D,EAAEgF,aAAaF,EAAe,GACxCG,EAAU,EAEd,KACCf,EAAgBP,EAAO3D,EAAEQ,OAAF,MACnBmD,EAAMrB,EAAI,GAAKwB,EAAeH,KAGlCsB,IAGD,OAAIA,EAAU,IACb3B,EAAgB4B,KAAKvB,GACrBJ,EAAcI,GACP,GA9DWwB,GACnB,CAOAnF,EAAE2B,UAAU3B,EAAEiB,YAAc,EAAGjB,EAAEkB,aAAe,GAChDlB,EAAEoF,OAAOpF,EAAEQ,OAAF,IAGT,IADA,IAAM6E,EAAiBrF,EAAEQ,OAhCN,EAiCVyB,EAAI,EAAGA,EAjCG,EAiCcA,IAChCjC,EAAEoF,OAAOC,GAET3B,EAAUH,GAEVvD,EAAEkF,OACFlF,EAAEsF,MAAM,GAAI,GACZ5B,EAAUH,GACVvD,EAAEuF,WAlBF/B,KAsBFxD,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAa5C,EAAEiB,YAAajB,EAAEkB,cAChCuC,MAnDD,EAAKZ,MAAQC,IAAMC,YAFD,E,gEAkIlBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OAAO,yBAAKC,IAAKH,KAAKH,Y,GAvISC,IAAMM,WCDlBoC,E,WACpB,WAAYxF,EAAGsC,EAAGC,EAAGkD,GAAK,oBACzBzC,KAAKhD,EAAIA,EACTgD,KAAK0C,KAAOD,EACZzC,KAAK2C,IAAM3C,KAAKhD,EAAEgF,aAAa1C,EAAGC,GAClCS,KAAK4C,EAAI,EACT5C,KAAKqB,QAAUrB,KAAKhD,EAAEgF,aACrBhC,KAAKhD,EAAEoE,QAAQ,EAAG,GAClBpB,KAAKhD,EAAEoE,QAAQ,EAAG,I,iDAIfyB,EAAeC,GACnB9C,KAAKhD,EAAEkF,OAEPlC,KAAKhD,EAAE2B,UAAUqB,KAAK2C,IAAIrD,EAAGU,KAAK2C,IAAIpD,GACtCS,KAAKhD,EAAEoF,OAAOpC,KAAKqB,QAAQA,UAAYrB,KAAKhD,EAAEa,GAAK,GAE/CiF,IACH9C,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAEgC,KAAK,IAAK,IACjBgB,KAAKhD,EAAE+F,WACP/C,KAAKhD,EAAE4D,QAAQ,EAAG,EAAmB,EAAhBiC,EAAmC,EAAhBA,GACxC7C,KAAKhD,EAAEuF,OAGRvC,KAAKhD,EAAEgC,KAAK,KACZgB,KAAKhD,EAAEgG,UAAU,GAAI,GAAI,GAAI,GAAI,GAAI,IAErChD,KAAKhD,EAAEuF,Q,6BAGDU,EAAOC,EAASC,EAAWC,EAASP,EAAeQ,EAAMC,GAAO,IAAD,OAC/DC,EAAaN,EAAMO,QAAO,SAACC,GAChC,IAAMC,EAAW,EAAK1G,EAAEiE,KACvB,EAAK0B,IAAIrD,EACT,EAAKqD,IAAIpD,EACTkE,EAAKd,IAAIrD,EACTmE,EAAKd,IAAIpD,GAEV,OAAOkE,EAAKf,OAAS,EAAKA,MAAQgB,EAAWb,KAGxCc,EAAa3D,KAAK4D,SAASL,GAAYzF,KAAKoF,GAC5CW,EAAe7D,KAAK8D,MAAMP,GAAYzF,KAAKqF,GAC3CY,EAAa/D,KAAKgE,SAAST,GAAYzF,KAAKsF,GAE5Ca,EAAiBjE,KAAKhD,EAAEgF,aAAa,EAAG,GAC9CiC,EAAeC,IAAIP,GACnBM,EAAeC,IAAIL,GACnBI,EAAeC,IAAIH,GACnBE,EAAeE,YAEfnE,KAAKoE,cAAcH,GAEnBjE,KAAK2C,IAAIuB,IAAIlE,KAAKqB,SAClBrB,KAAKqE,aAAa,EAAG,EAAGhB,EAAMC,K,+BAItBL,GAAQ,IAAD,OACXqB,EAAMtE,KAAKhD,EAAEgF,aAAa,EAAG,GAQjC,OANAiB,EAAMsB,SAAQ,SAACd,GACd,IAAIe,EAAgB9G,IAAGC,OAAO8G,IAAIhB,EAAKd,IAAK,EAAKA,KACjD2B,EAAIJ,IAAIM,MAGTF,EAAIH,YACGG,EAAIxG,MAAM,K,4BAIZmF,GACL,IAAIqB,EAAMtE,KAAKhD,EAAEgF,aAAa,EAAG,GAMjC,OAJAiB,EAAMsB,SAAQ,SAACd,GACda,EAAIJ,IAAIT,EAAKpC,YAGPiD,EAAIH,c,+BAIHlB,GACR,IAAIqB,EAAMtE,KAAKhD,EAAEgF,aAAa,EAAG,GAEjC,GAAqB,IAAjBiB,EAAMlC,OACT,OAAOuD,EAGRrB,EAAMsB,SAAQ,SAACd,GACda,EAAIJ,IAAIT,EAAKd,QAGd,IAAM+B,EAAShH,IAAGC,OAAOgH,IAAIL,EAAKrB,EAAMlC,QAExC,OADwBrD,IAAGC,OAAO8G,IAAIC,EAAQ1E,KAAK2C,KAC5BwB,c,mCAGXS,EAAMC,EAAMxB,EAAMC,GAC9B,IAAMwB,EAAkB9E,KAAK2C,IAAIoC,OAkBjC,GAhBI/E,KAAK2C,IAAIrD,EAAIsF,IAChBE,EAAgBxF,EAAIsF,GAGjB5E,KAAK2C,IAAIpD,EAAIsF,IAChBC,EAAgBvF,EAAIsF,GAGjB7E,KAAK2C,IAAIrD,EAAI+D,IAChByB,EAAgBxF,EAAI+D,GAGjBrD,KAAK2C,IAAIpD,EAAI+D,IAChBwB,EAAgBvF,EAAI+D,IAGhBwB,EAAgBE,OAAOhF,KAAK2C,KAAM,CACtC,IAAMsC,EAAoBvH,IAAGC,OAAO8G,IAAIK,EAAiB9E,KAAK2C,KAC9D3C,KAAKoE,cAAca,M,oCAIPhB,GACb,IAEMiB,EAAcxH,IAAGC,OAAOG,KAAKmG,EAFP,IAItBkB,EADczH,IAAGC,OAAOG,KAAKkC,KAAKqB,QAFZ,IAGG6C,IAAIgB,GACnCC,EAAWhB,YACXnE,KAAKqB,QAAU8D,M,KC5BFC,G,wDApGd,WAAYtI,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IAKIqI,EAAeC,EAAiBC,EAAeC,EAC/CC,EANAxC,EAAQ,GACRC,EAAU,GACVC,EAAY,GACZC,EAAU,GACVP,EAAgB,IAIpB7F,EAAEe,MAAQ,WACT,IAAI2H,EAAM1I,EAAEgB,aAAahB,EAAEiB,YAA8B,GAAjBjB,EAAEkB,cAC1CwH,EAAIC,OAAO,UACXD,EAAIvH,MAAM,UAAW,SAErB,IAAK,IAAIc,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,IAAM2G,EAAO5I,EAAEoE,OAAO,EAAGpE,EAAEiB,aACrB4H,EAAO7I,EAAEoE,OAAO,EAAoB,GAAjBpE,EAAEkB,cAC3B+E,EAAMf,KAAK,IAAIM,EAAKxF,EAAG4I,EAAMC,EAAM5G,KAiCpCoG,EAAgBrI,EAAE8I,aAAa,EAAG,IAAK5C,IACzByC,OAAO,WAErBL,EAAkBtI,EAAE8I,aAAa,EAAG,IAAK3C,IACzBwC,OAAO,aAEvBJ,EAAgBvI,EAAE8I,aAAa,EAAG,IAAK1C,IACzBuC,OAAO,WAErBH,EAAsBxI,EAAE8I,aAAa,EAAG,IAAKjD,IACzB8C,OAAO,oBAC3BH,EAAoBrH,MAAM,UAAW,iBAErCsH,EAAwBzI,EAAE+I,eAAe,QAAQ,IAC3BJ,OAAO,oBAC7BF,EAAsBtH,MAAM,UAAW,iBA1CxCnB,EAAEoB,KAAO,WACRpB,EAAEqB,WAAW,IAEb6E,EAAUmC,EAAcW,QACxB7C,EAAYmC,EAAgBU,QAC5B5C,EAAUmC,EAAcS,QACxBnD,EAAgB2C,EAAoBQ,QAEpC/C,EAAMsB,SAAQ,SAACd,GACdA,EAAKwC,OACJhD,EACAC,EACAC,EACAC,EACAP,EACA7F,EAAEiB,YACe,GAAjBjB,EAAEkB,cAEHuF,EAAKyC,KAAKrD,EAAe4C,EAAsBU,eAIjDnJ,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAa5C,EAAEiB,YAA8B,GAAjBjB,EAAEkB,gBAjDjC,EAAK2B,MAAQC,IAAMC,YAFD,E,gEA2ElBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OACC,yBAAKC,IAAKH,KAAKH,OACd,yBAAK4C,GAAG,WACR,yBAAKA,GAAG,YACP,yBAAKA,GAAG,SAAS2D,UAAU,UAC1B,0CAED,yBAAK3D,GAAG,WAAW2D,UAAU,UAC5B,yCAED,yBAAK3D,GAAG,SAAS2D,UAAU,UAC1B,wCAED,yBAAK3D,GAAG,mBAAmB2D,UAAU,UACpC,mD,GA9F2BtG,IAAMM,YCLlBiG,E,WACpB,WAAYrJ,EAAGsC,EAAGC,EAAG+G,EAAGlJ,EAAOmJ,GAAW,oBACzCvG,KAAKhD,EAAIA,EACTgD,KAAKV,EAAIA,EACTU,KAAKT,EAAIA,EACTS,KAAKsG,EAAIA,EACTtG,KAAK5C,MAAQA,EACb4C,KAAKuG,SAAWA,EAChBvG,KAAK1C,OAAU0C,KAAKhD,EAAEa,GAAK,EAC3BmC,KAAKwG,a,mDAILxG,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAEyJ,aAAa,GACpBzG,KAAKhD,EAAE6B,OAAO,KACdmB,KAAKhD,EAAE8B,SACPkB,KAAKhD,EAAE4D,QAAQZ,KAAKV,EAAGU,KAAKT,EAAGS,KAAKsG,EAAGtG,KAAKsG,GAC5CtG,KAAKhD,EAAEyJ,aAAa,GACpBzG,KAAKhD,EAAE2D,MAAMX,KAAK0G,WAAY1G,KAAK2G,YACnC3G,KAAKhD,EAAEyJ,aAAa,GACpBzG,KAAKhD,EAAE6B,OAAO,IAAK,IACnBmB,KAAKhD,EAAEwC,KACNQ,KAAK0G,WACL1G,KAAK2G,WACL3G,KAAK4G,SACL5G,KAAK6G,UAEN7G,KAAKhD,EAAEuF,Q,mCAIP,IAAIK,EAAI5C,KAAKsG,EAAI,EACbQ,EAAQlE,EAAI5C,KAAKhD,EAAE+J,IAAI/G,KAAK1C,OAC5B0J,EAAQpE,EAAI5C,KAAKhD,EAAEiK,IAAIjH,KAAK1C,OAChC0C,KAAK0G,WAAa1G,KAAKV,EAAIwH,EAC3B9G,KAAK2G,WAAa3G,KAAKT,EAAIyH,EACvBhH,KAAKuG,UACRvG,KAAK4G,SAAW5G,KAAK0G,WACrB1G,KAAK6G,SAAW7G,KAAKhD,EAAEkK,SAEvBlH,KAAK4G,SAAW5G,KAAKhD,EAAEmK,MACvBnH,KAAK6G,SAAW7G,KAAK2G,c,oCAKtB3G,KAAK1C,OAAS,IAAO0C,KAAK5C,MAC1B4C,KAAKwG,iB,aCyEQY,G,wDAlHd,WAAYtK,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IAAaqK,EACTC,EACAC,EAASC,EACTC,EAEJzK,EAAEe,MAAQ,WACT,IAAM2J,EAAS3F,KAAKvD,IAAIxB,EAAEiB,YAAajB,EAAEkB,cACnCwH,EAAM1I,EAAEgB,aAAa0J,EAAQA,GACnChC,EAAIvH,MAAM,UAAW,SACrBuH,EAAIvH,MAAM,SAAU,QAEpBnB,EAAE2E,UAAU,IAEF,EAEV2F,EAAWI,GADXL,EAAWM,GAEXJ,EAAU,GACVC,EAAW,GACXC,EAAW,CAAC,IAEZ,IAAK,IAAIxI,EAAI,EAAGA,EAAIoI,EAAUpI,IAAK,CAClC,IACI2I,EAAI,IAAIvB,EACXrJ,EAFUsK,GAAYrI,EAAI,IAIf,GAAXqI,EACW,IAAXA,EACArI,GACA,GAEDsI,EAAQrF,KAAK0F,GAGd,IAAK,IAAI3I,EAAI,EAAGA,EAAIoI,EAAUpI,IAAK,CAClC,IACI2I,EAAI,IAAIvB,EACXrJ,EACW,GAAXsK,EAHUA,GAAYrI,EAAI,IAKf,IAAXqI,EACArI,GACA,GAEDuI,EAAStF,KAAK0F,GAGf,IAAK,IAAI3I,EAAI,EAAGA,EAAIoI,EAAUpI,IAAK,CAClCwI,EAASxI,GAAK,GACd,IAAK,IAAI4I,EAAI,EAAGA,EAAIR,EAAUQ,IAC7BJ,EAASxI,GAAG4I,GAAK,IAAIC,MAKxB9K,EAAEoB,KAAO,WACRpB,EAAE+K,QACF/K,EAAEqB,WAAW,IAEbkJ,EAAQhD,SAAQ,SAACyD,GAChBR,EAASjD,SAAQ,SAAC0D,GACjB,IAAIC,EAAM,CAACF,EAAOtB,WAAYsB,EAAOrB,YACjCwB,EAAM,CAACH,EAAOpB,SAAUoB,EAAOnB,UAC/BuB,EAAM,CAACH,EAAQvB,WAAYuB,EAAQtB,YACnC0B,EAAM,CAACJ,EAAQrB,SAAUqB,EAAQpB,UACjCvH,EAAIgJ,YAAUJ,EAAKC,EAAKC,EAAKC,GACjCZ,EAASO,EAAO5K,OAAO6K,EAAQ7K,OAAO8G,IAAI5E,SAI5CiI,EAAQhD,SAAQ,SAACqD,GAChBA,EAAE1B,OACF0B,EAAEW,iBAGHf,EAASjD,SAAQ,SAACqD,GACjBA,EAAE1B,OACF0B,EAAEW,iBAGH,IAAK,IAAItJ,EAAI,EAAGA,EAAIoI,EAAUpI,IAC7B,IAAK,IAAI4I,EAAI,EAAGA,EAAIR,EAAUQ,IAC7B7K,EAAEkF,OACFlF,EAAE6B,OAAO,KACT7B,EAAEyJ,aAAa,GACfzJ,EAAE8B,SACF9B,EAAEwL,aACFf,EAASxI,GAAG4I,GAAGtD,SAAQ,SAACjF,GACvBtC,EAAEyL,OAAOnJ,EAAE,GAAIA,EAAE,OAElBtC,EAAE0L,WACF1L,EAAEuF,OAKLvF,EAAE2C,cAAgB,WACjB3C,EAAEe,UApGH,EAAK8B,MAAQC,IAAMC,YAFD,E,gEA2GlBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OAAO,yBAAKkG,UAAU,wBAAwBjG,IAAKH,KAAKH,Y,GAhHxBC,IAAMM,YCNnBuI,EACpB,WAAY3L,EAAGsC,EAAGC,EAAGqJ,EAAUC,GAAU,IAAD,gCAUxCC,gBAAkB,WACjB,IAAIC,EAAU,EAAK/L,EAAEoE,OAAO,MAAO,OACnC,EAAK4E,MAAQgD,OAAOC,aAAaF,IAZM,KAexCG,OAAS,WACJ,EAAKL,QACR,EAAK7L,EAAEgC,KAAK,IAAK,IAAK,KAEtB,EAAKhC,EAAEgC,KAAK,EAAG,IAAK,IAErB,EAAKhC,EAAEyC,KAAK,EAAKuG,MAAO,EAAK1G,EAAG,EAAKC,IArBE,KAwBxC0G,OAAS,WACJ,EAAKjJ,EAAEoE,SAAW,EAAK+H,YAC1B,EAAKL,kBAEF,EAAKvJ,EAAI,EAAKvC,EAAEkK,OACnB,EAAK3H,EAAI,EAET,EAAKA,GAAK,EAAKqJ,UA9BhB5I,KAAKhD,EAAIA,EACTgD,KAAKV,EAAIA,EACTU,KAAKT,EAAIA,EACTS,KAAKmJ,WAAanJ,KAAKhD,EAAEoE,OAAO,GAAK,GACrCpB,KAAK4I,SAAWA,EAChB5I,KAAK6I,QAAUA,EACf7I,KAAK8I,mBCNcM,EACpB,WAAYpM,EAAGsC,EAAG+J,GAAa,IAAD,gCAQ9BtL,MAAQ,WAKP,IAJA,IAAIwB,EAAI,EAAK+J,WAAW,KAAM,KAC1BV,EAAW,EAAKU,UAAU,EAAG,IAC7BT,EAAU,EAAK7L,EAAEoE,OAAO,EAAC,GAAM,IAE1BnC,EAAI,EAAGA,EAAI,EAAKsK,gBAAiBtK,IAAK,CAC9C,IAAIuK,EAAM,IAAIb,EAAO,EAAK3L,EAAG,EAAKsC,EAAGC,EAAGqJ,EAAUC,GAClD,EAAKY,QAAQvH,KAAKsH,GAClBjK,GAAK,EAAK8J,WACVR,GAAU,IAjBkB,KAqB9BS,UAAY,SAAC9K,EAAKkL,GACjB,OAAO,EAAK1M,EAAE2M,IAAI,EAAK3M,EAAEoE,OAAO5C,EAAKkL,KAtBR,KAyB9BH,cAAgB,WACf,IAAIK,EAAS,EAAK5M,EAAE2M,IAAI,EAAK3M,EAAEkB,aAAe,EAAKmL,YAC/CQ,EAASD,EAAS,EAAI,EAAI,EAC9B,OAAO,EAAKN,UAAUO,EAAQD,IA5BD,KA+B9B3D,OAAS,WACR,IAAK,IAAIhH,EAAI,EAAGA,EAAI,EAAKwK,QAAQ1I,OAAQ9B,IACxC,EAAKwK,QAAQxK,GAAGgH,UAjCY,KAqC9BiD,OAAS,WACR,IAAK,IAAIjK,EAAI,EAAGA,EAAI,EAAKwK,QAAQ1I,OAAQ9B,IACxC,EAAKwK,QAAQxK,GAAGiK,UAtCjBlJ,KAAKhD,EAAIA,EACTgD,KAAKV,EAAIA,EACTU,KAAKqJ,WAAaA,EAClBrJ,KAAKyJ,QAAU,GACfzJ,KAAKjC,SCmDQ+L,E,kDAtDd,WAAYhN,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IACIqM,EACAU,EAAU,GAEd/M,EAAEe,MAAQ,WACCf,EAAEgB,aAAahB,EAAEiB,YAAajB,EAAEkB,cACtCC,MAAM,UAAW,SACrBnB,EAAEqB,WAAW,GAEb,EAAK2L,oBAGN,EAAKA,iBAAmB,WACvBD,EAAU,GAEVV,EAAarM,EAAEmK,MAfC,GAgBhBnK,EAAE4B,SAASyK,GAGX,IADA,IAAI/J,EAAI,EACCL,EAAI,EAAGA,GAnBA,GAmBiBA,IAAK,CACrC,IAAIgL,EAAS,IAAIb,EAAOpM,EAAGsC,EAAG+J,GAC9BU,EAAQ7H,KAAK+H,GACb3K,GAAK+J,IAIPrM,EAAEoB,KAAO,WACRpB,EAAEqB,WAAW,EAAG,KAChB0L,EAAQxF,SAAQ,SAAU2F,GACzBA,EAAEhB,SACFgB,EAAEjE,aAIJjJ,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAa5C,EAAEiB,YAAajB,EAAEkB,cAChC,EAAK8L,qBAxCN,EAAKnK,MAAQC,IAAMC,YAFD,E,gEA+ClBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OAAO,yBAAKC,IAAKH,KAAKH,Y,GApDCC,IAAMM,WCmJhB+J,E,kDAnJd,WAAYrN,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,OAAS,SAACC,GACT,IAAIoN,EAAUC,EAMVC,EACAC,EAASC,EANTC,EAAI,EACJnE,EAAI,EAGJoE,GAAO,EAIX1N,EAAEe,MAAQ,WACTqM,EAAWpN,EAAEiB,YACboM,EAA6B,GAAjBrN,EAAEkB,aACJlB,EAAEgB,aAAaoM,EAAUC,GAC/BlM,MAAM,UAAW,SACrBmM,EAAOtN,EAAEwB,IAAI4L,EAAW,EAAGC,EAAY,GAAK,EAE5C,EAAKM,kBAGN3N,EAAEoB,KAAO,WACRpB,EAAEqB,WAAW,IAEbrB,EAAEkF,OACFlF,EAAE2B,UAAUyL,EAAW,EAAGC,EAAY,GACtC,EAAKO,iBACL,EAAKC,WACL7N,EAAEuF,MAEEmI,GACCD,EA1BK,IA2BRA,EAAI,EACJnE,EAAI,GACMA,EA5BF,IA6BRA,GAAK,IAELA,EAAI,EACJmE,KAEDF,EAAQvE,MAAMyE,GACdD,EAAQxE,MAAMM,KAEdmE,EAAIF,EAAQvE,QACZM,EAAIkE,EAAQxE,UAId,EAAK6E,SAAW,WACf7N,EAAEkF,OACFlF,EAAE8N,UAAU9N,EAAE+N,SACd/N,EAAE8B,SACF9B,EAAEyJ,aAAa,GACfzJ,EAAE6B,OAAO,IAAK,EAAG,GACjB7B,EAAEwL,aACF,IAAK,IAAIvJ,EAAI,EAAGA,EAAIjC,EAAEQ,OAAQyB,GAAKjC,EAAEQ,OAAS,IAAK,CAClD,IAAIoF,EAAI0H,EAAOtN,EAAEiK,IAAIwD,EAAIxL,GACzB,EAAK+L,gBAAgBpI,EAAG3D,GAEzBjC,EAAE0L,WACF1L,EAAEuF,OAGH,EAAKqI,eAAiB,WACrB5N,EAAEkF,OACFlF,EAAE8N,UAAU9N,EAAEiO,SACdjO,EAAE8B,SACF9B,EAAEyJ,aAAa,GACfzJ,EAAE6B,OAAO,EAAG,EAAG,KACf7B,EAAEwL,aACF,IAAK,IAAIvJ,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC7B,IAAIiM,EAAIjM,EAAIqH,EACR1D,EAAI0H,EAAOtN,EAAEiK,IAAIwD,EAAIS,GACzB,EAAKF,gBAAgBpI,EAAGsI,GAEzBlO,EAAE0L,WACF1L,EAAEuF,OAGH,EAAKyI,gBAAkB,SAACpI,EAAGuI,GAC1B,IAAI7L,EAAIsD,EAAI5F,EAAE+J,IAAIoE,GACd5L,EAAIqD,EAAI5F,EAAEiK,IAAIkE,GAClB,OAAOnO,EAAEyL,OAAOnJ,EAAGC,IAGpB,EAAKoL,eAAiB,WACrB,IAAIS,EAAWpO,EAAEqO,YAEbC,EAAYtO,EAAEqO,YAClBC,EAAUnN,MAAM,QAAS,OACzBmN,EAAUnN,MAAM,UAAW,gBAC3BmN,EAAUnN,MAAM,aAAc,UAC9BmN,EAAU3F,OAAOyF,GAEjB,IAAIG,EAAOvO,EAAEqO,UAAU,WACvBE,EAAK5F,OAAO2F,IAEZf,EAAUvN,EAAE8I,aAAa,EA5Ff,GA4FwB2E,EAAG,IAC7B9E,OAAO4F,GAEf,IAAIC,EAAOxO,EAAEqO,UAAU,WACvBG,EAAK7F,OAAO2F,IAEZd,EAAUxN,EAAE8I,aAAa,EAjGf,IAiGwBQ,EAAG,IAC7BX,OAAO6F,GAEf,IAAIC,EAAYzO,EAAEqO,YAClBI,EAAUtN,MAAM,QAAS,OACzBsN,EAAUtN,MAAM,UAAW,gBAC3BsN,EAAUtN,MAAM,aAAc,UAC9BsN,EAAU9F,OAAOyF,GAEjB,IAAIM,EAAc1O,EAAE2O,aAAa,SACjCD,EAAY/F,OAAO8F,GACnBC,EAAYE,cAAa,WAExB,IAAInM,GADJiL,GAAQA,GACU,QAAU,OAC5BgB,EAAYG,KAAKpM,MAGlB,IAAIqM,EAAc9O,EAAE2O,aAAa,SACjCG,EAAYnG,OAAO8F,GACnBK,EAAYF,cAAa,WACxBnB,EAAI,EACJnE,EAAI,MAINtJ,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAa5C,EAAEiB,YAAajB,EAAEkB,gBAnIjC,EAAK2B,MAAQC,IAAMC,YAFD,E,gEA0IlBC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAM3C,OAFA6L,QAAQC,IAAI,UAEL,yBAAK7L,IAAKH,KAAKH,Y,GAjJCC,IAAMM,WCHzB6L,EACF,WAAYC,EAAOC,GAAQ,oBACvBnM,KAAKkM,MAAQA,EACblM,KAAKmM,MAAQA,EACbnM,KAAKoM,QAAS,GAIhBC,E,WACF,WAAY/M,EAAGC,GAAI,oBACfS,KAAKV,EAAIA,EACTU,KAAKT,EAAIA,EACTS,KAAKsM,gBAAkB,KACvBtM,KAAKuM,gBAAkB,KACvBvM,KAAKwM,eAAiB,KACtBxM,KAAKyM,gBAAkB,K,+DAGRC,GACf1M,KAAKsM,gBAAkB,IAAIL,EAAWjM,KAAM0M,K,yCAG7BA,GACf1M,KAAKuM,gBAAkB,IAAIN,EAAWjM,KAAM0M,K,yCAG7BA,GACf1M,KAAKyM,gBAAkB,IAAIR,EAAWjM,KAAM0M,K,wCAG9BA,GACd1M,KAAKwM,eAAiB,IAAIP,EAAWjM,KAAM0M,K,2CAW3C,MAPuB,CACnB1M,KAAKsM,gBACLtM,KAAKyM,gBACLzM,KAAKwM,eACLxM,KAAKuM,iBAGa/I,QAAO,SAACmJ,GAC1B,OAAsB,OAAfA,O,2CAKX,OAAO3M,KAAK4M,qBAAqBpJ,QAAO,SAACmJ,GACrC,OAAOA,EAAWP,Y,wCAIRS,GACmB7M,KAAK4M,qBAAqBE,MACvD,SAACH,GACG,OACIA,EAAWT,QAAUW,GACrBF,EAAWR,QAAUU,KAKRT,QAAS,I,+BAG7BpP,EAAG+P,EAAaC,EAAaC,GAClCjQ,EAAEkF,OAEFlF,EAAEgC,KAAK,KACPhC,EAAEyJ,aAAa,GACfzJ,EAAE6B,OAAO,KACT7B,EAAEkQ,KAAKH,EAAaC,EAAaC,EAAYA,GAE7CjQ,EAAEuF,Q,gCAGIvF,EAAG+P,EAAaC,EAAaC,GACnC,IAAME,EAAgBF,EAAa,EAC7BG,EAAeL,EAAcE,EAC7BI,EAAeL,EACfM,EAAiBP,EACjBQ,EAAiBP,EAAcC,EAC/BO,EAAkBT,EAAcE,EAChCQ,EAAkBT,EAAcC,EAEtCjQ,EAAEkF,OAEFlF,EAAEyJ,aAAa0G,GACfnQ,EAAE6B,OAAO,GACT7B,EAAEgC,KAAK,GAEFgB,KAAKsM,kBAAmBtM,KAAKsM,gBAAgBF,QAC9CpP,EAAEwC,KAAKuN,EAAaC,EAAaI,EAAcC,GAG9CrN,KAAKyM,kBAAmBzM,KAAKyM,gBAAgBL,QAC9CpP,EAAEwC,KACE8N,EACAC,EACAC,EACAC,GAIHzN,KAAKwM,iBAAkBxM,KAAKwM,eAAeJ,QAC5CpP,EAAEwC,KAAKuN,EAAaC,EAAaM,EAAgBC,GAGhDvN,KAAKuM,kBAAmBvM,KAAKuM,gBAAgBH,QAC9CpP,EAAEwC,KACE4N,EACAC,EACAG,EACAC,GAIRzQ,EAAEuF,U,KCpHWmL,E,WACjB,WAAYvG,EAAOD,GAAS,oBACxBlH,KAAKmH,MAAQA,EACbnH,KAAKkH,OAASA,EACdlH,KAAK2N,MAAQ,CAAC,IACd3N,KAAK4N,cAAgB,IAAI9F,IACzB9H,KAAK6N,MAAQ,GAEb,IAAK,IAAItO,EAAI,EAAGA,EAAI2H,EAAQ3H,IAAK,CAC7BS,KAAK2N,MAAMpO,GAAK,GAChB,IAAK,IAAID,EAAI,EAAGA,EAAI6H,EAAO7H,IACvBU,KAAK2N,MAAMpO,GAAGD,GAAK,IAAI+M,EAAK/M,EAAGC,GAIvC,IAAK,IAAIA,EAAI,EAAGA,EAAI2H,EAAQ3H,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAI6H,EAAO7H,IACvBU,KAAK8N,mBAAmB9N,KAAK2N,MAAMpO,GAAGD,IAK9C,IAAMyO,EAAUhM,KAAKiM,MAAMjM,KAAKX,SAAW+F,GACrC8G,EAAUlM,KAAKiM,MAAMjM,KAAKX,SAAW8F,GACrCgH,EAAQlO,KAAK2N,MAAMM,GAASF,GAClC/N,KAAK4N,cAAc1J,IAAIgK,GACvBlO,KAAK6N,MAAQ7N,KAAK6N,MAAMM,OAAOD,EAAME,sB,+DAGtB1B,GACf,IAAMpN,EAAIoN,EAAKpN,EACTC,EAAImN,EAAKnN,EAEXS,KAAKqO,eAAe/O,EAAI,EAAGC,IAC3BmN,EAAK4B,kBAAkBtO,KAAK2N,MAAMpO,GAAGD,EAAI,IAGzCU,KAAKqO,eAAe/O,EAAGC,EAAI,IAC3BmN,EAAK6B,mBAAmBvO,KAAK2N,MAAMpO,EAAI,GAAGD,IAG1CU,KAAKqO,eAAe/O,EAAI,EAAGC,IAC3BmN,EAAK8B,mBAAmBxO,KAAK2N,MAAMpO,GAAGD,EAAI,IAG1CU,KAAKqO,eAAe/O,EAAGC,EAAI,IAC3BmN,EAAK+B,mBAAmBzO,KAAK2N,MAAMpO,EAAI,GAAGD,M,qCAInCA,EAAGC,GACd,QAAID,EAAI,OAEGC,EAAI,OAEJD,GAAKU,KAAKmH,UAEV5H,GAAKS,KAAKkH,Y,4CAOHwH,EAAOhC,GACzB,OAAOgC,EAAMlL,QAAO,SAACmL,GACjB,IAAMC,EAASD,EAAKrP,IAAMoN,EAAKpN,EACzBuP,EAASF,EAAKpP,IAAMmN,EAAKnN,EAC/B,QAASqP,GAAUC,Q,6CAKvB,IAAIjB,EAAgB,IAAI9F,IACpB+F,EAAQ,GAGNK,EAAQlO,KAAK2N,MAAM,GAAG,GAI5B,IAHAC,EAAc1J,IAAIgK,GAClBL,EAAQA,EAAMM,OAAOD,EAAME,sBAEpBP,EAAM9M,OAAS,GAAG,CACrB,IAAM3D,EAAQ2E,KAAKiM,MAAMjM,KAAKX,SAAWyM,EAAM9M,QACzC+N,EAAajB,EAAMzQ,GAEnB8O,EAAQ4C,EAAW5C,MACnBC,EAAQ2C,EAAW3C,MACnB4C,EAAenB,EAAcoB,IAAI9C,GACjC+C,EAAerB,EAAcoB,IAAI7C,GAEnC4C,IAAiBE,GACjBpB,EAAQA,EAAMM,OAAOhC,EAAMiC,sBAC3BlC,EAAMgD,kBAAkB/C,GACxBA,EAAM+C,kBAAkBhD,GACxB0B,EAAc1J,IAAIiI,KACV4C,GAAgBE,IACxBpB,EAAQA,EAAMM,OAAOjC,EAAMkC,sBAC3BlC,EAAMgD,kBAAkB/C,GACxBA,EAAM+C,kBAAkBhD,GACxB0B,EAAc1J,IAAIgI,IAGtB2B,EAAMsB,OAAO/R,EAAO,M,qDAKxB,GAAI4C,KAAK6N,MAAM9M,OAAS,EAAG,CACvB,IAAIqO,GAAc,EAEZhS,EAAQ2E,KAAKiM,MAAMjM,KAAKX,SAAWpB,KAAK6N,MAAM9M,QAC9C+N,EAAa9O,KAAK6N,MAAMzQ,GAExB8O,EAAQ4C,EAAW5C,MACnBC,EAAQ2C,EAAW3C,MACnB4C,EAAe/O,KAAK4N,cAAcoB,IAAI9C,GACtC+C,EAAejP,KAAK4N,cAAcoB,IAAI7C,GAExC4C,IAAiBE,GACjBjP,KAAK6N,MAAQ7N,KAAK6N,MAAMM,OAAOhC,EAAMiC,sBACrClC,EAAMgD,kBAAkB/C,GACxBA,EAAM+C,kBAAkBhD,GACxBlM,KAAK4N,cAAc1J,IAAIiI,GACvBiD,GAAc,IACNL,GAAgBE,IACxBjP,KAAK6N,MAAQ7N,KAAK6N,MAAMM,OAAOjC,EAAMkC,sBACrClC,EAAMgD,kBAAkB/C,GACxBA,EAAM+C,kBAAkBhD,GACxBlM,KAAK4N,cAAc1J,IAAIgI,GACvBkD,GAAc,GAGlBpP,KAAK6N,MAAMsB,OAAO/R,EAAO,GAEpBgS,GACDpP,KAAKqP,kC,kCAMb,OAA6B,IAAtBrP,KAAK6N,MAAM9M,S,+BAIlBf,KAAKqP,iC,2BAGJrS,EAAGsS,EAAaC,GACjB,IAAMC,EAAeF,EAActP,KAAKmH,MAClCsI,EAAgBF,EAAevP,KAAKkH,OACpC+F,EAAalL,KAAKvD,IAAIgR,EAAcC,GAEpCC,GAAWJ,EAAcrC,EAAajN,KAAKmH,OAAS,EACpDwI,GAAWJ,EAAetC,EAAajN,KAAKkH,QAAU,EAE5DlK,EAAEkF,OAEFlC,KAAK4P,YAAY5S,EAAG0S,EAASC,EAAS1C,GACtCjN,KAAK6P,YAAY7S,EAAG0S,EAASC,EAAS1C,GAEtCjQ,EAAEuF,Q,kCAGMvF,EAAG0S,EAASC,EAAS1C,GAC7B,IAAK,IAAI1N,EAAI,EAAGA,EAAIS,KAAKkH,OAAQ3H,IAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIU,KAAKmH,MAAO7H,IAAK,CACjC,IAAMyN,EAAc2C,EAAUpQ,EAAI2N,EAC5BD,EAAc2C,EAAUpQ,EAAI0N,EAClCjN,KAAK2N,MAAMpO,GAAGD,GAAGwQ,SACb9S,EACA+P,EACAC,EACAC,M,kCAMJjQ,EAAG0S,EAASC,EAAS1C,GAC7B,IAAK,IAAI1N,EAAI,EAAGA,EAAIS,KAAKkH,OAAQ3H,IAC7B,IAAK,IAAID,EAAI,EAAGA,EAAIU,KAAKmH,MAAO7H,IAAK,CACjC,IAAMyN,EAAc2C,EAAUpQ,EAAI2N,EAC5BD,EAAc2C,EAAUpQ,EAAI0N,EAClCjN,KAAK2N,MAAMpO,GAAGD,GAAGyQ,UACb/S,EACA+P,EACAC,EACAC,Q,KChJL+C,E,4MAxCXC,sBAAwB,WACpB,IAAMC,EAAaC,SAASC,eAAe,UAEvCF,IAD0BC,SAASE,kBAEnC,EAAKC,eAAeJ,GAEpB,EAAKK,eAAeL,I,EAI5BK,eAAiB,SAAC5B,GACVA,EAAK6B,mBACLzE,QAAQC,IAAI2C,GACZA,EAAK6B,qBACE7B,EAAK8B,wBAEZ9B,EAAK8B,0BACE9B,EAAK+B,qBAEZ/B,EAAK+B,uB,EAIbJ,eAAiB,SAAC3B,GACVwB,SAASQ,eACTR,SAASQ,iBACFR,SAASS,qBAEhBT,SAASS,uBACFT,SAASU,kBAEhBV,SAASU,oB,uDAKb,OAAO,yCAAS7Q,KAAKlD,MAAd,CAAqBgU,QAAS9Q,KAAKiQ,6B,GArCrBnQ,IAAMM,WC6DpB2Q,E,kDA5DX,WAAYjU,GAAQ,IAAD,8BACf,cAAMA,IAIVC,OAAS,SAACC,GACN,IACIgU,EACAC,EAA2B,EAU/BjU,EAAEe,MAAQ,WACN,IAAM2H,EAAM1I,EAAEgB,aAAakT,OAAOC,WAAYD,OAAOE,aACrD1L,EAAIC,OAAO,UACXD,EAAIvH,MAAM,UAAW,SAErBnB,EAAE2E,UAjBa,IAmBfsP,EAA2B,EAC3BD,EAAO,IAAItD,EAAK,GAAI,KAGxB1Q,EAAEoB,KAAO,WACLpB,EAAEqB,WAAW,IAxBE,KA0BX4S,GACAA,EAA2B,EAC3BD,EAAO,IAAItD,EAAK,GAAI,KACbsD,EAAKK,aACZJ,IAGJD,EAAK9K,KAAKlJ,EAxBHkU,OAAOC,WAJPD,OAAOE,aA6BdJ,EAAK/K,UAGTjJ,EAAE2C,cAAgB,WACd3C,EAAE4C,aAAasR,OAAOC,WAAYD,OAAOE,eA1C7C,EAAKvR,MAAQC,IAAMC,YAFJ,E,gEAiDfC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OACI,yBAAKC,IAAKH,KAAKH,OACX,kBAAC,EAAD,CAAgB4C,GAAG,gB,GAxDP3C,IAAMM,WC8EnBkR,E,kDA/Ed,WAAYxU,GAAQ,IAAD,8BAClB,cAAMA,IAOPC,OAAS,SAACC,GACTA,EAAEe,MAAQ,WACGf,EAAEgB,aAAakT,OAAOC,WAAYD,OAAOE,aACjDjT,MAAM,UAAW,SACrB,EAAKoT,iBAGN,EAAKA,cAAgB,WACpB,EAAKC,OAAS,GACd,EAAKC,UAAY,EACjB,IACMpU,EAAwB,GADVL,EAAEwB,IAAI0S,OAAOC,WAAYD,OAAOE,aACf,EAErCpU,EAAE8N,UAAU9N,EAAE+N,SAEd,IADA,IAAM2G,EAAY1U,EAAEQ,OAAS,EAAKiU,UACzBxS,EAAI,EAAGA,EAAI,EAAKwS,UAAWxS,IAAK,CACxC,IAAI3B,EAAQ2B,EAAIyS,EAEhBpU,GAASN,EAAEa,GAAK,EAChB,IAAM8C,EAAQjD,IAAGC,OAAOC,UAAUN,GAClCqD,EAAM7C,KAAKT,GACXsD,EAAMuD,IAAIgN,OAAOC,WAAa,EAAGD,OAAOE,YAAc,GACtD,EAAKI,OAAOtP,KAAKvB,GAGlB,EAAKgR,WAAa3U,EAAEgF,aACnBhF,EAAEoE,OAAO8P,OAAOC,YAChBnU,EAAEoE,OAAO8P,OAAOE,cAGjB,EAAKQ,eAGN,EAAKA,YAAc,WAClB5U,EAAEqB,WAAW,IAEb,EAAKmT,OAAOjN,SAAQ,SAAC5D,GACpB3D,EAAE6B,OAAO,KACT7B,EAAEgC,KAAK,KACPhC,EAAE+B,OAAO4B,EAAMrB,EAAGqB,EAAMpB,EAAG,OAG5BvC,EAAE+F,WACF/F,EAAEgC,KAAK,IAAK,EAAG,IAAK,KACpBhC,EAAE+B,OAAO,EAAK4S,WAAWrS,EAAG,EAAKqS,WAAWpS,EAAG,IAGhDvC,EAAEoB,KAAO,WACR,IAAMyT,EAAc7U,EAAEoE,OAAO,EAAKoQ,QAC5BM,EAAYpU,IAAGC,OAAOoU,KAAK,EAAKJ,WAAYE,EAAa,IAC/D7U,EAAE+F,WACF/F,EAAEgC,KAAK,IAAK,EAAG,IAAK,KACpBhC,EAAE+B,OAAO+S,EAAUxS,EAAGwS,EAAUvS,EAAG,GAEnC,EAAKoS,WAAaG,GAGnB9U,EAAE2C,cAAgB,WACjB3C,EAAE4C,aAAasR,OAAOC,WAAYD,OAAOE,aACzC,EAAKG,kBAjEN,EAAK1R,MAAQC,IAAMC,YACnB,EAAKyR,OAAS,GACd,EAAKC,UAAY,EACjB,EAAKE,WAAa,IAAIjU,IAAGC,OAAO,EAAG,GALjB,E,gEAwElBqC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OAAO,yBAAKC,IAAKH,KAAKH,Y,GA7EAC,IAAMM,WCDjB4R,EAAY,aACZC,EAAgB,yBAChBC,EAAqB,sBACrBC,EAAQ,SACRC,EAAsB,uBACtBC,EAAa,cACbC,EAAa,cACbC,EAAgB,iBAChBC,EAAmB,oBACnBC,EAAqB,sB,YCRlC,SAASC,EAAY5V,GACjB,OACI,yBACI6V,QAAS7V,EAAM6V,QACfC,IAAK9V,EAAM+V,MACXC,OAAQhW,EAAMiW,OACdC,MAAOlW,EAAMkW,MACbC,IAAI,SACJ7M,UAAU,UAYtBsM,EAAYQ,aAAe,CACvBP,QAAS,QAGED,QC3BA,MAA0B,yDCA1B,MAA0B,yDCA1B,MAA0B,wDCA1B,MAA0B,wDCQrCS,EACAC,EACA,WACAC,EACA,WACAC,EACA,UACAC,EACA,QAiBWC,MAff,SAA0B1W,GACtB,OACI,kBAAC,EAAD,CACI+V,MAAOO,EACPL,OAAQI,EACRH,MAAM,OACNL,QAAS7V,EAAM6V,W,yBClB3B,SAASc,EAAW3W,GAChB,IAAM4W,EAAUC,cAMhB,OACI,yBAAKvN,UAAU,cAAc0K,QALjC,WACI4C,EAAQxR,KAAKpF,EAAM8W,cAKf,yBAAKxN,UAAU,QACVtJ,EAAM+V,MACP,4BACK/V,EAAM+W,MADX,IACmB/W,EAAMgX,kBAAoB,kBAAC,IAAD,OAE7C,2BAAIhX,EAAMiX,QAc1BN,EAAWP,aAAe,CACtBY,kBAAkB,GAGPL,QCtCA,MAA0B,sDCA1B,OAA0B,sDCA1B,OAA0B,qDCQrCN,GACAa,EACA,WACAC,GACA,WACAC,GAJAF,ktWAwBWG,OAff,SAA+BrX,GAC3B,OACI,kBAAC,EAAD,CACI+V,MAAOmB,EACPjB,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,sDCA1B,OAA0B,sDCA1B,OAA0B,qDCA1B,OAA0B,qDCQrCQ,GACAiB,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAA+B1X,GAC3B,OACI,kBAAC,EAAD,CACI+V,MAAOuB,GACPrB,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,oDCA1B,OAA0B,oDCA1B,OAA0B,mDCA1B,OAA0B,mDCQrCQ,GACAsB,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAA6B/X,GACzB,OACI,kBAAC,EAAD,CACI+V,MAAO4B,GACP1B,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,8CCA1B,OAA0B,8CCA1B,OAA0B,6CCA1B,OAA0B,6CCQrCQ,GACA2B,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAAuBpY,GACnB,OACI,kBAAC,EAAD,CACI+V,MAAOiC,GACP/B,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,uDCA1B,OAA0B,uDCA1B,OAA0B,sDCA1B,OAA0B,sDCQrCQ,GACAgC,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAAgCzY,GAC5B,OACI,kBAAC,EAAD,CACI+V,MAAOsC,GACPpC,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,8CCA1B,OAA0B,8CCA1B,OAA0B,6CCQrCQ,GACAqC,GACA,WACAC,GACA,WACAC,GAJAF,sjVAwBWG,OAff,SAAuB7Y,GACnB,OACI,kBAAC,EAAD,CACI+V,MAAO2C,GACPzC,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,6CCA1B,OAA0B,6CCA1B,OAA0B,4CCQrCQ,GACAyC,GACA,WACAC,GACA,WACAC,GAJAF,0wOAwBWG,OAff,SAAsBjZ,GAClB,OACI,kBAAC,EAAD,CACI+V,MAAO+C,GACP7C,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,+CCA1B,OAA0B,+CCA1B,OAA0B,8CCA1B,OAA0B,8CCQrCQ,GACA6C,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAAkBtZ,GACd,OACI,kBAAC,EAAD,CACI+V,MAAOmD,GACPjD,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WCxBZ,OAA0B,iDCA1B,OAA0B,iDCA1B,OAA0B,gDCA1B,OAA0B,gDCQrCQ,GACAkD,GACA,WACAC,GACA,WACAC,GACA,UACAC,GACA,QAiBWC,OAff,SAA0B3Z,GACtB,OACI,kBAAC,EAAD,CACI+V,MAAOwD,GACPtD,OAAQI,GACRH,MAAM,OACNL,QAAS7V,EAAM6V,WC+DZ+D,OAxEf,SAAoB5Z,GAChB,OACI,yBAAKsJ,UAAU,eACX,kBAAC,EAAD,CACIyN,MAAM,iBACNE,KAAK,6BACLlB,MAAO,kBAAC,GAAD,CAAkBF,QAAQ,SACjCiB,WAAY+C,EACZ7C,kBAAgB,IAEpB,kBAAC,EAAD,CACID,MAAM,QACNE,KAAK,iIACLlB,MAAO,kBAAC,GAAD,CAAUF,QAAQ,SACzBiB,WAAY+C,EACZ7C,kBAAgB,IAEpB,kBAAC,EAAD,CACID,MAAM,yBACNE,KAAK,yMACLlB,MAAO,kBAAC,EAAD,CAAkBF,QAAQ,SACjCiB,WAAY+C,EACZ7C,kBAAgB,IAEpB,kBAAC,EAAD,CACID,MAAM,sBACNE,KAAK,kDACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,IAEhB,kBAAC,EAAD,CACI9C,MAAM,sBACNE,KAAK,sFACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,EACZ7C,kBAAgB,IAEpB,kBAAC,EAAD,CACID,MAAM,qBACNE,KAAK,8MACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,IAEhB,kBAAC,EAAD,CACI9C,MAAM,cACNE,KAAK,2DACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,IAEhB,kBAAC,EAAD,CACI9C,MAAM,wBACNE,KAAK,yPACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,IAEhB,kBAAC,EAAD,CACI9C,MAAM,cACNE,KAAK,kJACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,IAEhB,kBAAC,EAAD,CACI9C,MAAM,aACNE,KAAK,uPACLlB,MAAO,kBAAC,GAAD,MACPe,WAAY+C,EACZ7C,kBAAgB,MC9CjB8C,OAhCf,SAAqB9Z,GACjB,OACI,yBAAKsJ,UAAU,eACX,mEAC0C,IACtC,uBAAGyQ,KAAK,qBAAR,SAFJ,iDAG4B,IACxB,uBAAGA,KAAK,gCAAR,WAEJ,qHAE6B,kBAAC,IAAD,OAE7B,+GAE2B,IACvB,uBAAGA,KAAK,yCAAR,oBAHJ,IAMM,IACF,uBAAGA,KAAK,4CAAR,eAPJ,IAUM,IACF,uBAAGA,KAAK,qEAAR,kBCZDC,OAVf,SAAcha,GACb,OACC,yBAAKsJ,UAAU,QACd,6CACA,kBAAC,GAAD,MACA,kBAAC,GAAD,QCqNY2Q,I,wDA1NX,WAAYja,GAAQ,IAAD,8BACf,cAAMA,IAIVC,OAAS,SAACC,GACN,IAAIM,EAAQ,EACR0Z,EAAW,EACXC,GAAkB,EAGtBja,EAAEe,MAAQ,WACMf,EAAEgB,aAAakZ,IAAkBC,KACzChZ,MAAM,UAAW,SAErBwM,KAGJ,IAAMA,EAAiB,WACnB,IAAMyM,EAAiBpa,EAAE2O,aAAa,qBACtCyL,EAAezR,OAAO,YAEtByR,EAAexL,cAAa,YACxBqL,GAAmBA,IAEfG,EAAevL,KAAK,qBACpBmL,EAAW,IAEXI,EAAevL,KAAK,qBACpB7O,EAAEqa,cAKdra,EAAEoB,KAAO,WACLpB,EAAEqB,WAAW,KAEb,IAAM8I,EAAQ+P,IACRhQ,EAASiQ,IACTG,EAA2C,GAA1BvV,KAAKvD,IAAI2I,EAAOD,GACjCqQ,EAAeD,EAAiB,EAEtCta,EAAE2B,UAAUwI,EAAQ,EAAGD,EAAS,GAEhCsQ,EAAUD,GACVE,EAAoBH,GACpBI,EAAcH,GACdI,EAAWJ,GACXK,EAAqBL,GAErBM,KAGJ,IAAML,EAAY,SAACD,GAEf,IADA,IAAMO,EAAgB9a,EAAEa,GAAKmZ,EACpB/X,EAAI,EAAGA,EAAI+X,EAAU/X,IAC1BjC,EAAEkF,OAEFlF,EAAEoF,OAAOnD,EAAI6Y,GACb9a,EAAE6B,OAAO,GACT7B,EAAEyJ,aAAa,GACfzJ,EAAEwC,MAAM+X,EAAc,EAAGA,EAAc,GAEvCva,EAAEuF,OAIJkV,EAAsB,SAACH,GACzBta,EAAEkF,OAEFlF,EAAE6B,OAAO,GACT7B,EAAEyJ,aAAa,GACfzJ,EAAE8B,SACF9B,EAAE4D,QAAQ,EAAG,EAAG0W,EAAgBA,GAEhCta,EAAEuF,OAGAmV,EAAgB,SAACH,GACnB,GAAKN,EAAL,CAGAja,EAAEkF,OAEFlF,EAAE+a,UAAU/a,EAAEgb,IAAK,KACnB,IAAMC,EAAYjb,EAAEkb,MAAM,EAAG,IAAK,KAC5BC,EAAYnb,EAAEkb,MAAM,IAAK,IAAK,KAEpClb,EAAEkF,OAEFlF,EAAE8B,SACF9B,EAAEyJ,aAAa,GAEf,IAAM2R,EAAgC,GAAfb,EACvBva,EAAE6B,OAAOoZ,GACTjb,EAAEqb,IAAI,EAAG,EAAGD,EAAgBA,EAAgB9a,EAAO,GAEnD,IAAMgb,EAAgC,IAAff,EACvBva,EAAE6B,OAAOsZ,GACTnb,EAAEqb,IAAI,EAAG,EAAGC,EAAgBA,EAAgBhb,EAAO,EAAIN,EAAEub,SAEzDvb,EAAEuF,MAEFvF,EAAEkF,OAEF,IAAMsW,EAAexb,EAAE+J,IAAIzJ,GAASia,EAC9BkB,EAAezb,EAAEiK,IAAI3J,GAASia,EAE9BmB,EAAc1b,EAAE+J,IAAIzJ,GAASia,EAC7BoB,EAAe3b,EAAEiK,IAAI3J,GAASia,EAEpCva,EAAE6B,OAAO,GACT7B,EAAEyJ,aAAa,GACfzJ,EAAEwC,KAAKgZ,EAAcC,EAAcC,EAAa,GAChD1b,EAAEwC,KAAKgZ,EAAcC,EAAc,EAAGE,GACtC3b,EAAEwC,KAAKgZ,EAAcC,EAAc,EAAG,GAEtCzb,EAAEuF,MAgBFvF,EAAEuF,QAGAoV,EAAa,SAACJ,GAIhB,IAHA,IAAMO,EAAgB9a,EAAEa,GAAKmZ,EACvB4B,GAAe5b,EAAEa,GAAKmZ,EACtBtX,EAAY,IAAO6X,EAChBtY,EAAI,EAAGA,EAAI+X,EAAU/X,IAAK,CAC/BjC,EAAEkF,OACFlF,EAAEoF,OAAOnD,EAAI6Y,GAEb,IAAMe,EAAavb,EAAQ2B,EAAI2Z,EACzBF,EAAc1b,EAAE+J,IAAI8R,GAActB,EAExCva,EAAE+a,UAAU/a,EAAEgb,IAAK,KACnB,IAAMc,EAAO,IAAM9B,EAAY/X,EACzB8Z,EAAS/b,EAAEkb,MAAMY,EAAK,IAAK,KAEjC9b,EAAEgC,KAAK+Z,GACP/b,EAAE6B,OAAO,GACT7B,EAAEyJ,aAAa,GAEfzJ,EAAE4D,QAAQ8X,EAAa,EAAGhZ,EAAWA,GAErC1C,EAAEuF,QAIJqV,EAAuB,SAACL,GAC1B,IAAMyB,EAAOhc,EAAE+J,IAAIzJ,GAASia,EACtB0B,EAAOjc,EAAEiK,IAAI3J,GAASia,EACtB7X,EAAY,IAAO6X,EAEzBva,EAAEkF,OAEFlF,EAAE6B,OAAO,GACT7B,EAAEyJ,aAAa,GACfzJ,EAAE+a,UAAU/a,EAAEgb,IAAK,KACnB,IAAMe,EAAS/b,EAAEkb,MAAM,EAAG,EAAG,KAC7Blb,EAAEgC,KAAK+Z,GACP/b,EAAE4D,QAAQoY,EAAMC,EAAMvZ,EAAWA,GAEjC1C,EAAEuF,OAGAsV,EAAc,YAChBva,GA1KkB,MA2KLN,EAAEQ,SACXF,GAASN,EAAEQ,OACNyZ,IACDD,GAAY,GACG,KACXA,EAAW,KAM3Bha,EAAE2C,cAAgB,WACd3C,EAAE4C,aAAasX,IAAkBC,MAGrC,IAAMA,EAAkB,WACpB,MAA4B,IAArBjG,OAAOE,aAGZ8F,EAAiB,WACnB,OAAOhG,OAAOC,aAtMlB,EAAKtR,MAAQC,IAAMC,YAFJ,E,gEA6MfC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OACI,yBAAKkG,UAAU,yBACX,yBAAKjG,IAAKH,KAAKH,QACf,yBAAK4C,GAAG,kB,GArNI3C,IAAMM,Y,kBCFb8Y,G,WACjB,WAAYlc,EAAGsC,EAAGC,EAAG4Z,GAAgB,oBACjCnZ,KAAKhD,EAAIA,EACTgD,KAAKV,EAAIA,EACTU,KAAKT,EAAIA,EACTS,KAAKmZ,cAAgBA,EACrBnZ,KAAKoZ,WAAaD,EAClBnZ,KAAKqZ,SAAU,EACfrZ,KAAKsZ,WAAa,EAClBtZ,KAAKuZ,WAAavc,EAAEkb,MAAM,IAAK,IAAK,KACpClY,KAAKwZ,cAAgBxc,EAAEkb,MAAM,EAAG,EAAG,G,0DAGzBkB,GACVpZ,KAAKoZ,WAAaA,I,6BAIlBpZ,KAAKqZ,SAAU,I,+BAIfrZ,KAAKqZ,SAAU,I,gCAGTE,EAAYC,GAClBxZ,KAAKuZ,WAAaA,EAClBvZ,KAAKwZ,cAAgBA,I,+BAIrBxZ,KAAKsZ,WAAa,GACdtZ,KAAKoZ,YAAcpZ,KAAKmZ,gBACxBnZ,KAAKqZ,SAAU,GAGfrZ,KAAKoZ,YAAc,IACnBpZ,KAAKqZ,SAAU,GAGfrZ,KAAKqZ,SACLrZ,KAAKoZ,YAAcpZ,KAAKsZ,WACpBtZ,KAAKoZ,WAAapZ,KAAKmZ,gBACvBnZ,KAAKoZ,WAAapZ,KAAKmZ,iBAG3BnZ,KAAKoZ,YAAcpZ,KAAKsZ,WACpBtZ,KAAKoZ,WAAa,IAClBpZ,KAAKoZ,WAAa,M,6BAM1B,IAAIK,EAAS/b,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,SAAS,IAAK1Z,KAAKoZ,YAC3DK,EAAOvV,IAAIlE,KAAKV,EAAGU,KAAKT,GAExB,IAAIoa,EAASjc,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,SAAS,IAAK1Z,KAAKoZ,YAC3DO,EAAOzV,IAAIlE,KAAKV,EAAGU,KAAKT,GAExB,IAAIqa,EAASlc,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,QAAQ,IAAK1Z,KAAKoZ,YAC1DQ,EAAO1V,IAAIlE,KAAKV,EAAGU,KAAKT,GAExB,IAAIsa,EAASnc,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,QAAQ,IAAK1Z,KAAKoZ,YAC1DS,EAAO3V,IAAIlE,KAAKV,EAAGU,KAAKT,GAExB,IAAIua,EAASpc,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,QAAQ,KAAM1Z,KAAKoZ,YAC3DU,EAAO5V,IAAIlE,KAAKV,EAAGU,KAAKT,GAExB,IAAIwa,EAASrc,IAAGC,OAAOC,UAAUoC,KAAKhD,EAAE0c,QAAQ,KAAM1Z,KAAKoZ,YAC3DW,EAAO7V,IAAIlE,KAAKV,EAAGU,KAAKT,GAExBS,KAAKhD,EAAEkF,OAEPlC,KAAKhD,EAAEgC,KAAKgB,KAAKuZ,YACjBvZ,KAAKhD,EAAEyJ,aAAa,GACpBzG,KAAKhD,EAAE6B,OAAOmB,KAAKwZ,eAEnBxZ,KAAKhD,EAAEwL,aACPxI,KAAKhD,EAAEyL,OAAOgR,EAAOna,EAAGma,EAAOla,GAC/BS,KAAKhD,EAAEyL,OAAOkR,EAAOra,EAAGqa,EAAOpa,GAC/BS,KAAKhD,EAAEyL,OAAOmR,EAAOta,EAAGsa,EAAOra,GAC/BS,KAAKhD,EAAEyL,OAAOoR,EAAOva,EAAGua,EAAOta,GAC/BS,KAAKhD,EAAEyL,OAAOqR,EAAOxa,EAAGwa,EAAOva,GAC/BS,KAAKhD,EAAEyL,OAAOsR,EAAOza,EAAGya,EAAOxa,GAC/BS,KAAKhD,EAAE0L,SAAS1I,KAAKhD,EAAEgd,OAEvBha,KAAKhD,EAAEuF,U,KCpFM0X,G,WACjB,WAAYjd,EAAGsS,EAAaC,EAAc2K,GAAgB,oBACtDla,KAAKhD,EAAIA,EACTgD,KAAKsP,YAAcA,EACnBtP,KAAKuP,aAAeA,EACpBvP,KAAKka,cAAgBA,EAErB,IAAMC,EAAuBnd,EAAEiK,IAAI,IAAMiT,EAAgB,EACnDE,EAAqB,EAAIF,EAAgB,IAKzCG,EAHW/K,EAAc,EAGD6K,EAAuB,EAC/CG,EAHY/K,EAAe,EAGF6K,EAAqB,EAEpDpa,KAAKmS,MAAQnS,KAAKua,cACdJ,EACAC,EACAC,EACAC,G,0DAKJH,EACAC,EACAC,EACAC,GACD,IAAD,OACMnI,EAAQ,GACRqI,EAAU,GACVC,EAAU,GAEdA,EAAQvY,KAAK,CAAE5C,EAAG,EAAGC,EAAG,IAExB,IAPF,iBAQM,IAAImb,EAAQD,EAAQlY,MAWpB,GAAIiY,EAAQG,MANa,SAACC,GACtB,IAAIC,EAAQ9Y,KAAK+Y,IAAIF,EAAQtb,EAAIob,EAAMpb,GACnCyb,EAAQhZ,KAAK+Y,IAAIF,EAAQrb,EAAImb,EAAMnb,GACvC,OAAOsb,EAAQ,GAAKE,EAAQ,KAI5B,iBAGJ,GACIL,EAAMpb,EAAI+a,GACVK,EAAMpb,GAAK+a,GACXK,EAAMnb,EAAI+a,GACVI,EAAMnb,GAAK+a,EAEX,iBAGJE,EAAQtY,KAAKwY,GAEb,IAAIM,EAAmB,EAAKC,sBACxBP,EACAP,EACAC,GAEJK,EAAUA,EAAQtM,OAAO6M,IAhCtBP,EAAQ1Z,OAAS,GAAG,IAwC3B,OALAyZ,EAAQjW,SAAQ,SAACmW,GACb,IAAIQ,EAAI,IAAIhC,GAAI,EAAKlc,EAAG0d,EAAMpb,EAAGob,EAAMnb,EAAG,EAAK2a,eAC/C/H,EAAMjQ,KAAKgZ,MAGR/I,I,4CAGWuI,EAAOP,EAAsBC,GAC/C,IAAIY,EAAmB,GA2BvB,OAzBAA,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EACb5a,EAAGmb,EAAMnb,IAEbyb,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EACb5a,EAAGmb,EAAMnb,IAEbyb,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EAAuB,EACpC5a,EAAGmb,EAAMnb,EAAI6a,IAEjBY,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EAAuB,EACpC5a,EAAGmb,EAAMnb,EAAI6a,IAEjBY,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EAAuB,EACpC5a,EAAGmb,EAAMnb,EAAI6a,IAEjBY,EAAiB9Y,KAAK,CAClB5C,EAAGob,EAAMpb,EAAI6a,EAAuB,EACpC5a,EAAGmb,EAAMnb,EAAI6a,IAGVY,I,+BAIPhb,KAAKmS,MAAM5N,SAAQ,SAAC4W,GAChBA,EAAIlV,c,6BAKRjG,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAE2B,UAAUqB,KAAKsP,YAAc,EAAGtP,KAAKuP,aAAe,GAE3DvP,KAAKmS,MAAM5N,SAAQ,SAAC4W,GAChBA,EAAIjV,UAGRlG,KAAKhD,EAAEuF,U,KC7HM6Y,G,kDACjB,WAAYpe,EAAGsS,EAAaC,EAAc2K,GAAgB,IAAD,8BACrD,cAAMld,EAAGsS,EAAaC,EAAc2K,IAC/BmB,qBAAuBC,KAAKC,MACjC,EAAKC,sBAHgD,E,kEAMlC,IAAD,OAClBxb,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAE+a,UAAU/X,KAAKhD,EAAEgb,IAAK,KAE7B,IAAMyD,EAAoBzb,KAAKhD,EAAEiE,KAC7BjB,KAAKsP,YAAc,EACnBtP,KAAKuP,aAAe,EACpB,EACA,GAGJvP,KAAKmS,MAAM5N,SAAQ,SAAC4W,GAChB,IAAMO,EAAoB,EAAK1e,EAAEiE,KAAKka,EAAI7b,EAAG6b,EAAI5b,EAAG,EAAG,GACjDoc,EAAqB,EAAK3e,EAAEO,IAC9Bme,EACA,EACAD,EACA,EAAKvB,cACL,GAEJiB,EAAIS,cAAcD,GAClBR,EAAIU,OAEJ,IAAM/C,EAAM,EAAK9b,EAAEO,IACfme,EACA,EACAD,EACA,IACA,IAEElC,EAAa,EAAKvc,EAAEkb,MAAM,EAAG,IAAKY,GAClCU,EAAgB,EAAKxc,EAAEkb,MACzB,EAAKlb,EAAE8b,IAAIS,GACX,EAAKvc,EAAE8e,WAAWvC,GAClB,EAAKvc,EAAE+e,UAAUxC,GAAc,GAEnC4B,EAAIa,UAAUzC,EAAYC,MAG9BxZ,KAAKhD,EAAEuF,Q,+BAGD,IAAD,OACL,iEAEA,IAAM0Z,EAAcX,KAAKC,MACrBU,EAAcjc,KAAKqb,qBAvDE,oBA2DzBrb,KAAKqb,qBAAuBY,EAC5Bjc,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAE+a,UAAU/X,KAAKhD,EAAEgb,IAAK,KAE7BhY,KAAKmS,MAAM5N,SAAQ,SAAC4W,GAChB,IAAM5B,EAAa,EAAKvc,EAAEkb,MACtB,EAAKlb,EAAE8b,IAAIqC,EAAI5B,YAAc,EAC7B,EAAKvc,EAAE8e,WAAWX,EAAI5B,YACtB,EAAKvc,EAAE+e,UAAUZ,EAAI5B,aAEnBC,EAAgB,EAAKxc,EAAEkb,MACzB,EAAKlb,EAAE8b,IAAIqC,EAAI3B,eAAiB,EAChC,EAAKxc,EAAE8e,WAAWX,EAAI3B,eACtB,EAAKxc,EAAE+e,UAAUZ,EAAI3B,gBAEzB2B,EAAIa,UAAUzC,EAAYC,MAG9BxZ,KAAKhD,EAAEuF,W,GA3E+B0X,ICFzBiC,G,kDACjB,WAAYlf,EAAGsS,EAAaC,EAAc2K,GAAgB,IAAD,8BACrD,cAAMld,EAAGsS,EAAaC,EAAc2K,IAC/BiC,mBAFgD,E,+DAKrC,IAAD,OACfnc,KAAKhD,EAAEkF,OACPlC,KAAKhD,EAAE+a,UAAU/X,KAAKhD,EAAEgb,IAAK,KAE7BhY,KAAKmS,MAAM5N,SAAQ,SAAC4W,GAChB,IAAMiB,EAAe,IACftD,EAAM,EAAK9b,EAAEoE,OAAO,EAAGgb,GACvBC,EAAM,EAAKrf,EAAEoE,OAAOgb,KAAoBA,OACxCE,EAAQ,EAAKtf,EAAEoE,OAAOgb,KAAoBA,OAC1C7C,EAAa,EAAKvc,EAAEkb,MAAMY,EAAKuD,EAAKC,GACpC9C,EAAgB,EAAKxc,EAAEkb,MACzB,EAAKlb,EAAE8b,IAAIS,GACX,EAAKvc,EAAE8e,WAAWvC,GAClB,EAAKvc,EAAE+e,UAAUxC,GAAc,GAEnC4B,EAAIa,UAAUzC,EAAYC,GAE1B,IAAM+C,EAAe,EAAKvf,EAAEoE,OAAO,EAAG,EAAK8Y,eAC3CiB,EAAIS,cAAcW,GAEA,EAAKvf,EAAEoE,OAAO,EAAC,GAAM,IAEnC+Z,EAAIU,OAEJV,EAAIqB,YAIZxc,KAAKhD,EAAEuF,U,GAlC4B0X,ICkH5BwC,I,wDA3GX,WAAY3f,GAAQ,IAAD,8BACf,cAAMA,IAIVC,OAAS,SAACC,GACN,IAAI0f,EACAC,EACAC,EAEEC,EAAgB,SAChBC,EAAmB,mBAEnB3F,EAAkB,WACpB,OAAOjG,OAAOE,aAGZ8F,EAAiB,WACnB,OAAOhG,OAAOC,YAGZ4L,EAAgB,WAElB,MAAO,IADMhb,KAAKvD,IAAI2Y,IAAmBD,MAIvC8F,EAAgB,WAClB,OAAQL,GACJ,KAAKE,EACD,OAAO,IAAIX,GACPlf,EACAka,IACAC,IACA4F,KAER,KAAKD,EACD,OAAO,IAAI1B,GACPpe,EACAka,IACAC,IACA4F,KAER,QACI,OAAO,IAAI9C,GACPjd,EACAka,IACAC,IACA4F,OAgBhB/f,EAAEe,MAAQ,WACN,IAAM2H,EAAM1I,EAAEgB,aAAakZ,IAAkBC,KAC7CzR,EAAIC,OAAO,UACXD,EAAIvH,MAAM,UAAW,UAbrBye,EAAoB5f,EAAEigB,eACJC,OAAOL,GACzBD,EAAkBM,OAAOJ,GACzBF,EAAkBjX,OAAO,gBAEzBiX,EAAkBO,SAASN,GAE3BF,EAAiBC,EAAkBO,WAUnCngB,EAAE8N,UAAU9N,EAAEiO,SACdyR,EAAUM,KAGdhgB,EAAEoB,KAAO,WACLpB,EAAEqB,WAAW,IAETue,EAAkBO,aAAeR,IACjCA,EAAiBC,EAAkBO,WACnCT,EAAUM,KAGdN,EAAQzW,SACRyW,EAAQxW,QAGZlJ,EAAE2C,cAAgB,WACd3C,EAAE4C,aAAasX,IAAkBC,KACjCuF,EAAUM,MAtFd,EAAKnd,MAAQC,IAAMC,YAFJ,E,gEA6FfC,KAAKC,KAAO,IAAIvC,IAAGsC,KAAKjD,OAAQiD,KAAKH,MAAMK,W,+BAI3C,OACI,yBAAKC,IAAKH,KAAKH,OACX,kBAAC,EAAD,CAAgB4C,GAAG,WACnB,yBAAKA,GAAG,YACJ,yBAAKA,GAAG,uB,GAtGR3C,IAAMM,YCSpBgd,GACF,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,K3DpBL,I2DoB4BC,UAAWzG,KAC/C,kBAAC,IAAD,CACIuG,OAAK,EACLC,KAAM3G,EACN4G,UAAW1gB,IAEf,kBAAC,IAAD,CACIwgB,OAAK,EACLC,KAAM3G,EACN4G,UAAWld,IAEf,kBAAC,IAAD,CACIgd,OAAK,EACLC,KAAM3G,EACN4G,UAAWnY,IAEf,kBAAC,IAAD,CACIiY,OAAK,EACLC,KAAM3G,EACN4G,UAAWnW,IAEf,kBAAC,IAAD,CAAOiW,OAAK,EAACC,KAAM3G,EAAuB4G,UAAWzT,IACrD,kBAAC,IAAD,CAAOuT,OAAK,EAACC,KAAM3G,EAAuB4G,UAAWpT,IACrD,kBAAC,IAAD,CACIkT,OAAK,EACLC,KAAM3G,EACN4G,UAAWC,IAEf,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAM3G,EAAsB4G,UAAWjM,IACpD,kBAAC,IAAD,CACI+L,OAAK,EACLC,KAAM3G,EACN4G,UAAWxG,KAEf,kBAAC,IAAD,CAAOsG,OAAK,EAACC,KAAM3G,EAAkB4G,UAAWd,KAChD,kBAAC,IAAD,CAAOc,UAAW3gB,MASf6gB,OAJf,WACI,OAAO,kBAAC,IAAMC,WAAP,KAAmBN,K,SCxDxBO,GAAcxN,SAASC,eAAe,QACxCuN,GAAYC,gBACfC,mBAAQ,kBAAC,GAAD,MAASF,IAEjBzU,kBAAO,kBAAC,GAAD,MAASyU,M","file":"static/js/main.3e9b3775.chunk.js","sourcesContent":["import React from \"react\";\nconst Notfound = () => <h1>Not found my app</h1>;\nexport default Notfound;\n","import React from \"react\";\nimport p5 from \"p5\";\n\nclass ModuloTimesTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet base = 100;\n\t\tlet factor = 0;\n\n\t\tp.setup = () => {\n\t\t\tvar cnv = p.createCanvas(p.windowWidth, p.windowHeight);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.background(51);\n\n\t\t\tif (factor !== Number.MAX_VALUE) {\n\t\t\t\tfactor = factor + 0.01;\n\t\t\t} else {\n\t\t\t\tfactor = 0;\n\t\t\t}\n\n\t\t\tconst radius = p.min(p.windowWidth / 2, p.windowHeight / 2);\n\t\t\tconst outerRadius = radius * 0.95;\n\t\t\tconst innerRadius = radius * 0.9;\n\t\t\tconst pointSize = 14;\n\t\t\tconst halfPointSize = pointSize / 2;\n\n\t\t\tp.translate(p.windowWidth / 2, p.windowHeight / 2);\n\t\t\tp.textSize(pointSize);\n\n\t\t\tp.stroke(255);\n\t\t\tp.noFill();\n\t\t\tp.circle(0, 0, innerRadius * 2);\n\n\t\t\tp.fill(255);\n\t\t\tfor (var i = 0; i < base; i++) {\n\t\t\t\tconst timesResult = (i * factor) % base;\n\n\t\t\t\tconst p1 = getIndexVector(i, base, innerRadius);\n\t\t\t\tconst p2 = getIndexVector(timesResult, base, innerRadius);\n\t\t\t\tconst p3 = getIndexVector(i, base, outerRadius);\n\n\t\t\t\tp.circle(p1.x, p1.y, pointSize);\n\t\t\t\tp.line(p1.x, p1.y, p2.x, p2.y);\n\t\t\t\tp.text(i, p3.x - halfPointSize, p3.y + halfPointSize);\n\t\t\t}\n\t\t};\n\n\t\t// Get a vector point radius distance away from the origin at the angle\n\t\t// index/base scaled to 2 pi\n\t\tfunction getIndexVector(index, base, radius) {\n\t\t\tconst angle = p.map(index, 0, base, 0, p.TWO_PI);\n\t\t\tlet v = p5.Vector.fromAngle(angle - p.PI);\n\t\t\tv.mult(radius);\n\t\t\treturn v;\n\t\t}\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight);\n\t\t};\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn <div ref={this.myRef}></div>;\n\t}\n}\nexport default ModuloTimesTable;\n","import React from \"react\";\nimport p5 from \"p5\";\n\nclass SnowflakeGenerator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tconst numBranches = 6;\n\t\tconst pointRadius = 3;\n\t\tconst secondsToKeepFinishedSnowflake = 3;\n\t\tlet snowflakeBranch;\n\t\tlet newestPoint;\n\t\tlet sameSnowflakeCounter;\n\n\t\tp.setup = () => {\n\t\t\tvar cnv = p.createCanvas(p.windowWidth, p.windowHeight);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t\tp.frameRate(10);\n\t\t\tclearSnowflake();\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tconst countBeforeClearing =\n\t\t\t\tp.getFrameRate() * secondsToKeepFinishedSnowflake;\n\t\t\tif (sameSnowflakeCounter > countBeforeClearing) {\n\t\t\t\tclearSnowflake();\n\t\t\t}\n\n\t\t\tconst pointAdded = addNextPoint();\n\t\t\tif (!pointAdded) {\n\t\t\t\tsameSnowflakeCounter++;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Center drawing on screen\n\t\t\t// rotate so top and bottom snowflake branches are vertically aligned\n\t\t\tp.translate(p.windowWidth / 2, p.windowHeight / 2);\n\t\t\tp.rotate(p.TWO_PI / (numBranches * 2));\n\n\t\t\tconst rotationAmount = p.TWO_PI / numBranches;\n\t\t\tfor (let i = 0; i < numBranches; i++) {\n\t\t\t\tp.rotate(rotationAmount);\n\n\t\t\t\tshowPoint(newestPoint);\n\n\t\t\t\tp.push();\n\t\t\t\tp.scale(1, -1);\n\t\t\t\tshowPoint(newestPoint);\n\t\t\t\tp.pop();\n\t\t\t}\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight);\n\t\t\tclearSnowflake();\n\t\t};\n\n\t\t// Clears the screen and resets the snowflake branch to be empty.\n\t\tfunction clearSnowflake() {\n\t\t\tp.background(51);\n\t\t\tsnowflakeBranch = [];\n\t\t\tnewestPoint = null;\n\t\t\tsameSnowflakeCounter = 0;\n\t\t}\n\n\t\tfunction showPoint(point) {\n\t\t\tp.ellipse(point.x, point.y, pointRadius * 2, pointRadius * 2);\n\t\t}\n\n\t\t// Add another point to the snowflake branch, if there is space on screen.\n\t\t// Returns true if a new point was added the the branch, false if not.\n\t\tfunction addNextPoint() {\n\t\t\tconst minWindowSize = Math.min(\n\t\t\t\tp.windowWidth / 2,\n\t\t\t\tp.windowHeight / 2\n\t\t\t);\n\t\t\tconst point = p.createVector(minWindowSize, 0);\n\t\t\tlet counter = 0;\n\n\t\t\twhile (true) {\n\t\t\t\trandomWalkPoint(point, p.TWO_PI / (numBranches * 2));\n\t\t\t\tif (point.x < 1 || isIntersecting(point)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcounter++;\n\t\t\t}\n\n\t\t\tif (counter > 0) {\n\t\t\t\tsnowflakeBranch.push(point);\n\t\t\t\tnewestPoint = point;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Check if a point is intersecting with any of the existing points in the snowflake branch\n\t\tfunction isIntersecting(point) {\n\t\t\tfor (let i = 0; i < snowflakeBranch.length; i++) {\n\t\t\t\tconst existingPoint = snowflakeBranch[i];\n\t\t\t\tconst distanceBetween = p.dist(\n\t\t\t\t\texistingPoint.x,\n\t\t\t\t\texistingPoint.y,\n\t\t\t\t\tpoint.x,\n\t\t\t\t\tpoint.y\n\t\t\t\t);\n\t\t\t\tif (distanceBetween <= pointRadius * 2) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// Walk the point to the left keeping it within the angle specified from the origin\n\t\tfunction randomWalkPoint(point, angleThreshold) {\n\t\t\tpoint.x -= 1;\n\t\t\tpoint.y += p.random(-3, 3);\n\n\t\t\tlet angle = point.heading();\n\t\t\tangle = p.constrain(angle, 0, angleThreshold);\n\n\t\t\tconst magnitude = point.mag();\n\t\t\tconst point2 = p5.Vector.fromAngle(angle);\n\t\t\tpoint2.setMag(magnitude);\n\n\t\t\tpoint.x = point2.x;\n\t\t\tpoint.y = point2.y;\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn <div ref={this.myRef}></div>;\n\t}\n}\nexport default SnowflakeGenerator;\n","import p5 from \"p5\";\n\nexport default class Bird {\n\tconstructor(p, x, y, id) {\n\t\tthis.p = p;\n\t\tthis.uuid = id;\n\t\tthis.pos = this.p.createVector(x, y);\n\t\tthis.r = 5;\n\t\tthis.heading = this.p.createVector(\n\t\t\tthis.p.random(-1, 1),\n\t\t\tthis.p.random(-1, 1)\n\t\t);\n\t}\n\n\tshow(neighbourhood, showNeighbourhood) {\n\t\tthis.p.push();\n\n\t\tthis.p.translate(this.pos.x, this.pos.y);\n\t\tthis.p.rotate(this.heading.heading() + this.p.PI / 2);\n\n\t\tif (showNeighbourhood) {\n\t\t\tthis.p.push();\n\t\t\tthis.p.fill(255, 50);\n\t\t\tthis.p.noStroke();\n\t\t\tthis.p.ellipse(0, 0, neighbourhood * 2, neighbourhood * 2);\n\t\t\tthis.p.pop();\n\t\t}\n\n\t\tthis.p.fill(255);\n\t\tthis.p.triangle(-10, 10, 0, -10, 10, 10);\n\n\t\tthis.p.pop();\n\t}\n\n\tupdate(birds, sepMult, alignMult, cohMult, neighbourhood, maxX, maxY) {\n\t\tconst otherBirds = birds.filter((bird) => {\n\t\t\tconst distance = this.p.dist(\n\t\t\t\tthis.pos.x,\n\t\t\t\tthis.pos.y,\n\t\t\t\tbird.pos.x,\n\t\t\t\tbird.pos.y\n\t\t\t);\n\t\t\treturn bird.uuid !== this.uuid && distance < neighbourhood;\n\t\t});\n\n\t\tconst sepHeading = this.separate(otherBirds).mult(sepMult);\n\t\tconst alignHeading = this.align(otherBirds).mult(alignMult);\n\t\tconst cohHeading = this.cohesion(otherBirds).mult(cohMult);\n\n\t\tconst desiredHeading = this.p.createVector(0, 0);\n\t\tdesiredHeading.add(sepHeading);\n\t\tdesiredHeading.add(alignHeading);\n\t\tdesiredHeading.add(cohHeading);\n\t\tdesiredHeading.normalize();\n\n\t\tthis.changeHeading(desiredHeading);\n\n\t\tthis.pos.add(this.heading);\n\t\tthis.keepInBounds(0, 0, maxX, maxY);\n\t}\n\n\t// Move away from other birds in the flock to avoid crowding\n\tseparate(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tbirds.forEach((bird) => {\n\t\t\tlet headingToBird = p5.Vector.sub(bird.pos, this.pos);\n\t\t\tacc.add(headingToBird);\n\t\t});\n\n\t\tacc.normalize();\n\t\treturn acc.mult(-1);\n\t}\n\n\t// Steer towards the local heading of the flock\n\talign(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tbirds.forEach((bird) => {\n\t\t\tacc.add(bird.heading);\n\t\t});\n\n\t\treturn acc.normalize();\n\t}\n\n\t// Move towards the center of the local flock\n\tcohesion(birds) {\n\t\tlet acc = this.p.createVector(0, 0);\n\n\t\tif (birds.length === 0) {\n\t\t\treturn acc;\n\t\t}\n\n\t\tbirds.forEach((bird) => {\n\t\t\tacc.add(bird.pos);\n\t\t});\n\n\t\tconst avgPos = p5.Vector.div(acc, birds.length);\n\t\tconst headingToAvgPos = p5.Vector.sub(avgPos, this.pos);\n\t\treturn headingToAvgPos.normalize();\n\t}\n\n\tkeepInBounds(minX, minY, maxX, maxY) {\n\t\tconst closestInbounds = this.pos.copy();\n\n\t\tif (this.pos.x < minX) {\n\t\t\tclosestInbounds.x = minX;\n\t\t}\n\n\t\tif (this.pos.y < minY) {\n\t\t\tclosestInbounds.y = minY;\n\t\t}\n\n\t\tif (this.pos.x > maxX) {\n\t\t\tclosestInbounds.x = maxX;\n\t\t}\n\n\t\tif (this.pos.y > maxY) {\n\t\t\tclosestInbounds.y = maxY;\n\t\t}\n\n\t\tif (!closestInbounds.equals(this.pos)) {\n\t\t\tconst headingToInbounds = p5.Vector.sub(closestInbounds, this.pos);\n\t\t\tthis.changeHeading(headingToInbounds);\n\t\t}\n\t}\n\n\tchangeHeading(desiredHeading) {\n\t\tconst desiredHeadingRatio = 0.1;\n\t\tconst currentHeadingRatio = 1 - desiredHeadingRatio;\n\t\tconst desiredPart = p5.Vector.mult(desiredHeading, desiredHeadingRatio);\n\t\tconst currentPart = p5.Vector.mult(this.heading, currentHeadingRatio);\n\t\tconst newHeading = currentPart.add(desiredPart);\n\t\tnewHeading.normalize();\n\t\tthis.heading = newHeading;\n\t}\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Bird from \"./Bird\";\nimport \"./FlockingSimulation.scss\";\n\nclass FlockingSimulation extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet birds = [];\n\t\tlet sepMult = 50;\n\t\tlet alignMult = 50;\n\t\tlet cohMult = 40;\n\t\tlet neighbourhood = 100;\n\t\tlet sepMultSlider, alignMultSlider, cohMultSlider, neighbourhoodSlider;\n\t\tlet neighbourhoodCheckbox;\n\n\t\tp.setup = () => {\n\t\t\tvar cnv = p.createCanvas(p.windowWidth, p.windowHeight * 0.9);\n\t\t\tcnv.parent(\"canvas\");\n\t\t\tcnv.style(\"display\", \"block\");\n\n\t\t\tfor (let i = 0; i < 100; i++) {\n\t\t\t\tconst rndX = p.random(0, p.windowWidth);\n\t\t\t\tconst rndY = p.random(0, p.windowHeight * 0.9);\n\t\t\t\tbirds.push(new Bird(p, rndX, rndY, i));\n\t\t\t}\n\n\t\t\tcreateControls();\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.background(51);\n\n\t\t\tsepMult = sepMultSlider.value();\n\t\t\talignMult = alignMultSlider.value();\n\t\t\tcohMult = cohMultSlider.value();\n\t\t\tneighbourhood = neighbourhoodSlider.value();\n\n\t\t\tbirds.forEach((bird) => {\n\t\t\t\tbird.update(\n\t\t\t\t\tbirds,\n\t\t\t\t\tsepMult,\n\t\t\t\t\talignMult,\n\t\t\t\t\tcohMult,\n\t\t\t\t\tneighbourhood,\n\t\t\t\t\tp.windowWidth,\n\t\t\t\t\tp.windowHeight * 0.9\n\t\t\t\t);\n\t\t\t\tbird.show(neighbourhood, neighbourhoodCheckbox.checked());\n\t\t\t});\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight * 0.9);\n\t\t};\n\n\t\tfunction createControls() {\n\t\t\tsepMultSlider = p.createSlider(0, 100, sepMult);\n\t\t\tsepMultSlider.parent(\"sepDiv\");\n\n\t\t\talignMultSlider = p.createSlider(0, 100, alignMult);\n\t\t\talignMultSlider.parent(\"alignDiv\");\n\n\t\t\tcohMultSlider = p.createSlider(0, 100, cohMult);\n\t\t\tcohMultSlider.parent(\"cohDiv\");\n\n\t\t\tneighbourhoodSlider = p.createSlider(0, 200, neighbourhood);\n\t\t\tneighbourhoodSlider.parent(\"neighbourhoodDiv\");\n\t\t\tneighbourhoodSlider.style(\"display\", \"inline-block\");\n\n\t\t\tneighbourhoodCheckbox = p.createCheckbox(\"Show\", false);\n\t\t\tneighbourhoodCheckbox.parent(\"neighbourhoodDiv\");\n\t\t\tneighbourhoodCheckbox.style(\"display\", \"inline-block\");\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div ref={this.myRef}>\n\t\t\t\t<div id='canvas'></div>\n\t\t\t\t<div id='controls'>\n\t\t\t\t\t<div id='sepDiv' className='slider'>\n\t\t\t\t\t\t<p>Separation</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='alignDiv' className='slider'>\n\t\t\t\t\t\t<p>Alignment</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='cohDiv' className='slider'>\n\t\t\t\t\t\t<p>Cohesion</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='neighbourhoodDiv' className='slider'>\n\t\t\t\t\t\t<p>Neighbourhood</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default FlockingSimulation;\n","export default class Cog {\n\tconstructor(p, x, y, d, index, vertical) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.d = d;\n\t\tthis.index = index;\n\t\tthis.vertical = vertical;\n\t\tthis.angle = -(this.p.PI / 2);\n\t\tthis.updateLine();\n\t}\n\n\tshow() {\n\t\tthis.p.push();\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255);\n\t\tthis.p.noFill();\n\t\tthis.p.ellipse(this.x, this.y, this.d, this.d);\n\t\tthis.p.strokeWeight(8);\n\t\tthis.p.point(this.lineStartX, this.lineStartY);\n\t\tthis.p.strokeWeight(1);\n\t\tthis.p.stroke(255, 50);\n\t\tthis.p.line(\n\t\t\tthis.lineStartX,\n\t\t\tthis.lineStartY,\n\t\t\tthis.lineEndX,\n\t\t\tthis.lineEndY\n\t\t);\n\t\tthis.p.pop();\n\t}\n\n\tupdateLine() {\n\t\tlet r = this.d / 2;\n\t\tlet lineX = r * this.p.cos(this.angle);\n\t\tlet lineY = r * this.p.sin(this.angle);\n\t\tthis.lineStartX = this.x + lineX;\n\t\tthis.lineStartY = this.y + lineY;\n\t\tif (this.vertical) {\n\t\t\tthis.lineEndX = this.lineStartX;\n\t\t\tthis.lineEndY = this.p.height;\n\t\t} else {\n\t\t\tthis.lineEndX = this.p.width;\n\t\t\tthis.lineEndY = this.lineStartY;\n\t\t}\n\t}\n\n\tupdateAngle() {\n\t\tthis.angle += 0.01 * this.index;\n\t\tthis.updateLine();\n\t}\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Cog from \"./Cog\";\nimport { intersect } from \"mathjs\";\nimport \"./LissajousCurveTable.scss\";\n\nclass LissajousCurveTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet numCogs, gridSize;\n\t\tlet diameter;\n\t\tlet cogsTop, cogsSide;\n\t\tlet patterns;\n\n\t\tp.setup = () => {\n\t\t\tconst minDim = Math.min(p.windowWidth, p.windowHeight);\n\t\t\tconst cnv = p.createCanvas(minDim, minDim);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t\tcnv.style(\"margin\", \"auto\");\n\n\t\t\tp.frameRate(30);\n\n\t\t\tnumCogs = 8;\n\t\t\tgridSize = numCogs + 1;\n\t\t\tdiameter = minDim / gridSize;\n\t\t\tcogsTop = [];\n\t\t\tcogsSide = [];\n\t\t\tpatterns = [[]];\n\n\t\t\tfor (let i = 1; i < gridSize; i++) {\n\t\t\t\tlet xOff = diameter * (i + 0.5);\n\t\t\t\tlet c = new Cog(\n\t\t\t\t\tp,\n\t\t\t\t\txOff,\n\t\t\t\t\tdiameter * 0.5,\n\t\t\t\t\tdiameter * 0.95,\n\t\t\t\t\ti,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t\tcogsTop.push(c);\n\t\t\t}\n\n\t\t\tfor (let i = 1; i < gridSize; i++) {\n\t\t\t\tlet yOff = diameter * (i + 0.5);\n\t\t\t\tlet c = new Cog(\n\t\t\t\t\tp,\n\t\t\t\t\tdiameter * 0.5,\n\t\t\t\t\tyOff,\n\t\t\t\t\tdiameter * 0.95,\n\t\t\t\t\ti,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\t\t\t\tcogsSide.push(c);\n\t\t\t}\n\n\t\t\tfor (let i = 1; i < gridSize; i++) {\n\t\t\t\tpatterns[i] = [];\n\t\t\t\tfor (let j = 1; j < gridSize; j++) {\n\t\t\t\t\tpatterns[i][j] = new Set();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.clear();\n\t\t\tp.background(51);\n\n\t\t\tcogsTop.forEach((topCog) => {\n\t\t\t\tcogsSide.forEach((sideCog) => {\n\t\t\t\t\tlet l1S = [topCog.lineStartX, topCog.lineStartY];\n\t\t\t\t\tlet l1E = [topCog.lineEndX, topCog.lineEndY];\n\t\t\t\t\tlet l2S = [sideCog.lineStartX, sideCog.lineStartY];\n\t\t\t\t\tlet l2E = [sideCog.lineEndX, sideCog.lineEndY];\n\t\t\t\t\tlet x = intersect(l1S, l1E, l2S, l2E);\n\t\t\t\t\tpatterns[topCog.index][sideCog.index].add(x);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcogsTop.forEach((c) => {\n\t\t\t\tc.show();\n\t\t\t\tc.updateAngle();\n\t\t\t});\n\n\t\t\tcogsSide.forEach((c) => {\n\t\t\t\tc.show();\n\t\t\t\tc.updateAngle();\n\t\t\t});\n\n\t\t\tfor (let i = 1; i < gridSize; i++) {\n\t\t\t\tfor (let j = 1; j < gridSize; j++) {\n\t\t\t\t\tp.push();\n\t\t\t\t\tp.stroke(255);\n\t\t\t\t\tp.strokeWeight(1);\n\t\t\t\t\tp.noFill();\n\t\t\t\t\tp.beginShape();\n\t\t\t\t\tpatterns[i][j].forEach((x) => {\n\t\t\t\t\t\tp.vertex(x[0], x[1]);\n\t\t\t\t\t});\n\t\t\t\t\tp.endShape();\n\t\t\t\t\tp.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.setup();\n\t\t};\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn <div className='lissajous-curve-table' ref={this.myRef}></div>;\n\t}\n}\nexport default LissajousCurveTable;\n","export default class Symbol {\n\tconstructor(p, x, y, velocity, isWhite) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.changeProb = this.p.random(0.5, 1);\n\t\tthis.velocity = velocity;\n\t\tthis.isWhite = isWhite;\n\t\tthis.setRandomSymbol();\n\t}\n\n\tsetRandomSymbol = () => {\n\t\tvar decimal = this.p.random(12448, 12543); //Katakana unicode range\n\t\tthis.value = String.fromCharCode(decimal);\n\t};\n\n\trender = () => {\n\t\tif (this.isWhite) {\n\t\t\tthis.p.fill(180, 255, 180);\n\t\t} else {\n\t\t\tthis.p.fill(0, 255, 70);\n\t\t}\n\t\tthis.p.text(this.value, this.x, this.y);\n\t};\n\n\tupdate = () => {\n\t\tif (this.p.random() > this.changeProb) {\n\t\t\tthis.setRandomSymbol();\n\t\t}\n\t\tif (this.y > this.p.height) {\n\t\t\tthis.y = 0;\n\t\t} else {\n\t\t\tthis.y += this.velocity;\n\t\t}\n\t};\n}\n","import Symbol from \"./Symbol\";\n\nexport default class Stream {\n\tconstructor(p, x, symbolSize) {\n\t\tthis.p = p;\n\t\tthis.x = x;\n\t\tthis.symbolSize = symbolSize;\n\t\tthis.symbols = [];\n\t\tthis.setup();\n\t}\n\n\tsetup = () => {\n\t\tlet y = this.randomInt(-100, -1000);\n\t\tlet velocity = this.randomInt(1, 10);\n\t\tlet isWhite = this.p.random([true, false]);\n\n\t\tfor (let i = 0; i < this.calcStreamLen(); i++) {\n\t\t\tlet sym = new Symbol(this.p, this.x, y, velocity, isWhite);\n\t\t\tthis.symbols.push(sym);\n\t\t\ty -= this.symbolSize;\n\t\t\tisWhite = false;\n\t\t}\n\t};\n\n\trandomInt = (min, max) => {\n\t\treturn this.p.int(this.p.random(min, max));\n\t};\n\n\tcalcStreamLen = () => {\n\t\tlet maxLen = this.p.int(this.p.windowHeight / this.symbolSize);\n\t\tlet minLen = maxLen < 5 ? 1 : 5;\n\t\treturn this.randomInt(minLen, maxLen);\n\t};\n\n\tupdate = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].update();\n\t\t}\n\t};\n\n\trender = () => {\n\t\tfor (let i = 0; i < this.symbols.length; i++) {\n\t\t\tthis.symbols[i].render();\n\t\t}\n\t};\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Stream from \"./Stream\";\n\nclass MatrixRain extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet numStreams = 50;\n\t\tlet symbolSize;\n\t\tlet streams = [];\n\n\t\tp.setup = () => {\n\t\t\tvar cnv = p.createCanvas(p.windowWidth, p.windowHeight);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t\tp.background(0);\n\n\t\t\tthis.createNewStreams();\n\t\t};\n\n\t\tthis.createNewStreams = () => {\n\t\t\tstreams = [];\n\n\t\t\tsymbolSize = p.width / numStreams;\n\t\t\tp.textSize(symbolSize);\n\n\t\t\tlet x = 0;\n\t\t\tfor (var i = 0; i <= numStreams; i++) {\n\t\t\t\tvar stream = new Stream(p, x, symbolSize);\n\t\t\t\tstreams.push(stream);\n\t\t\t\tx += symbolSize;\n\t\t\t}\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.background(0, 100);\n\t\t\tstreams.forEach(function (s) {\n\t\t\t\ts.render();\n\t\t\t\ts.update();\n\t\t\t});\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight);\n\t\t\tthis.createNewStreams();\n\t\t};\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn <div ref={this.myRef}></div>;\n\t}\n}\nexport default MatrixRain;\n","import React from \"react\";\nimport p5 from \"p5\";\n\nclass MaurerRose extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\tsketch = (p) => {\n\t\tlet cnvWidth, cnvHeight;\n\t\tlet n = 1;\n\t\tlet d = 0;\n\t\tlet maxN = 20;\n\t\tlet maxD = 360;\n\t\tlet play = true;\n\t\tlet size;\n\t\tlet nSlider, dSlider;\n\n\t\tp.setup = () => {\n\t\t\tcnvWidth = p.windowWidth;\n\t\t\tcnvHeight = p.windowHeight * 0.9;\n\t\t\tvar cnv = p.createCanvas(cnvWidth, cnvHeight);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t\tsize = p.min(cnvWidth / 2, cnvHeight / 2) - 2;\n\n\t\t\tthis.createControls();\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tp.background(51);\n\n\t\t\tp.push();\n\t\t\tp.translate(cnvWidth / 2, cnvHeight / 2);\n\t\t\tthis.drawMaurerRose();\n\t\t\tthis.drawRose();\n\t\t\tp.pop();\n\n\t\t\tif (play) {\n\t\t\t\tif (n > maxN) {\n\t\t\t\t\tn = 1;\n\t\t\t\t\td = 0;\n\t\t\t\t} else if (d < maxD) {\n\t\t\t\t\td += 0.5;\n\t\t\t\t} else {\n\t\t\t\t\td = 0;\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t\tnSlider.value(n);\n\t\t\t\tdSlider.value(d);\n\t\t\t} else {\n\t\t\t\tn = nSlider.value();\n\t\t\t\td = dSlider.value();\n\t\t\t}\n\t\t};\n\n\t\tthis.drawRose = () => {\n\t\t\tp.push();\n\t\t\tp.angleMode(p.RADIANS);\n\t\t\tp.noFill();\n\t\t\tp.strokeWeight(2);\n\t\t\tp.stroke(255, 0, 0);\n\t\t\tp.beginShape();\n\t\t\tfor (let i = 0; i < p.TWO_PI; i += p.TWO_PI / 360) {\n\t\t\t\tlet r = size * p.sin(n * i);\n\t\t\t\tthis.vertexFromPolar(r, i);\n\t\t\t}\n\t\t\tp.endShape();\n\t\t\tp.pop();\n\t\t};\n\n\t\tthis.drawMaurerRose = () => {\n\t\t\tp.push();\n\t\t\tp.angleMode(p.DEGREES);\n\t\t\tp.noFill();\n\t\t\tp.strokeWeight(2);\n\t\t\tp.stroke(0, 0, 255);\n\t\t\tp.beginShape();\n\t\t\tfor (let i = 0; i < 361; i++) {\n\t\t\t\tlet k = i * d;\n\t\t\t\tlet r = size * p.sin(n * k);\n\t\t\t\tthis.vertexFromPolar(r, k);\n\t\t\t}\n\t\t\tp.endShape();\n\t\t\tp.pop();\n\t\t};\n\n\t\tthis.vertexFromPolar = (r, theta) => {\n\t\t\tlet x = r * p.cos(theta);\n\t\t\tlet y = r * p.sin(theta);\n\t\t\treturn p.vertex(x, y);\n\t\t};\n\n\t\tthis.createControls = () => {\n\t\t\tlet controls = p.createDiv();\n\n\t\t\tlet sliderDiv = p.createDiv();\n\t\t\tsliderDiv.style(\"width\", \"50%\");\n\t\t\tsliderDiv.style(\"display\", \"inline-block\");\n\t\t\tsliderDiv.style(\"text-align\", \"center\");\n\t\t\tsliderDiv.parent(controls);\n\n\t\t\tlet nDiv = p.createDiv(\"N value\");\n\t\t\tnDiv.parent(sliderDiv);\n\n\t\t\tnSlider = p.createSlider(1, maxN, n, 1);\n\t\t\tnSlider.parent(nDiv);\n\n\t\t\tlet dDiv = p.createDiv(\"D value\");\n\t\t\tdDiv.parent(sliderDiv);\n\n\t\t\tdSlider = p.createSlider(0, maxD, d, 1);\n\t\t\tdSlider.parent(dDiv);\n\n\t\t\tlet buttonDiv = p.createDiv();\n\t\t\tbuttonDiv.style(\"width\", \"50%\");\n\t\t\tbuttonDiv.style(\"display\", \"inline-block\");\n\t\t\tbuttonDiv.style(\"text-align\", \"center\");\n\t\t\tbuttonDiv.parent(controls);\n\n\t\t\tlet pauseButton = p.createButton(\"Pause\");\n\t\t\tpauseButton.parent(buttonDiv);\n\t\t\tpauseButton.mousePressed(() => {\n\t\t\t\tplay = !play;\n\t\t\t\tlet text = play ? \"Pause\" : \"Play\";\n\t\t\t\tpauseButton.html(text);\n\t\t\t});\n\n\t\t\tlet resetButton = p.createButton(\"Reset\");\n\t\t\tresetButton.parent(buttonDiv);\n\t\t\tresetButton.mousePressed(() => {\n\t\t\t\tn = 1;\n\t\t\t\td = 0;\n\t\t\t});\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth, p.windowHeight);\n\t\t};\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\tconsole.log(\"render\");\n\n\t\treturn <div ref={this.myRef}></div>;\n\t}\n}\nexport default MaurerRose;\n","class Connection {\n    constructor(tileA, tileB) {\n        this.tileA = tileA;\n        this.tileB = tileB;\n        this.isWall = true;\n    }\n}\n\nclass Tile {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.connectionAbove = null;\n        this.connectionRight = null;\n        this.connectionLeft = null;\n        this.connectionBelow = null;\n    }\n\n    setAboveConnection(tile) {\n        this.connectionAbove = new Connection(this, tile);\n    }\n\n    setRightConnection(tile) {\n        this.connectionRight = new Connection(this, tile);\n    }\n\n    setBelowConnection(tile) {\n        this.connectionBelow = new Connection(this, tile);\n    }\n\n    setLeftConnection(tile) {\n        this.connectionLeft = new Connection(this, tile);\n    }\n\n    getTileConnections() {\n        const allConnections = [\n            this.connectionAbove,\n            this.connectionBelow,\n            this.connectionLeft,\n            this.connectionRight,\n        ];\n\n        return allConnections.filter((connection) => {\n            return connection !== null;\n        });\n    }\n\n    getWallConnections() {\n        return this.getTileConnections().filter((connection) => {\n            return connection.isWall;\n        });\n    }\n\n    removeWallBetween(adjacentTile) {\n        const connectionToAdjacentTile = this.getTileConnections().find(\n            (connection) => {\n                return (\n                    connection.tileA === adjacentTile ||\n                    connection.tileB === adjacentTile\n                );\n            }\n        );\n\n        connectionToAdjacentTile.isWall = false;\n    }\n\n    showTile(p, topLeftXPix, topLeftYPix, tileLength) {\n        p.push();\n\n        p.fill(255);\n        p.strokeWeight(1);\n        p.stroke(200);\n        p.rect(topLeftXPix, topLeftYPix, tileLength, tileLength);\n\n        p.pop();\n    }\n\n    showWalls(p, topLeftXPix, topLeftYPix, tileLength) {\n        const wallThickness = tileLength / 8;\n        const topRightXPix = topLeftXPix + tileLength;\n        const topRightYPix = topLeftYPix;\n        const bottomLeftXPix = topLeftXPix;\n        const bottomLeftYPix = topLeftYPix + tileLength;\n        const bottomRightXPix = topLeftXPix + tileLength;\n        const bottomRightYPix = topLeftYPix + tileLength;\n\n        p.push();\n\n        p.strokeWeight(wallThickness);\n        p.stroke(0);\n        p.fill(0);\n\n        if (!this.connectionAbove || this.connectionAbove.isWall) {\n            p.line(topLeftXPix, topLeftYPix, topRightXPix, topRightYPix);\n        }\n\n        if (!this.connectionBelow || this.connectionBelow.isWall) {\n            p.line(\n                bottomLeftXPix,\n                bottomLeftYPix,\n                bottomRightXPix,\n                bottomRightYPix\n            );\n        }\n\n        if (!this.connectionLeft || this.connectionLeft.isWall) {\n            p.line(topLeftXPix, topLeftYPix, bottomLeftXPix, bottomLeftYPix);\n        }\n\n        if (!this.connectionRight || this.connectionRight.isWall) {\n            p.line(\n                topRightXPix,\n                topRightYPix,\n                bottomRightXPix,\n                bottomRightYPix\n            );\n        }\n\n        p.pop();\n    }\n}\n\nexport { Connection, Tile };\n","import { Tile } from \"./Tile\";\n\nexport default class Maze {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.tiles = [[]];\n        this.visistedTiles = new Set();\n        this.walls = [];\n\n        for (let y = 0; y < height; y++) {\n            this.tiles[y] = [];\n            for (let x = 0; x < width; x++) {\n                this.tiles[y][x] = new Tile(x, y);\n            }\n        }\n\n        for (let y = 0; y < height; y++) {\n            for (let x = 0; x < width; x++) {\n                this.__addAdjacentTiles(this.tiles[y][x]);\n            }\n        }\n\n        // init maze path\n        const randomX = Math.floor(Math.random() * width);\n        const randomY = Math.floor(Math.random() * height);\n        const start = this.tiles[randomY][randomX];\n        this.visistedTiles.add(start);\n        this.walls = this.walls.concat(start.getWallConnections());\n    }\n\n    __addAdjacentTiles(tile) {\n        const x = tile.x;\n        const y = tile.y;\n\n        if (this.__isValidCoord(x - 1, y)) {\n            tile.setLeftConnection(this.tiles[y][x - 1]);\n        }\n\n        if (this.__isValidCoord(x, y - 1)) {\n            tile.setAboveConnection(this.tiles[y - 1][x]);\n        }\n\n        if (this.__isValidCoord(x + 1, y)) {\n            tile.setRightConnection(this.tiles[y][x + 1]);\n        }\n\n        if (this.__isValidCoord(x, y + 1)) {\n            tile.setBelowConnection(this.tiles[y + 1][x]);\n        }\n    }\n\n    __isValidCoord(x, y) {\n        if (x < 0) {\n            return false;\n        } else if (y < 0) {\n            return false;\n        } else if (x >= this.width) {\n            return false;\n        } else if (y >= this.height) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    __removeTileFromArray(array, tile) {\n        return array.filter((elem) => {\n            const xMatch = elem.x === tile.x;\n            const yMatch = elem.y === tile.y;\n            return !(xMatch && yMatch);\n        });\n    }\n\n    __createFullMazePath() {\n        let visistedTiles = new Set();\n        let walls = [];\n\n        // init\n        const start = this.tiles[0][0];\n        visistedTiles.add(start);\n        walls = walls.concat(start.getWallConnections());\n\n        while (walls.length > 0) {\n            const index = Math.floor(Math.random() * walls.length);\n            const randomWall = walls[index];\n\n            const tileA = randomWall.tileA;\n            const tileB = randomWall.tileB;\n            const tileAVisited = visistedTiles.has(tileA);\n            const tileBVisited = visistedTiles.has(tileB);\n\n            if (tileAVisited && !tileBVisited) {\n                walls = walls.concat(tileB.getWallConnections());\n                tileA.removeWallBetween(tileB);\n                tileB.removeWallBetween(tileA);\n                visistedTiles.add(tileB);\n            } else if (!tileAVisited && tileBVisited) {\n                walls = walls.concat(tileA.getWallConnections());\n                tileA.removeWallBetween(tileB);\n                tileB.removeWallBetween(tileA);\n                visistedTiles.add(tileA);\n            }\n\n            walls.splice(index, 1);\n        }\n    }\n\n    __createMazeUntilWallRemoved() {\n        if (this.walls.length > 0) {\n            let wallRemoved = false;\n\n            const index = Math.floor(Math.random() * this.walls.length);\n            const randomWall = this.walls[index];\n\n            const tileA = randomWall.tileA;\n            const tileB = randomWall.tileB;\n            const tileAVisited = this.visistedTiles.has(tileA);\n            const tileBVisited = this.visistedTiles.has(tileB);\n\n            if (tileAVisited && !tileBVisited) {\n                this.walls = this.walls.concat(tileB.getWallConnections());\n                tileA.removeWallBetween(tileB);\n                tileB.removeWallBetween(tileA);\n                this.visistedTiles.add(tileB);\n                wallRemoved = true;\n            } else if (!tileAVisited && tileBVisited) {\n                this.walls = this.walls.concat(tileA.getWallConnections());\n                tileA.removeWallBetween(tileB);\n                tileB.removeWallBetween(tileA);\n                this.visistedTiles.add(tileA);\n                wallRemoved = true;\n            }\n\n            this.walls.splice(index, 1);\n\n            if (!wallRemoved) {\n                this.__createMazeUntilWallRemoved();\n            }\n        }\n    }\n\n    completed() {\n        return this.walls.length === 0;\n    }\n\n    update() {\n        this.__createMazeUntilWallRemoved();\n    }\n\n    show(p, canvasWidth, canvasHeight) {\n        const maxTileWidth = canvasWidth / this.width;\n        const maxTileHeight = canvasHeight / this.height;\n        const tileLength = Math.min(maxTileWidth, maxTileHeight);\n\n        const xOffset = (canvasWidth - tileLength * this.width) / 2;\n        const yOffset = (canvasHeight - tileLength * this.height) / 2;\n\n        p.push();\n\n        this.__showTiles(p, xOffset, yOffset, tileLength);\n        this.__showWalls(p, xOffset, yOffset, tileLength);\n\n        p.pop();\n    }\n\n    __showTiles(p, xOffset, yOffset, tileLength) {\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const topLeftXPix = xOffset + x * tileLength;\n                const topLeftYPix = yOffset + y * tileLength;\n                this.tiles[y][x].showTile(\n                    p,\n                    topLeftXPix,\n                    topLeftYPix,\n                    tileLength\n                );\n            }\n        }\n    }\n\n    __showWalls(p, xOffset, yOffset, tileLength) {\n        for (let y = 0; y < this.height; y++) {\n            for (let x = 0; x < this.width; x++) {\n                const topLeftXPix = xOffset + x * tileLength;\n                const topLeftYPix = yOffset + y * tileLength;\n                this.tiles[y][x].showWalls(\n                    p,\n                    topLeftXPix,\n                    topLeftYPix,\n                    tileLength\n                );\n            }\n        }\n    }\n}\n","import React from \"react\";\n\n/**\n * A div that when clicked will toggle between fullscreen mode.\n */\nclass FullscreenElem extends React.Component {\n    toggleCavasFullScreen = () => {\n        const canvasElem = document.getElementById(\"canvas\");\n        const currentFullScreenElem = document.fullscreenElement;\n        if (canvasElem === currentFullScreenElem) {\n            this.exitFullScreen(canvasElem);\n        } else {\n            this.openFullScreen(canvasElem);\n        }\n    };\n\n    openFullScreen = (elem) => {\n        if (elem.requestFullscreen) {\n            console.log(elem);\n            elem.requestFullscreen();\n        } else if (elem.webkitRequestFullscreen) {\n            /* Safari */\n            elem.webkitRequestFullscreen();\n        } else if (elem.msRequestFullscreen) {\n            /* IE11 */\n            elem.msRequestFullscreen();\n        }\n    };\n\n    exitFullScreen = (elem) => {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            /* Safari */\n            document.webkitExitFullscreen();\n        } else if (document.msExitFullscreen) {\n            /* IE11 */\n            document.msExitFullscreen();\n        }\n    };\n\n    render() {\n        return <div {...this.props} onClick={this.toggleCavasFullScreen}></div>;\n    }\n}\n\nexport default FullscreenElem;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport Maze from \"./Maze\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\n\nclass MazeGeneratoe extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        const FRAME_RATE = 30;\n        let maze;\n        let framesSinceMazeCompleted = 0;\n\n        const getCanvasHeight = () => {\n            return window.innerHeight;\n        };\n\n        const getCanvasWidth = () => {\n            return window.innerWidth;\n        };\n\n        p.setup = () => {\n            const cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n\n            p.frameRate(FRAME_RATE);\n\n            framesSinceMazeCompleted = 0;\n            maze = new Maze(20, 20);\n        };\n\n        p.draw = () => {\n            p.background(51);\n\n            if (framesSinceMazeCompleted === FRAME_RATE) {\n                framesSinceMazeCompleted = 0;\n                maze = new Maze(20, 20);\n            } else if (maze.completed()) {\n                framesSinceMazeCompleted++;\n            }\n\n            maze.show(p, getCanvasWidth(), getCanvasHeight());\n            maze.update();\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(window.innerWidth, window.innerHeight);\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <FullscreenElem id='canvas' />\n            </div>\n        );\n    }\n}\nexport default MazeGeneratoe;\n","import React from \"react\";\nimport p5 from \"p5\";\n\nclass ChaosGame extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t\tthis.points = [];\n\t\tthis.numPoints = 3;\n\t\tthis.prevMarker = new p5.Vector(0, 0);\n\t}\n\n\tsketch = (p) => {\n\t\tp.setup = () => {\n\t\t\tconst cnv = p.createCanvas(window.innerWidth, window.innerHeight);\n\t\t\tcnv.style(\"display\", \"block\");\n\t\t\tthis.createNewGame();\n\t\t};\n\n\t\tthis.createNewGame = () => {\n\t\t\tthis.points = [];\n\t\t\tthis.numPoints = 3;\n\t\t\tconst smallestDim = p.min(window.innerWidth, window.innerHeight);\n\t\t\tconst radius = (smallestDim * 0.9) / 2;\n\n\t\t\tp.angleMode(p.RADIANS);\n\t\t\tconst angleStep = p.TWO_PI / this.numPoints;\n\t\t\tfor (let i = 0; i < this.numPoints; i++) {\n\t\t\t\tlet angle = i * angleStep;\n\t\t\t\t// minus half pi so the first point is centered at the top\n\t\t\t\tangle -= p.PI / 2;\n\t\t\t\tconst point = p5.Vector.fromAngle(angle);\n\t\t\t\tpoint.mult(radius);\n\t\t\t\tpoint.add(window.innerWidth / 2, window.innerHeight / 2);\n\t\t\t\tthis.points.push(point);\n\t\t\t}\n\n\t\t\tthis.prevMarker = p.createVector(\n\t\t\t\tp.random(window.innerWidth),\n\t\t\t\tp.random(window.innerHeight)\n\t\t\t);\n\n\t\t\tthis.drawNewGame();\n\t\t};\n\n\t\tthis.drawNewGame = () => {\n\t\t\tp.background(51);\n\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tp.stroke(255);\n\t\t\t\tp.fill(255);\n\t\t\t\tp.circle(point.x, point.y, 10);\n\t\t\t});\n\n\t\t\tp.noStroke();\n\t\t\tp.fill(255, 0, 255, 100);\n\t\t\tp.circle(this.prevMarker.x, this.prevMarker.y, 5);\n\t\t};\n\n\t\tp.draw = () => {\n\t\t\tconst randomPoint = p.random(this.points);\n\t\t\tconst newMarker = p5.Vector.lerp(this.prevMarker, randomPoint, 0.5);\n\t\t\tp.noStroke();\n\t\t\tp.fill(255, 0, 255, 100);\n\t\t\tp.circle(newMarker.x, newMarker.y, 5);\n\n\t\t\tthis.prevMarker = newMarker;\n\t\t};\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(window.innerWidth, window.innerHeight);\n\t\t\tthis.createNewGame();\n\t\t};\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.myP5 = new p5(this.sketch, this.myRef.current);\n\t}\n\n\trender() {\n\t\treturn <div ref={this.myRef}></div>;\n\t}\n}\nexport default ChaosGame;\n","export const home = \"/\";\n\nexport const chaosGame = \"/chaosGame\";\nexport const beautifulTrig = \"/beautifulTrigonometry\";\nexport const flockingSimulation = \"/flockingSimulation\";\nexport const hexes = \"/hexes\";\nexport const lissajousCurveTable = \"/lissajousCurveTable\";\nexport const matrixRain = \"/matrixRain\";\nexport const maurerRose = \"/maurerRose\";\nexport const mazeGenerator = \"/mazeGenerator\";\nexport const moduloTimesTable = \"/moduloTimesTable\";\nexport const snowflakeGenerator = \"/snowflakeGenerator\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction SketchImage(props) {\n    return (\n        <img\n            loading={props.loading}\n            src={props.image}\n            srcSet={props.srcset}\n            sizes={props.sizes}\n            alt='Avatar'\n            className='image'\n        ></img>\n    );\n}\n\nSketchImage.propTypes = {\n    image: PropTypes.string.isRequired,\n    srcset: PropTypes.string,\n    sizes: PropTypes.string,\n    loading: PropTypes.string,\n};\n\nSketchImage.defaultProps = {\n    loading: \"lazy\",\n};\n\nexport default SketchImage;\n","export default __webpack_public_path__ + \"static/media/beautifulTrigDisabled-1920w.d477f46e.jpeg\";","export default __webpack_public_path__ + \"static/media/beautifulTrigDisabled-1080w.492cc9da.jpeg\";","export default __webpack_public_path__ + \"static/media/beautifulTrigDisabled-720w.c04340b1.jpeg\";","export default __webpack_public_path__ + \"static/media/beautifulTrigDisabled-480w.ee047469.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport BeautifulTrigFile1920 from \"../../images/beautifulTrig/beautifulTrigDisabled-1920w.jpeg\";\nimport BeautifulTrigFile1080 from \"../../images/beautifulTrig/beautifulTrigDisabled-1080w.jpeg\";\nimport BeautifulTrigFile720 from \"../../images/beautifulTrig/beautifulTrigDisabled-720w.jpeg\";\nimport BeautifulTrigFile480 from \"../../images/beautifulTrig/beautifulTrigDisabled-480w.jpeg\";\n\nlet srcSetString =\n    BeautifulTrigFile1920 +\n    \" 1920w, \" +\n    BeautifulTrigFile1080 +\n    \" 1080w, \" +\n    BeautifulTrigFile720 +\n    \" 720w, \" +\n    BeautifulTrigFile480 +\n    \" 480w\";\n\nfunction BeautifulTrigImg(props) {\n    return (\n        <SketchImage\n            image={BeautifulTrigFile1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nBeautifulTrigImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default BeautifulTrigImg;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SketchTile.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport MobileFriendly from \"@material-ui/icons/MobileFriendly\";\n\nfunction SketchTile(props) {\n    const history = useHistory();\n\n    function handleClick() {\n        history.push(props.routerPath);\n    }\n\n    return (\n        <div className='sketch-tile' onClick={handleClick}>\n            <div className='text'>\n                {props.image}\n                <h2>\n                    {props.title} {props.isMobileFriendly && <MobileFriendly />}\n                </h2>\n                <p>{props.desc}</p>\n            </div>\n        </div>\n    );\n}\n\nSketchTile.propTypes = {\n    title: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n    image: PropTypes.element.isRequired,\n    routerPath: PropTypes.string.isRequired,\n    isMobileFriendly: PropTypes.bool,\n};\n\nSketchTile.defaultProps = {\n    isMobileFriendly: false,\n};\n\nexport default SketchTile;\n","export default __webpack_public_path__ + \"static/media/flockingSimulation-1920w.e6164521.jpeg\";","export default __webpack_public_path__ + \"static/media/flockingSimulation-1080w.ba555a6c.jpeg\";","export default __webpack_public_path__ + \"static/media/flockingSimulation-720w.49c44200.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport FlockingSimulation1920 from \"../../images/flockingSimulation/flockingSimulation-1920w.jpeg\";\nimport FlockingSimulation1080 from \"../../images/flockingSimulation/flockingSimulation-1080w.jpeg\";\nimport FlockingSimulation720 from \"../../images/flockingSimulation/flockingSimulation-720w.jpeg\";\nimport FlockingSimulation480 from \"../../images/flockingSimulation/flockingSimulation-480w.jpeg\";\n\nlet srcSetString =\n    FlockingSimulation1920 +\n    \" 1920w, \" +\n    FlockingSimulation1080 +\n    \" 1080w, \" +\n    FlockingSimulation720 +\n    \" 720w, \" +\n    FlockingSimulation480 +\n    \" 480w\";\n\nfunction FlockingSimulationImg(props) {\n    return (\n        <SketchImage\n            image={FlockingSimulation1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nFlockingSimulationImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default FlockingSimulationImg;\n","export default __webpack_public_path__ + \"static/media/snowflakeGenerator-1920w.12907d60.jpeg\";","export default __webpack_public_path__ + \"static/media/snowflakeGenerator-1080w.4c735d08.jpeg\";","export default __webpack_public_path__ + \"static/media/snowflakeGenerator-720w.44cc48de.jpeg\";","export default __webpack_public_path__ + \"static/media/snowflakeGenerator-480w.0d2a166b.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport SnowflakeGenerator1920 from \"../../images/snowflakeGenerator/snowflakeGenerator-1920w.jpeg\";\nimport SnowflakeGenerator1080 from \"../../images/snowflakeGenerator/snowflakeGenerator-1080w.jpeg\";\nimport SnowflakeGenerator720 from \"../../images/snowflakeGenerator/snowflakeGenerator-720w.jpeg\";\nimport SnowflakeGenerator480 from \"../../images/snowflakeGenerator/snowflakeGenerator-480w.jpeg\";\n\nlet srcSetString =\n    SnowflakeGenerator1920 +\n    \" 1920w, \" +\n    SnowflakeGenerator1080 +\n    \" 1080w, \" +\n    SnowflakeGenerator720 +\n    \" 720w, \" +\n    SnowflakeGenerator480 +\n    \" 480w\";\n\nfunction SnowflakeGeneratorImg(props) {\n    return (\n        <SketchImage\n            image={SnowflakeGenerator1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nSnowflakeGeneratorImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default SnowflakeGeneratorImg;\n","export default __webpack_public_path__ + \"static/media/moduloTimesTable-1920w.fd1823f9.jpeg\";","export default __webpack_public_path__ + \"static/media/moduloTimesTable-1080w.3ff77cf4.jpeg\";","export default __webpack_public_path__ + \"static/media/moduloTimesTable-720w.f96e392c.jpeg\";","export default __webpack_public_path__ + \"static/media/moduloTimesTable-480w.e44197ac.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport ModuloTimesTable1920 from \"../../images/moduloTimesTable/moduloTimesTable-1920w.jpeg\";\nimport ModuloTimesTable1080 from \"../../images/moduloTimesTable/moduloTimesTable-1080w.jpeg\";\nimport ModuloTimesTable720 from \"../../images/moduloTimesTable/moduloTimesTable-720w.jpeg\";\nimport ModuloTimesTable480 from \"../../images/moduloTimesTable/moduloTimesTable-480w.jpeg\";\n\nlet srcSetString =\n    ModuloTimesTable1920 +\n    \" 1920w, \" +\n    ModuloTimesTable1080 +\n    \" 1080w, \" +\n    ModuloTimesTable720 +\n    \" 720w, \" +\n    ModuloTimesTable480 +\n    \" 480w\";\n\nfunction ModuloTimesTableImg(props) {\n    return (\n        <SketchImage\n            image={ModuloTimesTable1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nModuloTimesTableImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default ModuloTimesTableImg;\n","export default __webpack_public_path__ + \"static/media/matrixRain-1920w.1c69c44a.jpeg\";","export default __webpack_public_path__ + \"static/media/matrixRain-1080w.8a5f1add.jpeg\";","export default __webpack_public_path__ + \"static/media/matrixRain-720w.3b14c68f.jpeg\";","export default __webpack_public_path__ + \"static/media/matrixRain-480w.5e6befc4.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport MatrixRain1920 from \"../../images/matrixRain/matrixRain-1920w.jpeg\";\nimport MatrixRain1080 from \"../../images/matrixRain/matrixRain-1080w.jpeg\";\nimport MatrixRain720 from \"../../images/matrixRain/matrixRain-720w.jpeg\";\nimport MatrixRain480 from \"../../images/matrixRain/matrixRain-480w.jpeg\";\n\nlet srcSetString =\n    MatrixRain1920 +\n    \" 1920w, \" +\n    MatrixRain1080 +\n    \" 1080w, \" +\n    MatrixRain720 +\n    \" 720w, \" +\n    MatrixRain480 +\n    \" 480w\";\n\nfunction MatrixRainImg(props) {\n    return (\n        <SketchImage\n            image={MatrixRain1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nMatrixRainImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default MatrixRainImg;\n","export default __webpack_public_path__ + \"static/media/lissajousCurveTable-1920w.0b44fb1a.jpeg\";","export default __webpack_public_path__ + \"static/media/lissajousCurveTable-1080w.17554cb6.jpeg\";","export default __webpack_public_path__ + \"static/media/lissajousCurveTable-720w.c8f80696.jpeg\";","export default __webpack_public_path__ + \"static/media/lissajousCurveTable-480w.9a309bb2.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport LissajousCurveTable1920 from \"../../images/lissajousCurveTable/lissajousCurveTable-1920w.jpeg\";\nimport LissajousCurveTable1080 from \"../../images/lissajousCurveTable/lissajousCurveTable-1080w.jpeg\";\nimport LissajousCurveTable720 from \"../../images/lissajousCurveTable/lissajousCurveTable-720w.jpeg\";\nimport LissajousCurveTable480 from \"../../images/lissajousCurveTable/lissajousCurveTable-480w.jpeg\";\n\nlet srcSetString =\n    LissajousCurveTable1920 +\n    \" 1920w, \" +\n    LissajousCurveTable1080 +\n    \" 1080w, \" +\n    LissajousCurveTable720 +\n    \" 720w, \" +\n    LissajousCurveTable480 +\n    \" 480w\";\n\nfunction LissajousCurveTableImg(props) {\n    return (\n        <SketchImage\n            image={LissajousCurveTable1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nLissajousCurveTableImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default LissajousCurveTableImg;\n","export default __webpack_public_path__ + \"static/media/maurerRose-1920w.f521bf6d.jpeg\";","export default __webpack_public_path__ + \"static/media/maurerRose-1080w.265019ab.jpeg\";","export default __webpack_public_path__ + \"static/media/maurerRose-720w.acf80132.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport MaurerRose1920 from \"../../images/maurerRose/maurerRose-1920w.jpeg\";\nimport MaurerRose1080 from \"../../images/maurerRose/maurerRose-1080w.jpeg\";\nimport MaurerRose720 from \"../../images/maurerRose/maurerRose-720w.jpeg\";\nimport MaurerRose480 from \"../../images/maurerRose/maurerRose-480w.jpeg\";\n\nlet srcSetString =\n    MaurerRose1920 +\n    \" 1920w, \" +\n    MaurerRose1080 +\n    \" 1080w, \" +\n    MaurerRose720 +\n    \" 720w, \" +\n    MaurerRose480 +\n    \" 480w\";\n\nfunction MaurerRoseImg(props) {\n    return (\n        <SketchImage\n            image={MaurerRose1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nMaurerRoseImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default MaurerRoseImg;\n","export default __webpack_public_path__ + \"static/media/chaosGame-1920w.4aceb132.jpeg\";","export default __webpack_public_path__ + \"static/media/chaosGame-1080w.956208b5.jpeg\";","export default __webpack_public_path__ + \"static/media/chaosGame-720w.5d57924f.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport ChaosGame1920 from \"../../images/chaosGame/chaosGame-1920w.jpeg\";\nimport ChaosGame1080 from \"../../images/chaosGame/chaosGame-1080w.jpeg\";\nimport ChaosGame720 from \"../../images/chaosGame/chaosGame-720w.jpeg\";\nimport ChaosGame480 from \"../../images/chaosGame/chaosGame-480w.jpeg\";\n\nlet srcSetString =\n    ChaosGame1920 +\n    \" 1920w, \" +\n    ChaosGame1080 +\n    \" 1080w, \" +\n    ChaosGame720 +\n    \" 720w, \" +\n    ChaosGame480 +\n    \" 480w\";\n\nfunction ChaosGameImg(props) {\n    return (\n        <SketchImage\n            image={ChaosGame1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nChaosGameImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default ChaosGameImg;\n","export default __webpack_public_path__ + \"static/media/randomHexes-1920w.e5c8cdc6.jpeg\";","export default __webpack_public_path__ + \"static/media/randomHexes-1080w.516f8edb.jpeg\";","export default __webpack_public_path__ + \"static/media/randomHexes-720w.e48f0225.jpeg\";","export default __webpack_public_path__ + \"static/media/randomHexes-480w.9a52bf2c.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport HexesFile1920 from \"../../images/hexes/randomHexes-1920w.jpeg\";\nimport HexesFile1080 from \"../../images/hexes/randomHexes-1080w.jpeg\";\nimport HexesFile720 from \"../../images/hexes/randomHexes-720w.jpeg\";\nimport HexesFile480 from \"../../images/hexes/randomHexes-480w.jpeg\";\n\nlet srcSetString =\n    HexesFile1920 +\n    \" 1920w, \" +\n    HexesFile1080 +\n    \" 1080w, \" +\n    HexesFile720 +\n    \" 720w, \" +\n    HexesFile480 +\n    \" 480w\";\n\nfunction HexesImg(props) {\n    return (\n        <SketchImage\n            image={HexesFile1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nHexesImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default HexesImg;\n","export default __webpack_public_path__ + \"static/media/mazeGenerator-1920w.a8e0ce9d.jpeg\";","export default __webpack_public_path__ + \"static/media/mazeGenerator-1080w.2b7a029c.jpeg\";","export default __webpack_public_path__ + \"static/media/mazeGenerator-720w.9c207854.jpeg\";","export default __webpack_public_path__ + \"static/media/mazeGenerator-480w.5f43dcc9.jpeg\";","import React from \"react\";\nimport SketchImage from \"./SketchImage\";\nimport PropTypes from \"prop-types\";\nimport MazeGeneratorFile1920 from \"../../images/mazeGenerator/mazeGenerator-1920w.jpeg\";\nimport MazeGeneratorFile1080 from \"../../images/mazeGenerator/mazeGenerator-1080w.jpeg\";\nimport MazeGeneratorFile720 from \"../../images/mazeGenerator/mazeGenerator-720w.jpeg\";\nimport MazeGeneratorFile480 from \"../../images/mazeGenerator/mazeGenerator-480w.jpeg\";\n\nlet srcSetString =\n    MazeGeneratorFile1920 +\n    \" 1920w, \" +\n    MazeGeneratorFile1080 +\n    \" 1080w, \" +\n    MazeGeneratorFile720 +\n    \" 720w, \" +\n    MazeGeneratorFile480 +\n    \" 480w\";\n\nfunction MazeGeneratorImg(props) {\n    return (\n        <SketchImage\n            image={MazeGeneratorFile1920}\n            srcset={srcSetString}\n            sizes='80vw'\n            loading={props.loading}\n        />\n    );\n}\n\nMazeGeneratorImg.propTypes = {\n    loading: PropTypes.string,\n};\n\nexport default MazeGeneratorImg;\n","import React from \"react\";\nimport \"./SketchList.scss\";\nimport BeautifulTrigImg from \"../sketchImages/BeautifulTrigImg\";\nimport * as routePaths from \"../../constants/RoutePaths\";\nimport SketchTile from \"../sketchTile/SketchTile\";\nimport FlockingSimulationImg from \"../sketchImages/FlockingSimulationImg\";\nimport SnowflakeGeneratorImg from \"../sketchImages/SnowflakeGenerator\";\nimport ModuloTimesTableImg from \"../sketchImages/ModuloTimesTable\";\nimport MatrixRainImg from \"../sketchImages/MatrixRain\";\nimport LissajousCurveTableImg from \"../sketchImages/LissajousCurveTableImg\";\nimport MaurerRoseImg from \"../sketchImages/MaurerRose\";\nimport ChaosGameImg from \"../sketchImages/ChaosGameImg\";\nimport HexesImg from \"../sketchImages/HexesImg\";\nimport MazeGeneratorImg from \"../sketchImages/MazeGeneratorImg\";\n\nfunction SketchList(props) {\n    return (\n        <div className='sketch-list'>\n            <SketchTile\n                title='Maze Generator'\n                desc='Generates a solvable maze.'\n                image={<MazeGeneratorImg loading='auto' />}\n                routerPath={routePaths.mazeGenerator}\n                isMobileFriendly\n            />\n            <SketchTile\n                title='Hexes'\n                desc='A page of tiled hexes that grow/shrink in a random or center-out pattern. Click on the hexes animation to make it full screen.'\n                image={<HexesImg loading='auto' />}\n                routerPath={routePaths.hexes}\n                isMobileFriendly\n            />\n            <SketchTile\n                title='Beautiful Trigonometry'\n                desc='Points on the spokes of a circle following a main point as it rotates around the edge of the circle. Press the button to show how the points are calulated and how trigonometry is related to circles.'\n                image={<BeautifulTrigImg loading='auto' />}\n                routerPath={routePaths.beautifulTrig}\n                isMobileFriendly\n            />\n            <SketchTile\n                title='Flocking Simulation'\n                desc='A simulated flock of birds using Boids program.'\n                image={<FlockingSimulationImg />}\n                routerPath={routePaths.flockingSimulation}\n            />\n            <SketchTile\n                title='Snowflake Generator'\n                desc='Repeatedly grow a random snowflake until it reaches full size and then begin again.'\n                image={<SnowflakeGeneratorImg />}\n                routerPath={routePaths.snowflakeGenerator}\n                isMobileFriendly\n            />\n            <SketchTile\n                title='Modulo Times Table'\n                desc='A cicle with numbers 0 to N-1 around the outside. Each number is then multiplied by a factor F modulo N, and a line is drawn from it to the result. The multiplication factor is increased as time goes on.'\n                image={<ModuloTimesTableImg />}\n                routerPath={routePaths.moduloTimesTable}\n            />\n            <SketchTile\n                title='Matrix Rain'\n                desc='The falling streams of symbols seen in the Matrix films.'\n                image={<MatrixRainImg />}\n                routerPath={routePaths.matrixRain}\n            />\n            <SketchTile\n                title='Lissajous Curve Table'\n                desc='A table with rotating cogs in the top row and left column. The speed of the cogs increases going right/down along the table. Horizontal and vertical lines are then drawn from a point on the cogs edge. Where these lines intersect a path is traced.'\n                image={<LissajousCurveTableImg />}\n                routerPath={routePaths.lissajousCurveTable}\n            />\n            <SketchTile\n                title='Maurer Rose'\n                desc='A set of points along rose curve connected with straight lines. Animated so that the set of points and number of rose petals changes over time.'\n                image={<MaurerRoseImg />}\n                routerPath={routePaths.maurerRose}\n            />\n            <SketchTile\n                title='Chaos Game'\n                desc='Place a series of N points, 3 points in this example. Draw a dot at a random place on the screen. Randomly chose a point and move the dot halfway to it, and then repeat forever. Depending on the number of points, different patterns will appear.'\n                image={<ChaosGameImg />}\n                routerPath={routePaths.chaosGame}\n                isMobileFriendly\n            />\n        </div>\n    );\n}\n\nexport default SketchList;\n","import React from \"react\";\nimport MobileFriendly from \"@material-ui/icons/MobileFriendly\";\n\nfunction Description(props) {\n    return (\n        <div className='description'>\n            <p>\n                A collection of animations made using{\" \"}\n                <a href='https://p5js.org/'>P5.js</a>, source code for this\n                website can be found on{\" \"}\n                <a href='https://github.com/churmd/p5'>github</a>\n            </p>\n            <p>\n                Some animations are intensive to run, so mobile friendly ones\n                are marked with the icon <MobileFriendly />\n            </p>\n            <p>\n                Many of these projects have been inspired by the following\n                sources and tutorials:{\" \"}\n                <a href='https://www.youtube.com/user/shiffman'>\n                    The coding Train\n                </a>\n                ,{\" \"}\n                <a href='https://www.youtube.com/user/numberphile'>\n                    Numberphile\n                </a>\n                ,{\" \"}\n                <a href='https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw/featured'>\n                    3Blue1Brown\n                </a>\n            </p>\n        </div>\n    );\n}\n\nexport default Description;\n","import React from \"react\";\nimport \"./Home.scss\";\nimport SketchList from \"../sketchList/SketchList\";\nimport Description from \"../description/Description\";\n\nfunction Home(props) {\n\treturn (\n\t\t<div className='home'>\n\t\t\t<h1>P5 Animations</h1>\n\t\t\t<Description />\n\t\t\t<SketchList />\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React from \"react\";\nimport p5 from \"p5\";\nimport \"./BeautifulTrig.scss\";\n\nclass BeautifulTrig extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let angle = 0;\n        let numLines = 1;\n        let showTrigEnabled = false;\n        const rotationSpeed = 0.01;\n\n        p.setup = () => {\n            const cnv = p.createCanvas(getCanvasWidth(), getCanvasHeight());\n            cnv.style(\"display\", \"block\");\n\n            createControls();\n        };\n\n        const createControls = () => {\n            const showTrigButton = p.createButton(\"Show Trigonometry\");\n            showTrigButton.parent(\"controls\");\n\n            showTrigButton.mousePressed(() => {\n                showTrigEnabled = !showTrigEnabled;\n                if (showTrigEnabled) {\n                    showTrigButton.html(\"Hide Trigonometry\");\n                    numLines = 2;\n                } else {\n                    showTrigButton.html(\"Show Trigonometry\");\n                    p.redraw();\n                }\n            });\n        };\n\n        p.draw = () => {\n            p.background(200);\n\n            const width = getCanvasWidth();\n            const height = getCanvasHeight();\n            const circleDiameter = Math.min(width, height) * 0.9;\n            const circleRadius = circleDiameter / 2;\n\n            p.translate(width / 2, height / 2);\n\n            showLines(circleRadius);\n            showOuterCircleLine(circleDiameter);\n            showTrigLines(circleRadius);\n            showPoints(circleRadius);\n            showOuterCirclePoint(circleRadius);\n\n            updateState();\n        };\n\n        const showLines = (circleRadius) => {\n            const roatationStep = p.PI / numLines;\n            for (let i = 0; i < numLines; i++) {\n                p.push();\n\n                p.rotate(i * roatationStep);\n                p.stroke(0);\n                p.strokeWeight(1);\n                p.line(-circleRadius, 0, circleRadius, 0);\n\n                p.pop();\n            }\n        };\n\n        const showOuterCircleLine = (circleDiameter) => {\n            p.push();\n\n            p.stroke(0);\n            p.strokeWeight(5);\n            p.noFill();\n            p.ellipse(0, 0, circleDiameter, circleDiameter);\n\n            p.pop();\n        };\n\n        const showTrigLines = (circleRadius) => {\n            if (!showTrigEnabled) {\n                return;\n            }\n            p.push();\n\n            p.colorMode(p.HSL, 360);\n            const sinColour = p.color(0, 200, 200);\n            const cosColour = p.color(180, 200, 200);\n\n            p.push();\n\n            p.noFill();\n            p.strokeWeight(5);\n\n            const sinArcDiameter = circleRadius * 0.9;\n            p.stroke(sinColour);\n            p.arc(0, 0, sinArcDiameter, sinArcDiameter, angle, 0);\n\n            const cosArcDiameter = circleRadius * 1.1;\n            p.stroke(cosColour);\n            p.arc(0, 0, cosArcDiameter, cosArcDiameter, angle, 0 + p.HALF_PI);\n\n            p.pop();\n\n            p.push();\n\n            const xPosOnCircle = p.cos(angle) * circleRadius;\n            const yPosOnCircle = p.sin(angle) * circleRadius;\n\n            const cosPosition = p.cos(angle) * circleRadius;\n            const sinePosition = p.sin(angle) * circleRadius;\n\n            p.stroke(0);\n            p.strokeWeight(2);\n            p.line(xPosOnCircle, yPosOnCircle, cosPosition, 0);\n            p.line(xPosOnCircle, yPosOnCircle, 0, sinePosition);\n            p.line(xPosOnCircle, yPosOnCircle, 0, 0);\n\n            p.pop();\n\n            // Need to consider where to place this on veritcal mobile phones\n\n            // const sinAngleDegrees = Math.abs(parseInt(p.degrees(angle)) % 360);\n            // const cosAngleDegrees = Math.abs(\n            //     parseInt(p.degrees(angle - p.HALF_PI)) % 360\n            // );\n\n            // p.textSize(30);\n            // p.textAlign(p.RIGHT);\n            // p.fill(sinColour);\n            // p.text(`Sin angle is ${sinAngleDegrees}`, getCanvasWidth() / 2, 0);\n            // p.fill(cosColour);\n            // p.text(`Cos angle is ${cosAngleDegrees}`, getCanvasWidth() / 2, 50);\n\n            p.pop();\n        };\n\n        const showPoints = (circleRadius) => {\n            const roatationStep = p.PI / numLines;\n            const pointOffset = -p.PI / numLines;\n            const pointSize = 0.05 * circleRadius;\n            for (let i = 0; i < numLines; i++) {\n                p.push();\n                p.rotate(i * roatationStep);\n\n                const pointAngle = angle + i * pointOffset;\n                const cosPosition = p.cos(pointAngle) * circleRadius;\n\n                p.colorMode(p.HSL, 360);\n                const hue = (360 / numLines) * i;\n                const colour = p.color(hue, 250, 200);\n\n                p.fill(colour);\n                p.stroke(0);\n                p.strokeWeight(2);\n\n                p.ellipse(cosPosition, 0, pointSize, pointSize);\n\n                p.pop();\n            }\n        };\n\n        const showOuterCirclePoint = (circleRadius) => {\n            const xPos = p.cos(angle) * circleRadius;\n            const yPos = p.sin(angle) * circleRadius;\n            const pointSize = 0.05 * circleRadius;\n\n            p.push();\n\n            p.stroke(0);\n            p.strokeWeight(2);\n            p.colorMode(p.HSL, 360);\n            const colour = p.color(0, 0, 360);\n            p.fill(colour);\n            p.ellipse(xPos, yPos, pointSize, pointSize);\n\n            p.pop();\n        };\n\n        const updateState = () => {\n            angle -= rotationSpeed;\n            if (angle < -p.TWO_PI) {\n                angle += p.TWO_PI;\n                if (!showTrigEnabled) {\n                    numLines += 1;\n                    if (numLines > 32) {\n                        numLines = 1;\n                    }\n                }\n            }\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(getCanvasWidth(), getCanvasHeight());\n        };\n\n        const getCanvasHeight = () => {\n            return window.innerHeight * 0.95;\n        };\n\n        const getCanvasWidth = () => {\n            return window.innerWidth;\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    render() {\n        return (\n            <div className='beautiful-trig-sketch'>\n                <div ref={this.myRef}></div>\n                <div id='controls'></div>\n            </div>\n        );\n    }\n}\n\nexport default BeautifulTrig;\n","import p5 from \"p5\";\n\nexport default class Hex {\n    constructor(p, x, y, maxSideLength) {\n        this.p = p;\n        this.x = x;\n        this.y = y;\n        this.maxSideLength = maxSideLength;\n        this.sideLength = maxSideLength;\n        this.growing = false;\n        this.growthRate = 0;\n        this.fillColour = p.color(255, 255, 255);\n        this.outlineColour = p.color(0, 0, 0);\n    }\n\n    setSideLength(sideLength) {\n        this.sideLength = sideLength;\n    }\n\n    grow() {\n        this.growing = true;\n    }\n\n    shrink() {\n        this.growing = false;\n    }\n\n    setColour(fillColour, outlineColour) {\n        this.fillColour = fillColour;\n        this.outlineColour = outlineColour;\n    }\n\n    update() {\n        this.growthRate = 0.1;\n        if (this.sideLength >= this.maxSideLength) {\n            this.growing = false;\n        }\n\n        if (this.sideLength <= 1) {\n            this.growing = true;\n        }\n\n        if (this.growing) {\n            this.sideLength += this.growthRate;\n            if (this.sideLength > this.maxSideLength) {\n                this.sideLength = this.maxSideLength;\n            }\n        } else {\n            this.sideLength -= this.growthRate;\n            if (this.sideLength < 1) {\n                this.sideLength = 1;\n            }\n        }\n    }\n\n    show() {\n        let pointA = p5.Vector.fromAngle(this.p.radians(-90), this.sideLength);\n        pointA.add(this.x, this.y);\n\n        let pointB = p5.Vector.fromAngle(this.p.radians(-30), this.sideLength);\n        pointB.add(this.x, this.y);\n\n        let pointC = p5.Vector.fromAngle(this.p.radians(30), this.sideLength);\n        pointC.add(this.x, this.y);\n\n        let pointD = p5.Vector.fromAngle(this.p.radians(90), this.sideLength);\n        pointD.add(this.x, this.y);\n\n        let pointE = p5.Vector.fromAngle(this.p.radians(150), this.sideLength);\n        pointE.add(this.x, this.y);\n\n        let pointF = p5.Vector.fromAngle(this.p.radians(210), this.sideLength);\n        pointF.add(this.x, this.y);\n\n        this.p.push();\n\n        this.p.fill(this.fillColour);\n        this.p.strokeWeight(1);\n        this.p.stroke(this.outlineColour);\n\n        this.p.beginShape();\n        this.p.vertex(pointA.x, pointA.y);\n        this.p.vertex(pointB.x, pointB.y);\n        this.p.vertex(pointC.x, pointC.y);\n        this.p.vertex(pointD.x, pointD.y);\n        this.p.vertex(pointE.x, pointE.y);\n        this.p.vertex(pointF.x, pointF.y);\n        this.p.endShape(this.p.CLOSE);\n\n        this.p.pop();\n    }\n}\n","import Hex from \"./Hex\";\n\n/**\n * Creates a tiled hex grid with a hex placed in the center of the screen.\n */\nexport default class HexGrid {\n    constructor(p, canvasWidth, canvasHeight, hexSideLength) {\n        this.p = p;\n        this.canvasWidth = canvasWidth;\n        this.canvasHeight = canvasHeight;\n        this.hexSideLength = hexSideLength;\n\n        const horizontalHexSpacing = p.sin(60) * hexSideLength * 2;\n        const verticleHexSpacing = 2 * hexSideLength * 0.75;\n\n        const midWidth = canvasWidth / 2;\n        const midHeight = canvasHeight / 2;\n\n        const maxHexXPos = midWidth + horizontalHexSpacing / 2;\n        const maxHexYPos = midHeight + verticleHexSpacing / 2;\n\n        this.hexes = this.__createHexes(\n            horizontalHexSpacing,\n            verticleHexSpacing,\n            maxHexXPos,\n            maxHexYPos\n        );\n    }\n\n    __createHexes(\n        horizontalHexSpacing,\n        verticleHexSpacing,\n        maxHexXPos,\n        maxHexYPos\n    ) {\n        let hexes = [];\n        let visited = [];\n        let explore = [];\n\n        explore.push({ x: 0, y: 0 });\n\n        while (explore.length > 0) {\n            let coord = explore.pop();\n\n            // Coordinates are floating points, so checking for equality is difficult\n            // and converting to int leads to rounding issues.\n            // So just check there is not a very close coordinate already visited.\n            const matchesThisCoord = (element) => {\n                let xDiff = Math.abs(element.x - coord.x);\n                let yDiff = Math.abs(element.y - coord.y);\n                return xDiff < 2 && yDiff < 2;\n            };\n\n            if (visited.some(matchesThisCoord)) {\n                continue;\n            }\n\n            if (\n                coord.x > maxHexXPos ||\n                coord.x < -maxHexXPos ||\n                coord.y > maxHexYPos ||\n                coord.y < -maxHexYPos\n            ) {\n                continue;\n            }\n\n            visited.push(coord);\n\n            let surroundingHexes = this.__getSurroundingHexes(\n                coord,\n                horizontalHexSpacing,\n                verticleHexSpacing\n            );\n            explore = explore.concat(surroundingHexes);\n        }\n\n        visited.forEach((coord) => {\n            let h = new Hex(this.p, coord.x, coord.y, this.hexSideLength);\n            hexes.push(h);\n        });\n\n        return hexes;\n    }\n\n    __getSurroundingHexes(coord, horizontalHexSpacing, verticleHexSpacing) {\n        let surroundingHexes = [];\n\n        surroundingHexes.push({\n            x: coord.x - horizontalHexSpacing,\n            y: coord.y,\n        });\n        surroundingHexes.push({\n            x: coord.x + horizontalHexSpacing,\n            y: coord.y,\n        });\n        surroundingHexes.push({\n            x: coord.x - horizontalHexSpacing / 2,\n            y: coord.y + verticleHexSpacing,\n        });\n        surroundingHexes.push({\n            x: coord.x + horizontalHexSpacing / 2,\n            y: coord.y + verticleHexSpacing,\n        });\n        surroundingHexes.push({\n            x: coord.x - horizontalHexSpacing / 2,\n            y: coord.y - verticleHexSpacing,\n        });\n        surroundingHexes.push({\n            x: coord.x + horizontalHexSpacing / 2,\n            y: coord.y - verticleHexSpacing,\n        });\n\n        return surroundingHexes;\n    }\n\n    update() {\n        this.hexes.forEach((hex) => {\n            hex.update();\n        });\n    }\n\n    show() {\n        this.p.push();\n        this.p.translate(this.canvasWidth / 2, this.canvasHeight / 2);\n\n        this.hexes.forEach((hex) => {\n            hex.show();\n        });\n\n        this.p.pop();\n    }\n}\n","import HexGrid from \"./HexGrid\";\n\nconst timeBetweenColourChange = (60 / 255) * 1000;\n\nexport default class CenterOutHexGrid extends HexGrid {\n    constructor(p, canvasWidth, canvasHeight, hexSideLength) {\n        super(p, canvasWidth, canvasHeight, hexSideLength);\n        this.lastHueIncrementTime = Date.now();\n        this.setCenterOutPattern();\n    }\n\n    setCenterOutPattern() {\n        this.p.push();\n        this.p.colorMode(this.p.HSL, 255);\n\n        const maxDistFromCenter = this.p.dist(\n            this.canvasWidth / 2,\n            this.canvasHeight / 2,\n            0,\n            0\n        );\n\n        this.hexes.forEach((hex) => {\n            const hexDistFromCenter = this.p.dist(hex.x, hex.y, 0, 0);\n            const startingSideLength = this.p.map(\n                hexDistFromCenter,\n                0,\n                maxDistFromCenter,\n                this.hexSideLength,\n                0\n            );\n            hex.setSideLength(startingSideLength);\n            hex.grow();\n\n            const hue = this.p.map(\n                hexDistFromCenter,\n                0,\n                maxDistFromCenter,\n                180,\n                50\n            );\n            const fillColour = this.p.color(0, 150, hue);\n            const outlineColour = this.p.color(\n                this.p.hue(fillColour),\n                this.p.saturation(fillColour),\n                this.p.lightness(fillColour) / 2\n            );\n            hex.setColour(fillColour, outlineColour);\n        });\n\n        this.p.pop();\n    }\n\n    update() {\n        super.update();\n\n        const currentTime = Date.now();\n        if (currentTime - this.lastHueIncrementTime < timeBetweenColourChange) {\n            return;\n        }\n\n        this.lastHueIncrementTime = currentTime;\n        this.p.push();\n        this.p.colorMode(this.p.HSL, 255);\n\n        this.hexes.forEach((hex) => {\n            const fillColour = this.p.color(\n                this.p.hue(hex.fillColour) + 1,\n                this.p.saturation(hex.fillColour),\n                this.p.lightness(hex.fillColour)\n            );\n            const outlineColour = this.p.color(\n                this.p.hue(hex.outlineColour) + 1,\n                this.p.saturation(hex.outlineColour),\n                this.p.lightness(hex.outlineColour)\n            );\n            hex.setColour(fillColour, outlineColour);\n        });\n\n        this.p.pop();\n    }\n}\n","import HexGrid from \"./HexGrid\";\n\nexport default class RandomHexGrid extends HexGrid {\n    constructor(p, canvasWidth, canvasHeight, hexSideLength) {\n        super(p, canvasWidth, canvasHeight, hexSideLength);\n        this.setRandomPattern();\n    }\n\n    setRandomPattern() {\n        this.p.push();\n        this.p.colorMode(this.p.HSL, 255);\n\n        this.hexes.forEach((hex) => {\n            const maxColourVal = 256;\n            const hue = this.p.random(0, maxColourVal);\n            const sat = this.p.random(maxColourVal * 0.2, maxColourVal * 0.7);\n            const light = this.p.random(maxColourVal * 0.2, maxColourVal * 0.7);\n            const fillColour = this.p.color(hue, sat, light);\n            const outlineColour = this.p.color(\n                this.p.hue(fillColour),\n                this.p.saturation(fillColour),\n                this.p.lightness(fillColour) / 2\n            );\n            hex.setColour(fillColour, outlineColour);\n\n            const startingSize = this.p.random(0, this.hexSideLength);\n            hex.setSideLength(startingSize);\n\n            const isGrowing = this.p.random([true, false]);\n            if (isGrowing) {\n                hex.grow();\n            } else {\n                hex.shrink();\n            }\n        });\n\n        this.p.pop();\n    }\n\n    __;\n}\n","import React from \"react\";\nimport p5 from \"p5\";\nimport CenterOutHexGrid from \"./CenterOutHexGrid\";\nimport HexGrid from \"./HexGrid\";\nimport RandomHexGrid from \"./RandomHexGrid\";\nimport \"./Hexes.scss\";\nimport FullscreenElem from \"../../components/fullscreenElem/FullscreenElem\";\n\nclass Hexes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myRef = React.createRef();\n    }\n\n    sketch = (p) => {\n        let hexGrid;\n        let currentPattern;\n        let patternRadioGroup;\n\n        const randomPattern = \"Random\";\n        const centerOutPattern = \"CenterOutPattern\";\n\n        const getCanvasHeight = () => {\n            return window.innerHeight;\n        };\n\n        const getCanvasWidth = () => {\n            return window.innerWidth;\n        };\n\n        const getSideLength = () => {\n            let minDim = Math.min(getCanvasHeight(), getCanvasWidth());\n            return 0.05 * minDim;\n        };\n\n        const createHexGrid = () => {\n            switch (currentPattern) {\n                case randomPattern:\n                    return new RandomHexGrid(\n                        p,\n                        getCanvasWidth(),\n                        getCanvasHeight(),\n                        getSideLength()\n                    );\n                case centerOutPattern:\n                    return new CenterOutHexGrid(\n                        p,\n                        getCanvasWidth(),\n                        getCanvasHeight(),\n                        getSideLength()\n                    );\n                default:\n                    return new HexGrid(\n                        p,\n                        getCanvasWidth(),\n                        getCanvasHeight(),\n                        getSideLength()\n                    );\n            }\n        };\n\n        const createControls = () => {\n            patternRadioGroup = p.createRadio();\n            patternRadioGroup.option(randomPattern);\n            patternRadioGroup.option(centerOutPattern);\n            patternRadioGroup.parent(\"radioOptions\");\n\n            patternRadioGroup.selected(randomPattern);\n\n            currentPattern = patternRadioGroup.selected();\n        };\n\n        p.setup = () => {\n            const cnv = p.createCanvas(getCanvasWidth(), getCanvasHeight());\n            cnv.parent(\"canvas\");\n            cnv.style(\"display\", \"block\");\n\n            createControls();\n\n            p.angleMode(p.DEGREES);\n            hexGrid = createHexGrid();\n        };\n\n        p.draw = () => {\n            p.background(51);\n\n            if (patternRadioGroup.selected() !== currentPattern) {\n                currentPattern = patternRadioGroup.selected();\n                hexGrid = createHexGrid();\n            }\n\n            hexGrid.update();\n            hexGrid.show();\n        };\n\n        p.windowResized = () => {\n            p.resizeCanvas(getCanvasWidth(), getCanvasHeight());\n            hexGrid = createHexGrid();\n        };\n    };\n\n    componentDidMount() {\n        this.myP5 = new p5(this.sketch, this.myRef.current);\n    }\n\n    render() {\n        return (\n            <div ref={this.myRef}>\n                <FullscreenElem id='canvas' />\n                <div id='controls'>\n                    <div id='radioOptions'></div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Hexes;\n","import React from \"react\";\n\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\nimport Notfound from \"./NotFound\";\nimport ModuloTimesTable from \"./sketches/moduloTimesTableCircle/ModuloTimesTable\";\nimport SnowflakeGenerator from \"./sketches/snowfalkeGenerator/SnowflakeGenerator\";\nimport FlockingSimulation from \"./sketches/flockingSimulation/FlockingSimulation\";\nimport LissajousCurveTable from \"./sketches/lissajousCurveTable/LissajousCurveTable\";\nimport MatrixRain from \"./sketches/matrixRain/MatrixRain\";\nimport MaurerRose from \"./sketches/maurerRose/MaurerRose\";\nimport MazeGenerator from \"./sketches/mazeGenerator/MazeGenerator\";\nimport ChaosGame from \"./sketches/chaosGame/ChaosGame\";\nimport * as routePaths from \"./constants/RoutePaths\";\nimport Home from \"./components/home/Home\";\nimport BeautifulTrig from \"./sketches/beautifulTrig/BeautifulTrig\";\nimport Hexes from \"./sketches/hexes/Hexes\";\n\nconst routing = (\n    <Router>\n        <Switch>\n            <Route exact path={routePaths.home} component={Home} />\n            <Route\n                exact\n                path={routePaths.moduloTimesTable}\n                component={ModuloTimesTable}\n            />\n            <Route\n                exact\n                path={routePaths.snowflakeGenerator}\n                component={SnowflakeGenerator}\n            />\n            <Route\n                exact\n                path={routePaths.flockingSimulation}\n                component={FlockingSimulation}\n            />\n            <Route\n                exact\n                path={routePaths.lissajousCurveTable}\n                component={LissajousCurveTable}\n            />\n            <Route exact path={routePaths.matrixRain} component={MatrixRain} />\n            <Route exact path={routePaths.maurerRose} component={MaurerRose} />\n            <Route\n                exact\n                path={routePaths.mazeGenerator}\n                component={MazeGenerator}\n            />\n            <Route exact path={routePaths.chaosGame} component={ChaosGame} />\n            <Route\n                exact\n                path={routePaths.beautifulTrig}\n                component={BeautifulTrig}\n            />\n            <Route exact path={routePaths.hexes} component={Hexes} />\n            <Route component={Notfound} />\n        </Switch>\n    </Router>\n);\n\nfunction App() {\n    return <React.StrictMode>{routing}</React.StrictMode>;\n}\n\nexport default App;\n","import React from \"react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { hydrate, render } from \"react-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n\thydrate(<App />, rootElement);\n} else {\n\trender(<App />, rootElement);\n}\n"],"sourceRoot":""}